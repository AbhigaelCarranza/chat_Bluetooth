{"docstore/metadata": {"fd9e7a7d-90f3-4ccb-b4f9-57add24e258c": {"doc_hash": "09b9e3a36a08cb67812693aafb6a2dd3dd859a42ffc66c5cafd490ffb35e30c6"}, "67fad07e-914b-418a-97b9-37a1aa4dc69e": {"doc_hash": "d88b0667774515f61ab15deae93a35d3845cd43f816186d19bee72243713dfe4"}, "c4e97a49-dd88-4aa8-bf45-6cb9ad48c183": {"doc_hash": "f3689f318d645e86a29fb2831777c33cf32555efb6ef8ef3f95987ea95bb2ed3"}, "bd3aec19-a664-48f8-ac69-5afd3644580c": {"doc_hash": "41cec9bf4a58506604908177c01354ddaab106ae6611f251ac0257c71a7c688f"}, "44649460-c124-4a31-8539-ddf932b6df68": {"doc_hash": "3636e97fa3dc9ada098ecc2ab4f13dd191c20329d8c7e35e41dc9fb9d088e04d"}, "2996b822-0618-4677-a7c2-226dab5f6d85": {"doc_hash": "982952b8a2141ee04259a7ea2129c00840eed4e4d2d5342a81f44fa644043d03"}, "5bdc6c15-8aac-4cbf-a234-325b67ce70d9": {"doc_hash": "b5c354d3bb9d3807d2d0d6d5e9f7794ece8c740784f7ac8ebb4e87db6ec0667d"}, "c32f54f9-4b29-4ea7-9dae-728b4d14d79e": {"doc_hash": "807bffe9e9fa29c137d993d4ff49768d20430910444befbf24980821a23d8b11"}, "15b6df17-8462-4a75-9d8c-dcf66c61d822": {"doc_hash": "4e86627eb64f1d18842e68a44fa08c7ed979ba9785120919774bbe7af0718836"}, "ea561b1a-82ab-416b-bac1-e42e602d7fd9": {"doc_hash": "acdd9ca4cd4bbfd6c3856aab83d9a1899a4253b6a08e9547f1fd646c17555891"}, "c54f7062-e008-45fe-a113-2a7a06f31866": {"doc_hash": "52400e0ddd0c03122358bd39ec88a038731663163b508fe7f404815d91403d49"}, "0e3a4014-8d85-485f-91f4-cb86fe97d2b2": {"doc_hash": "ead29557900deed3f51bce6198c25020d93b6c3b2d5dfc8c5dc3c02b2b0effc3"}, "ae6bc19f-57d8-4549-9bcc-2944ffd42a52": {"doc_hash": "c3ea76be1d3633bfbcbcbabd77b3e73467d5b080064f367e3a22a11f09e3c551"}, "c58bf181-1fb2-41f8-9c82-3b040f2f9b51": {"doc_hash": "bf4c4cdeac2f98598f9784fd5c61bd61ddd54cb138a045e25c5be25fb9f9619a"}, "1954a776-1ab4-43c1-b320-376c90ec8a69": {"doc_hash": "1e8fd8c4cc9bea493f587c580de991398967e77c7a720b1c9d5d09aa92343be5"}, "7bfd13df-853f-4ade-a531-d47c39f449c6": {"doc_hash": "5cf5a2aa20ae3baf1a1ef57b10f5d697741b753bb1a8fc3b7a371371f2e0c237"}, "8b39d494-c2e6-4d73-a722-ef75d9a90864": {"doc_hash": "5ef675629e842f73e7fba29f2ec9e3894c7032a3b55232b93e9a4333df632734"}, "15b0ac0b-2bb5-4421-b28d-1e49ec192a4c": {"doc_hash": "0582355a6f7c65e56ea31acdf2fd4cae3d32fd321698dffc72a57a7cb1715202"}, "e5ed71a8-6627-4249-a475-c9fcd625ed1e": {"doc_hash": "2ed9619bfb41042684bbb56cc590b3742a40a12ff24bbcf6454216ca0058c30d"}, "109c0842-97d1-45ab-8318-fdfc60a1d1c6": {"doc_hash": "d98b72d65fe2247a9235f423be31252f186584bd9be5cc28e2113a20d28a03cf"}, "4361c13f-4dbe-4086-b32b-f85d1ea0f9aa": {"doc_hash": "d0591519c5038a8cd4a6f4d36a07355d9f6fd11f8e6ab1051160ddc40f9b02d4"}, "3671ba0e-f39e-4b6a-8400-05dd0326c5e2": {"doc_hash": "dfe544ea42e38a0b1437249723a0adbfebe1ef20aafc0fd89079efa532e6c6bb"}, "643134e3-13c2-4eaa-ac04-fbbf28ad3dc7": {"doc_hash": "2a3fa19175b9dd0308a77355819e0d4e9800e05170123f6742c1a315faf910cf"}, "deb7b3a6-1854-4ff0-8fb6-8c501d3f14a4": {"doc_hash": "d7596988d576f9d109e699c548e23482e8260e98d3300621519574152eb211ae"}, "a51a50b8-541b-4eeb-adb2-8b0483a41f82": {"doc_hash": "9cfad4734c368200f21663ce4fa860ababc8bf129db2fda055c77a7842370ce2"}, "c99276b4-1814-44f1-a123-ac921213f846": {"doc_hash": "8532486d0da87d3e6f607afe17c6c7aee9c988978f3423a9ff8d05ec6bbf77b6"}, "a24ad36e-1ea9-4fb9-9dc0-e80cc5dec545": {"doc_hash": "b1f491d7d794852fc44a2a38a5bead9984a53c66be379798d1dabbf701c1e8d6"}, "9081617d-9907-45d0-8175-fd230353d675": {"doc_hash": "672f332d39bbabea7bb9854b412ca9f3b13ec67a95bb0bd2038fa17b8ba4863c"}, "16f9a053-0364-41ea-b09a-1f5ba0fca4b5": {"doc_hash": "179412d90373291542c0bf3eec6d0daea451b4fb46f880796d93c5c75eee2b4d"}, "fc1541df-30d7-4c6b-8850-1308dad5ce0e": {"doc_hash": "b30335f9b83d500256f5d55536f2f88957bc34dc98256bde687d86025a73b41d"}, "2cca3d9b-3710-4ec9-b70c-c73d6d658c5a": {"doc_hash": "b3820cc9d6d725288731b28f87ee32de683ee8d81a38870d9e3d788c4f94485a"}, "661dc25f-b8ab-4e33-a869-54d5308328a0": {"doc_hash": "058cf5ae6698670b417c15d5de062c10c51576f9ad48bb9e6d9ccc729e0e9c03"}, "ee8b22c2-5a42-4c9a-b1b5-f55dd4eedd27": {"doc_hash": "dc22431d0722b015c144eee2410aa42c2dbc87e6751060cc168d20f976ee445e"}, "ee72869c-8103-4a93-bd16-0e69bd47991d": {"doc_hash": "87ad9e0dac7d4963ae0cf864dffed16ce66107d4414c446b9203610a64fd7973"}, "6725f002-dfdf-462c-9ed8-73b094fe85b9": {"doc_hash": "b66d37293784cc4f5764d5f06b54bcb85fac9221e12a1605bb73320dc7bdc8d5"}, "ee64f81f-e9ab-489a-b68f-d0dd29f6b7ef": {"doc_hash": "b70710acb0c207673cf1a1f7a08cab99c92a5cb74f2ee6f8a2bcc9a9769a710c"}, "16310200-4f2a-4a4b-a0d4-dc3a8d7ef59a": {"doc_hash": "b4ef6e7e9b767883de7ec15a22a7d19c22ce57498de85d2d8c4046d5538aa605"}, "28024078-bddd-4533-8d6f-334ac3817080": {"doc_hash": "12441f2bc77a92925ff1d004f7dfb64ef2801c1d2f45af7a8eb4cc8919114a6a"}, "f3e81003-7039-4b88-b189-3eb250ece2df": {"doc_hash": "76ad9e3fa89bb9131a695e8ddfd52507edb5a7ff8014b13fb4e965db41025bb9"}, "59cdc56b-e1c3-429d-964b-268f4b4fc48d": {"doc_hash": "89853606ca96aba7c10e1769724be0f9793f366bd82b6066e6cde7e8b6256900"}, "67af2177-6a86-4b39-b061-5267ac5ffd9f": {"doc_hash": "a23e6d73c822d34d69fb733ac3b9f3d9a04e89dae08746c58928abd48782ab98"}, "e846dba3-7b85-4b0d-a55d-3298f0f585e4": {"doc_hash": "cf13808bf5a4cc6796871c0bb1f18baa5460af449de2a5865e4fffe0d76048e7"}, "d33e5255-5028-4173-9b3d-407dfbdde01f": {"doc_hash": "0bed34a05591afc1a95be45dd63037cb15c08d684adfac65ddd9211f17f5820d"}, "45a3acae-1110-4b84-affc-92699183004e": {"doc_hash": "7e07fbd51d1d275f961889f1806ec71c2de366970eac174be2f4d8a59cf2a510"}, "b04bf69d-dcf1-47fb-b628-09e8870e0408": {"doc_hash": "36c605adf9b785072c37245931ec27f577bce239cb9911498312a4670fda8ac7"}, "6b277395-b1fd-4ed2-b7ff-f472d1b213a8": {"doc_hash": "ea66abd88bd5b7876d043697fe36472df0891a39a8f99d39ee897c398a3f9272"}, "98737e73-c1f8-49e9-bff0-f9cac4435c2e": {"doc_hash": "ac82431162f021b8003ffa37e851081bce061ef9d24820e7f4dd6aafcdca850d"}, "d45df7f5-978e-4e43-9495-0145e4615a43": {"doc_hash": "ca8a2d2e655e88f1adfd1bc16ecd70a3e83c0961cc488a7a79c4d49fe9ceb8fe"}, "16cc8acf-e57c-43de-a1a9-946c4deb1192": {"doc_hash": "255887a83c864a525f8d6cf2e66522ae6be6cc28e30c8d6ecf22757d0c43f282"}, "80a78f2f-b97c-4577-83de-cb5814f1b4d9": {"doc_hash": "36424e49e0cc4a1b5c901e05d4735e346e69a2ab39219e35041097a857bf4f22"}, "a5fe3747-6e91-4927-8ee6-4c6662f1bf5b": {"doc_hash": "6d9573fde00fd95af897bd961e01364ec9a3cca1214a583e29c80613d923019d"}, "13631f8c-b01c-4684-8b1f-59ef8b5109fa": {"doc_hash": "e3de6d15892fd1e76e8e0c8d3d358c4f50c8ed4381f5410fc2a6e4b3321f3cf2"}, "f2d3214f-74df-4fd5-bb97-f239a25c3add": {"doc_hash": "88034bab0aa59e81ac32cc6d69cc8c06c57c4e24d8da7d3ba02b96101c9f9d87"}, "96a8ee11-63f3-4ebd-ac45-298e2dddc1ed": {"doc_hash": "0296db5aba864de11d8633ccd9496da6ec39573b88470282e3bb37a91ed5c82f"}, "4a6126d1-854b-414f-b6a7-35f5a4dc256c": {"doc_hash": "6de9e1d3d3b79501e256508e369fde4d78abb7e0230924c170d5bfbd168ff48a"}, "0ff96095-16a3-42d5-af96-819e86611188": {"doc_hash": "46530ddbdceb672cbb57e6b3571c878e2e24576835f192d911e3a2272afa44ea"}, "e6c904a8-304e-46f4-9f5a-92a7863d1226": {"doc_hash": "db300eb2d064fc469283b85ee06587e134c65eed4f1b0d264c2fd3598650170e"}, "79400b61-8871-46c4-8ff3-4098a3b12bfb": {"doc_hash": "1ab6214b36434948bcaa37984eeb39dd22d450a5098db8472d94cc6fb1fe5d9a"}, "dfe7c0dd-275c-4c32-a059-05d62ad584d1": {"doc_hash": "625d301046d11e8b8bc48bcd1e4a4ad1ce9448dcb70eea8b819d974a4adec35f"}, "dbcf14c1-1e26-43c0-b67c-9ce8db47a609": {"doc_hash": "9591ea9e5213ba2196e4a9215cbf5c8b772b770837d5c576419b727b1bf61839"}, "f56bd2be-9b11-4d2c-96c4-1c7ea377804a": {"doc_hash": "bc416243fd7599ad4bbbb71851a5b8d3bf5cba5e21eda6d26dd9c76cd1535535"}, "6a5cce87-c601-4163-864c-9fea2bc08c2b": {"doc_hash": "d610264378a4883056d6f0679831f7747a487d11e7c0503480e8ccbe41eb9bc5"}, "5aad374a-7790-4623-ade3-17659d0a082f": {"doc_hash": "b1a78ea2d7f60fe1a93c00eadf7dd40f3fb975afa41c38ff78015e4fdfe6a17b"}, "477c4fb6-b9db-41b3-ad24-57c75f9d0718": {"doc_hash": "178c66e2de8e1c2bc5ba3931ae1519beef09c79674f24be29873e503524e6fba"}, "d993df11-279b-415d-9e35-af5855485551": {"doc_hash": "127a1c43bd7da55d1666204a58df10bceee8481e95be8b50f1d5d87b60da5847"}, "39de1414-2790-4e12-961b-a277ac6ae229": {"doc_hash": "7b5de4f3cd39ccd07a4d860b8b9df8b304029488add28f4f64b79b8845e87d95"}, "eb824861-b315-47ea-83d7-668704b49828": {"doc_hash": "87a035222348ab85ad5b92f2388a3e72d5297aa7d1aec56166f33ebbd2260110"}, "c2c5292c-410f-4f17-9b6d-d3ee558792dd": {"doc_hash": "d04e6374d7ccd6fd3f406da596bb135b5fe49f0672313eefa86fa3838336c863"}, "f83ff640-ee99-4f4b-9434-725bbf938472": {"doc_hash": "09c9003c975590dfe4f74c961a0b73c3faf49da3a5276a8a04f804416d49c30b"}, "95e0184f-c068-4b04-9a23-4bde34054d39": {"doc_hash": "2ce65339be47572f77b06caa935928024d1c84915ef0701ed357c9bba23bac0b"}, "ebe3c7b7-7c98-4b29-871a-ac336e68a6ff": {"doc_hash": "926c001e9c37e8772b355f3319880af8e8b0fe4493ef91e651573e7f631ca11e"}, "a6ef86a2-62a9-4129-858a-fdfb2a3436b9": {"doc_hash": "9e93d384bc6564d7e71a1b57a313ad64560e441b1fc47249ab67385f09ccacf5"}, "fb915e19-4109-4f28-9bf8-0f139282c890": {"doc_hash": "5fcf4ef47acde06c899cf00d3b1b93d2b14a761932da3da8b1ade7046d67600d"}, "2f4b0dd3-69aa-4305-bdbe-724ea92884f3": {"doc_hash": "25ceadfe724d0fab249e2a61597c1ac883c7ecb7d10e0cde1b8030090e55a03e"}, "8b610734-b59a-467c-8095-2c95e5c2db2c": {"doc_hash": "c0eba196e6238f06e7a94edd234df14430cfcbb97ab8db29a427ad72d0eef9bb"}, "9083b8d0-3a40-4035-a5dd-3bf99ad4ea27": {"doc_hash": "d9bf0d2a0556962e74b5939e57b4917b4a645de8357135e2cb9dbd4eea2f0a06"}, "8d2cc84c-9f5b-4f07-ac8d-519c27216e36": {"doc_hash": "21d487c62ef1ab6c9530b3a3bfc8fa0b0c4a6f582d3b2fb01e8297c2e789a8f0"}, "3ee00b36-48f6-47f8-bb41-2f1cc567c5ac": {"doc_hash": "c72186e705e40ade199e8dc5e5da1900f7816ec040fb7d1b0b104452ad5dccd9"}, "6468dbed-28f5-499b-84ca-916e53350ed5": {"doc_hash": "551d5ffa3e0a9b3c2526a3fc3acb4f818a702df45b1dc6fb85bb50124236504e"}, "fa7c6645-be05-4f87-9ec2-48ab2f1cbe95": {"doc_hash": "375931d265b2bc6f18313485ddec7ce17c09df22af0353b03fa6d35cb353337c"}, "f439ecee-0378-4afa-9268-5f41144db7bf": {"doc_hash": "bc52577dbe5283feefce9493f0955f801e66176b0dc15e607b251d7093b543f1"}, "0f461362-1320-4bf6-8edc-fba074a7eac9": {"doc_hash": "cc17b1b06fa94ab22e06197cfebe6e1a5e9a61382d063e3bc02fc724d4bcfca8"}, "d35a8d7b-e234-459e-8a4e-885f1e6251d7": {"doc_hash": "47523f15219d211a4842c3d8974e0c4e0904ccf237c80e5022755b7a8a5262a4"}, "31a55762-0b76-46e5-a653-b3a61c3a2601": {"doc_hash": "2dd56aaf542d48b5ca8392040e64e3d674774a3df35dab04e13e9328479a6639"}, "b2155022-da43-48ea-a1dd-62c4e9196a62": {"doc_hash": "27a7e8747d44ce5343d29df376f9ecdee08b6894610bf29f6c32bbb5099200cf"}, "229747fc-255c-4bcc-806f-bc0fd0892653": {"doc_hash": "d93d9ec345db8568014d5aaeb4181e5c2b53bdff1f515d8649a438b29bdbc874"}, "e386fff7-1c92-47de-a726-0a061ec213c1": {"doc_hash": "b21077645814f9b73f26f71c5e6a03306cd4b2c8ede946425bf8e2ac3b30d595"}, "6b6d189d-8bbe-4bd3-b394-77dbd6e60828": {"doc_hash": "bac7a8fa3256587586619f15dddfc4201608248490ffccc2250db9ee92a4315f"}, "6de8040c-b01e-44d1-9271-24f65385fc1c": {"doc_hash": "f657729e2de81ec3380db489b0f3ea2caee0f44fe3a5fc4934ed9ae6d99c24c8"}, "c2cb8f24-3914-43a8-bcd4-5a1b165e5fe8": {"doc_hash": "d312f720eee7fe192ae228550457383d78971246ba4aad233628b7e8eb51945c"}, "2e81cd8f-9580-46bb-bf6b-ea69eacaabc4": {"doc_hash": "4d5316148bcd7f749a7d95d69c9b40e23ee383521c5b2c33a987b489a6673e37"}, "e266554f-2c54-4365-be7a-bf7b7e8ba8cc": {"doc_hash": "c5f25e2a831136b0ee4f6180cc9e0cb6138bc52d416f55d9b43f3927d0a15ad6"}, "7f700ecf-729d-4882-a1da-cc35db20d881": {"doc_hash": "9abc8dee983e44f541bacef3a8aa4adc08008fc8c7af3fccd70203f287fd6ba7"}, "809069f3-1a44-42ff-90cd-80bb7a6375ae": {"doc_hash": "1aec5c4da1f22af5ad0b73ed9a802e83866a37df9cdd704053e3667fdce84e60"}, "30e5f74c-7146-4d53-96ff-c7c35b39886b": {"doc_hash": "e046e9a2f836b3777a4181901b8b9a3149c8016a8e2188f08adff88e589d26ab"}, "afae9ee6-66d9-4863-8198-bdd6a0efb6ab": {"doc_hash": "321e675f7281d03e8c3789f21b0ea38a5c8bfa54fb4e6f8aad9ba4337ca3ad2a"}, "9a62554e-0cfd-4f9d-ac67-ccfbdfda2f87": {"doc_hash": "ccc0ee853416765f53ecda3daf9d3014e0934049d79981766c896caccf5b47eb"}, "8b430829-84c2-47b2-850b-83768e6763c8": {"doc_hash": "aefe0a85361eab7e36a8eceb337f1159684b2b21f12053c489ec3cfc84603925"}, "ae31376d-ea2a-4cfe-b41a-2f6cf7d0a0f5": {"doc_hash": "6722505e4c645415388d280d411b6493a47024095049b1de180c106d28ce74af"}, "765d5a12-3897-4e8a-a23e-ab508ac85deb": {"doc_hash": "d397a5038d1f61ad479d407d78fecc6cd4157c9c0dead00d3e6d1769c5ca1d42"}, "41a125e4-3a5d-4f24-85c6-593541001179": {"doc_hash": "009377d123c2d08ccffa059496da7cb40f99c1e1ade286f36f3bff0d03553c27"}, "31160153-fbb4-4ebb-9e04-6e496caa3451": {"doc_hash": "6f2fe88c23f97a47708cdb933bfa7e1e52527cdd9e5375d13b50565839574123"}, "ffa3bc08-7977-4519-b6d6-ad167b598973": {"doc_hash": "5bbefef5b5f222ca27487a41ac130e3ccab70837edecfbdcd7acb32008c4d7b0"}, "ccd7df73-5ee3-41f8-a057-ab243a385055": {"doc_hash": "9e2c43552487f3bd973eba5e71163b12d218864041022a4ddabaa4f9f5d40f39"}, "83a2a83d-ad6b-4545-b112-781ae7751741": {"doc_hash": "b8c58ea64c44acb3974cd2be17f3aa23d7ebfc06af0105c93ac3dc759f84adbf"}, "500ea70c-2817-4e7b-bc46-579605c68040": {"doc_hash": "697d029ee065848a5587578ba41c0b118cb310ebe1ecf6f2a6d30b5b18402c7a"}, "8962aa57-8e79-4c3d-9f7b-76d7d78adc91": {"doc_hash": "bdbec63a459cabfb4370d70459c958d4e276fde1a205f367d8808ef7dd0dc9b9"}, "0a8d9220-535e-4528-862c-d9fd03822721": {"doc_hash": "075e2589415370bcb84a038bd609dfa2849e9cbd3af81f426f33d9afd77dc366"}, "9038eebc-b4d9-4266-8003-004d1963c107": {"doc_hash": "cced8a8e15d87ced70a25b52aa0cbe59d3bdf927a9884db5a39a8740220dd404"}, "b2b3921e-a310-4302-8229-552b0b8c93d9": {"doc_hash": "f94664cbddfc8949df949f63c7485611a93519492d26beaa490e854da6a33483"}, "da4d4de2-51bd-43e0-9ba6-02ea4caa27ab": {"doc_hash": "cb01e3d4328735bda6ddc803d8b799b10cb893ed06422934a53035dbdd9f6910"}, "d58051b5-b0b4-4172-997f-033e64e159e3": {"doc_hash": "29759d5896474ad7c5842d86a509e1795debb92ab0c88b9aa173483f4c434eca"}, "e9760275-71ef-4431-a6ca-1ffb9b43e485": {"doc_hash": "5ccf2049f1dc136e740fa02bc46185072c9ab4c8194feaef120f32c2c359ee8a"}, "a7e306e9-7ad0-4292-a1f1-9a8e7c608f8c": {"doc_hash": "5de19edf2c37b41ec2d31831b3276d422456c14ed8cb75b70a064e3279a9f4a6"}, "68e40242-55c4-4f32-878c-b2ee6a81e4a5": {"doc_hash": "9728d55895c6eab5dd2abc40afc7cd29b6cfa3a7fb7d8421c16fe99e60a2fad3"}, "a7fcd440-7cef-48d9-a0f7-3a7aff3a1ef5": {"doc_hash": "09b9e3a36a08cb67812693aafb6a2dd3dd859a42ffc66c5cafd490ffb35e30c6", "ref_doc_id": "fd9e7a7d-90f3-4ccb-b4f9-57add24e258c"}, "986e5383-c388-4ded-8231-a359dd57580c": {"doc_hash": "d88b0667774515f61ab15deae93a35d3845cd43f816186d19bee72243713dfe4", "ref_doc_id": "67fad07e-914b-418a-97b9-37a1aa4dc69e"}, "9e32c649-c975-43d7-a871-f4c81fd7152e": {"doc_hash": "f3689f318d645e86a29fb2831777c33cf32555efb6ef8ef3f95987ea95bb2ed3", "ref_doc_id": "c4e97a49-dd88-4aa8-bf45-6cb9ad48c183"}, "49568944-65cd-4f85-be27-5b34f720420e": {"doc_hash": "41cec9bf4a58506604908177c01354ddaab106ae6611f251ac0257c71a7c688f", "ref_doc_id": "bd3aec19-a664-48f8-ac69-5afd3644580c"}, "87cc729f-115f-4827-9084-aade6573eb8a": {"doc_hash": "3636e97fa3dc9ada098ecc2ab4f13dd191c20329d8c7e35e41dc9fb9d088e04d", "ref_doc_id": "44649460-c124-4a31-8539-ddf932b6df68"}, "30c7970a-c05d-4a4c-af82-c46c8451661e": {"doc_hash": "982952b8a2141ee04259a7ea2129c00840eed4e4d2d5342a81f44fa644043d03", "ref_doc_id": "2996b822-0618-4677-a7c2-226dab5f6d85"}, "b2732342-1f42-4d4b-ac21-df2f2ed1b8e4": {"doc_hash": "b5c354d3bb9d3807d2d0d6d5e9f7794ece8c740784f7ac8ebb4e87db6ec0667d", "ref_doc_id": "5bdc6c15-8aac-4cbf-a234-325b67ce70d9"}, "02833d39-4083-402d-b26e-88ea7b56e3f6": {"doc_hash": "807bffe9e9fa29c137d993d4ff49768d20430910444befbf24980821a23d8b11", "ref_doc_id": "c32f54f9-4b29-4ea7-9dae-728b4d14d79e"}, "7240fd42-2e5a-4c7e-84a0-e195bab2c5fc": {"doc_hash": "f58ed8848c9135dfb78e8d920b4c111295e7b00c27290645c9464bce71c3fc4c", "ref_doc_id": "15b6df17-8462-4a75-9d8c-dcf66c61d822"}, "313de812-0b00-447c-a72a-5040dcf31b58": {"doc_hash": "acdd9ca4cd4bbfd6c3856aab83d9a1899a4253b6a08e9547f1fd646c17555891", "ref_doc_id": "ea561b1a-82ab-416b-bac1-e42e602d7fd9"}, "8267b3c6-de17-4d53-afc5-ffac106dad60": {"doc_hash": "52400e0ddd0c03122358bd39ec88a038731663163b508fe7f404815d91403d49", "ref_doc_id": "c54f7062-e008-45fe-a113-2a7a06f31866"}, "b45293d6-bdc1-4393-8a60-11df40de0d36": {"doc_hash": "ead29557900deed3f51bce6198c25020d93b6c3b2d5dfc8c5dc3c02b2b0effc3", "ref_doc_id": "0e3a4014-8d85-485f-91f4-cb86fe97d2b2"}, "fe5ad608-5e12-44ad-9dfa-d5e67883b63c": {"doc_hash": "c3ea76be1d3633bfbcbcbabd77b3e73467d5b080064f367e3a22a11f09e3c551", "ref_doc_id": "ae6bc19f-57d8-4549-9bcc-2944ffd42a52"}, "693d315a-2844-4ed1-ad0d-8979ac451dbf": {"doc_hash": "bf4c4cdeac2f98598f9784fd5c61bd61ddd54cb138a045e25c5be25fb9f9619a", "ref_doc_id": "c58bf181-1fb2-41f8-9c82-3b040f2f9b51"}, "b6500f2b-32fd-494e-8e2a-f6ad2a58a871": {"doc_hash": "1e8fd8c4cc9bea493f587c580de991398967e77c7a720b1c9d5d09aa92343be5", "ref_doc_id": "1954a776-1ab4-43c1-b320-376c90ec8a69"}, "fcaf034c-d09f-4332-b90f-df1701758b0d": {"doc_hash": "5cf5a2aa20ae3baf1a1ef57b10f5d697741b753bb1a8fc3b7a371371f2e0c237", "ref_doc_id": "7bfd13df-853f-4ade-a531-d47c39f449c6"}, "0e0a8c1e-e97e-41e9-a131-86c65f3abd63": {"doc_hash": "5ef675629e842f73e7fba29f2ec9e3894c7032a3b55232b93e9a4333df632734", "ref_doc_id": "8b39d494-c2e6-4d73-a722-ef75d9a90864"}, "d0d98167-c6ec-4974-ba7a-f7690a05e5f0": {"doc_hash": "0582355a6f7c65e56ea31acdf2fd4cae3d32fd321698dffc72a57a7cb1715202", "ref_doc_id": "15b0ac0b-2bb5-4421-b28d-1e49ec192a4c"}, "eb6e25b2-4c2a-4f07-8693-89698386709a": {"doc_hash": "2ed9619bfb41042684bbb56cc590b3742a40a12ff24bbcf6454216ca0058c30d", "ref_doc_id": "e5ed71a8-6627-4249-a475-c9fcd625ed1e"}, "01913195-a76f-4e86-ae94-1f1f9dd8c8dc": {"doc_hash": "d98b72d65fe2247a9235f423be31252f186584bd9be5cc28e2113a20d28a03cf", "ref_doc_id": "109c0842-97d1-45ab-8318-fdfc60a1d1c6"}, "50ff4bfe-d91c-452a-835b-05119a137ba2": {"doc_hash": "d0591519c5038a8cd4a6f4d36a07355d9f6fd11f8e6ab1051160ddc40f9b02d4", "ref_doc_id": "4361c13f-4dbe-4086-b32b-f85d1ea0f9aa"}, "c9a9d378-179f-4ae2-adc0-a8f86f5edd59": {"doc_hash": "dfe544ea42e38a0b1437249723a0adbfebe1ef20aafc0fd89079efa532e6c6bb", "ref_doc_id": "3671ba0e-f39e-4b6a-8400-05dd0326c5e2"}, "306e6da3-f326-4f14-8f67-595afd0dccd8": {"doc_hash": "84918d54169613cd2d32ef0d9f3918c3a6ea726aaa48dfd4d4b6ac42a03f8a8d", "ref_doc_id": "643134e3-13c2-4eaa-ac04-fbbf28ad3dc7"}, "5c3e6813-e259-40e5-955b-3079652d39bb": {"doc_hash": "3e7e4ebf1c9f4d29230c09080f40a1552eb9055e23cbcea81bf10565dfb9fcc3", "ref_doc_id": "deb7b3a6-1854-4ff0-8fb6-8c501d3f14a4"}, "cb36a519-cc24-4933-a67e-84911e03cca7": {"doc_hash": "9097880b20c45ee10c9f80405b132de281d7e6815c03a281769d143bf1d5a37e", "ref_doc_id": "a51a50b8-541b-4eeb-adb2-8b0483a41f82"}, "7d62ae4b-d180-4bef-97b1-6ac932c4a8a3": {"doc_hash": "8532486d0da87d3e6f607afe17c6c7aee9c988978f3423a9ff8d05ec6bbf77b6", "ref_doc_id": "c99276b4-1814-44f1-a123-ac921213f846"}, "f0e33102-6122-4a8f-8d07-c2f4564b30b0": {"doc_hash": "b1f491d7d794852fc44a2a38a5bead9984a53c66be379798d1dabbf701c1e8d6", "ref_doc_id": "a24ad36e-1ea9-4fb9-9dc0-e80cc5dec545"}, "8f2ef54d-5fcc-421a-a5ba-2b7ebfd45abc": {"doc_hash": "672f332d39bbabea7bb9854b412ca9f3b13ec67a95bb0bd2038fa17b8ba4863c", "ref_doc_id": "9081617d-9907-45d0-8175-fd230353d675"}, "b179b7c0-d030-42cb-aa1a-9c6a901d7491": {"doc_hash": "179412d90373291542c0bf3eec6d0daea451b4fb46f880796d93c5c75eee2b4d", "ref_doc_id": "16f9a053-0364-41ea-b09a-1f5ba0fca4b5"}, "be403c1e-29b2-4a71-bcc0-85a87e226778": {"doc_hash": "b30335f9b83d500256f5d55536f2f88957bc34dc98256bde687d86025a73b41d", "ref_doc_id": "fc1541df-30d7-4c6b-8850-1308dad5ce0e"}, "363fe45c-c7c9-44fc-8fa7-19c1186a2540": {"doc_hash": "db8477a0495dded643e827aefbda56109d22eff6e1498069328e70412d7a8586", "ref_doc_id": "2cca3d9b-3710-4ec9-b70c-c73d6d658c5a"}, "0789e25b-0c1b-44d4-a8f0-5cff936f64c8": {"doc_hash": "18b37d6736e1cd4cdfa73f0f12dc78a5c1594e796de16022e6b44de45fededf9", "ref_doc_id": "661dc25f-b8ab-4e33-a869-54d5308328a0"}, "4b269446-c1b1-4202-ad5b-8f8d590ec80e": {"doc_hash": "16b8d496f7c7bf248ffa92d36b3c9e51e53c6165fdfd4659b5b0bb11ed91a591", "ref_doc_id": "ee8b22c2-5a42-4c9a-b1b5-f55dd4eedd27"}, "56177f6e-6eba-4e49-9dcc-f919a3e88ea0": {"doc_hash": "87ad9e0dac7d4963ae0cf864dffed16ce66107d4414c446b9203610a64fd7973", "ref_doc_id": "ee72869c-8103-4a93-bd16-0e69bd47991d"}, "eec34918-423a-4ff7-8df7-4e3af7be03d8": {"doc_hash": "b66d37293784cc4f5764d5f06b54bcb85fac9221e12a1605bb73320dc7bdc8d5", "ref_doc_id": "6725f002-dfdf-462c-9ed8-73b094fe85b9"}, "732641dd-50db-4398-bcd9-56365e980bcc": {"doc_hash": "b70710acb0c207673cf1a1f7a08cab99c92a5cb74f2ee6f8a2bcc9a9769a710c", "ref_doc_id": "ee64f81f-e9ab-489a-b68f-d0dd29f6b7ef"}, "0367e4f3-4f59-40af-b7b0-ac23b35e02ab": {"doc_hash": "b4ef6e7e9b767883de7ec15a22a7d19c22ce57498de85d2d8c4046d5538aa605", "ref_doc_id": "16310200-4f2a-4a4b-a0d4-dc3a8d7ef59a"}, "ae6d7c35-49ba-4f34-a8e7-e49c7638ebd4": {"doc_hash": "12441f2bc77a92925ff1d004f7dfb64ef2801c1d2f45af7a8eb4cc8919114a6a", "ref_doc_id": "28024078-bddd-4533-8d6f-334ac3817080"}, "4dbe2125-6488-489a-a9e6-86f3366266c6": {"doc_hash": "76ad9e3fa89bb9131a695e8ddfd52507edb5a7ff8014b13fb4e965db41025bb9", "ref_doc_id": "f3e81003-7039-4b88-b189-3eb250ece2df"}, "78f90e1f-364e-41d6-9c88-e0992e7be5d2": {"doc_hash": "89853606ca96aba7c10e1769724be0f9793f366bd82b6066e6cde7e8b6256900", "ref_doc_id": "59cdc56b-e1c3-429d-964b-268f4b4fc48d"}, "f0354f07-1f39-4ca5-87f5-76feb0338a94": {"doc_hash": "a23e6d73c822d34d69fb733ac3b9f3d9a04e89dae08746c58928abd48782ab98", "ref_doc_id": "67af2177-6a86-4b39-b061-5267ac5ffd9f"}, "bd94504b-90af-4bb8-8700-ea37d24aa46e": {"doc_hash": "cf13808bf5a4cc6796871c0bb1f18baa5460af449de2a5865e4fffe0d76048e7", "ref_doc_id": "e846dba3-7b85-4b0d-a55d-3298f0f585e4"}, "59149e71-4af8-4d28-824c-1e53bb874aaf": {"doc_hash": "c2ecebb61d8d1f669400c295a16b808f37c51d1fc3516921573a4d93995ae43b", "ref_doc_id": "d33e5255-5028-4173-9b3d-407dfbdde01f"}, "45586b94-098c-49f3-a8c8-f3b38ec8c29e": {"doc_hash": "143314c383f2611a3f810879293cc18db28d3e835d936951745b11f3387d6e9f", "ref_doc_id": "45a3acae-1110-4b84-affc-92699183004e"}, "b5435b09-6fd7-4721-b40e-4660835b949e": {"doc_hash": "938dec1e045e5bd091f48b6474532fc491e9c6d78fc621a71cac47400837175f", "ref_doc_id": "b04bf69d-dcf1-47fb-b628-09e8870e0408"}, "bdf48e56-4815-4a3f-bf8b-c72ecd997a32": {"doc_hash": "cde90f5cc788165f23785ee8a86b3950c6ce66af7aa3c496a268cd7981c86f07", "ref_doc_id": "6b277395-b1fd-4ed2-b7ff-f472d1b213a8"}, "9c8b75c8-f707-42da-a57b-5852f04dd68f": {"doc_hash": "ac82431162f021b8003ffa37e851081bce061ef9d24820e7f4dd6aafcdca850d", "ref_doc_id": "98737e73-c1f8-49e9-bff0-f9cac4435c2e"}, "12de26ba-57ce-403c-ae56-49fd1e9a0426": {"doc_hash": "2def5cf35254e67f66a6f0f94ea2683142c50ae99853e92f977e78303edcaffd", "ref_doc_id": "d45df7f5-978e-4e43-9495-0145e4615a43"}, "6babf5b3-2bff-4c8e-90f2-76e61940e363": {"doc_hash": "255887a83c864a525f8d6cf2e66522ae6be6cc28e30c8d6ecf22757d0c43f282", "ref_doc_id": "16cc8acf-e57c-43de-a1a9-946c4deb1192"}, "80bf8ed5-e637-4a41-96a8-65f00f97fc68": {"doc_hash": "c21eeb5a576b6403d9b2c31976fdb43e899b703ee3656421bc83c6dec8675ddf", "ref_doc_id": "80a78f2f-b97c-4577-83de-cb5814f1b4d9"}, "84297c4c-26f1-4791-956e-e0ac58d10240": {"doc_hash": "1e9a0939d1eee8ad666f641c01e8a9608d6a9c738c4011ed38dd683b66e863eb", "ref_doc_id": "a5fe3747-6e91-4927-8ee6-4c6662f1bf5b"}, "d6ed6bab-a480-4f30-84c6-5b2a9720edce": {"doc_hash": "cd7d4bf387b0b1e9777ceb551730dbadd89d598cdb30ff69905bf81aafe20d05", "ref_doc_id": "13631f8c-b01c-4684-8b1f-59ef8b5109fa"}, "c7d8c73d-4894-4279-94b4-4522307bd022": {"doc_hash": "59b8bb00712b0657d5935ece0b9a27d4a493634884a34ae2d42a6b07ec259d50", "ref_doc_id": "f2d3214f-74df-4fd5-bb97-f239a25c3add"}, "9e65771e-3571-425c-9cda-6a714bb39333": {"doc_hash": "0296db5aba864de11d8633ccd9496da6ec39573b88470282e3bb37a91ed5c82f", "ref_doc_id": "96a8ee11-63f3-4ebd-ac45-298e2dddc1ed"}, "5df3a9e0-6d27-4f45-871b-883d0d47daf3": {"doc_hash": "6de9e1d3d3b79501e256508e369fde4d78abb7e0230924c170d5bfbd168ff48a", "ref_doc_id": "4a6126d1-854b-414f-b6a7-35f5a4dc256c"}, "9e4876d3-6d00-4972-99ca-7aa957f9e9ed": {"doc_hash": "46530ddbdceb672cbb57e6b3571c878e2e24576835f192d911e3a2272afa44ea", "ref_doc_id": "0ff96095-16a3-42d5-af96-819e86611188"}, "e7fdc715-d287-44d0-b933-b500aa9bcb99": {"doc_hash": "db300eb2d064fc469283b85ee06587e134c65eed4f1b0d264c2fd3598650170e", "ref_doc_id": "e6c904a8-304e-46f4-9f5a-92a7863d1226"}, "3ea71c3d-6de2-45aa-a225-d20010624f5b": {"doc_hash": "1ab6214b36434948bcaa37984eeb39dd22d450a5098db8472d94cc6fb1fe5d9a", "ref_doc_id": "79400b61-8871-46c4-8ff3-4098a3b12bfb"}, "4ec64300-02a6-4ba9-8967-9b6da448a451": {"doc_hash": "a4f62c4cabe4cd223da1f4eae9ca16ce056b6906958102f792df93191ff1ce7f", "ref_doc_id": "dfe7c0dd-275c-4c32-a059-05d62ad584d1"}, "3969bd14-c6d5-4fd0-b2fc-e5d185c4d69b": {"doc_hash": "ce349618a3fb87cb083b3c0f34a2375a347a3bdaa2fafb5ae225a80d0b907eb1", "ref_doc_id": "dbcf14c1-1e26-43c0-b67c-9ce8db47a609"}, "ff7e94b9-2a8c-4773-a990-32bbd98d8d3d": {"doc_hash": "bc416243fd7599ad4bbbb71851a5b8d3bf5cba5e21eda6d26dd9c76cd1535535", "ref_doc_id": "f56bd2be-9b11-4d2c-96c4-1c7ea377804a"}, "53958838-61df-43b2-9c28-65edde642b0f": {"doc_hash": "a59db324ed73e44b93c4e9b2ed1e25c8e9401a7cb60b4d8ba9e8c5a215fc4110", "ref_doc_id": "6a5cce87-c601-4163-864c-9fea2bc08c2b"}, "f0c9aa81-9088-488d-92e5-7d039cad6456": {"doc_hash": "b1a78ea2d7f60fe1a93c00eadf7dd40f3fb975afa41c38ff78015e4fdfe6a17b", "ref_doc_id": "5aad374a-7790-4623-ade3-17659d0a082f"}, "b4a9e7fb-b449-464a-9333-ef0d0c368c2f": {"doc_hash": "270fa64dd74f94fa44f46e7be06ac3d0d025a7675f0ec75cfaf7935c06afdd1b", "ref_doc_id": "477c4fb6-b9db-41b3-ad24-57c75f9d0718"}, "015d3bf6-a90c-47bb-b848-6a19fa08b5e3": {"doc_hash": "127a1c43bd7da55d1666204a58df10bceee8481e95be8b50f1d5d87b60da5847", "ref_doc_id": "d993df11-279b-415d-9e35-af5855485551"}, "21ca132f-be9f-41f8-9d9f-a8f0276424f9": {"doc_hash": "7b5de4f3cd39ccd07a4d860b8b9df8b304029488add28f4f64b79b8845e87d95", "ref_doc_id": "39de1414-2790-4e12-961b-a277ac6ae229"}, "87c9b615-77eb-475f-8142-b229830fee79": {"doc_hash": "e1a503e53b144bafb56e02957e2ce4054d6489e135f37699360795671b93a295", "ref_doc_id": "eb824861-b315-47ea-83d7-668704b49828"}, "77219cd0-01f3-49ff-b5b6-fd1ea11cef0a": {"doc_hash": "d04e6374d7ccd6fd3f406da596bb135b5fe49f0672313eefa86fa3838336c863", "ref_doc_id": "c2c5292c-410f-4f17-9b6d-d3ee558792dd"}, "c14e05e0-0fc9-4b0c-97e0-ef0b058ee239": {"doc_hash": "09c9003c975590dfe4f74c961a0b73c3faf49da3a5276a8a04f804416d49c30b", "ref_doc_id": "f83ff640-ee99-4f4b-9434-725bbf938472"}, "727597de-3210-4119-85dc-81c9ebd4e461": {"doc_hash": "2ce65339be47572f77b06caa935928024d1c84915ef0701ed357c9bba23bac0b", "ref_doc_id": "95e0184f-c068-4b04-9a23-4bde34054d39"}, "0d992a90-df3d-4134-b56b-9a77696cd39f": {"doc_hash": "926c001e9c37e8772b355f3319880af8e8b0fe4493ef91e651573e7f631ca11e", "ref_doc_id": "ebe3c7b7-7c98-4b29-871a-ac336e68a6ff"}, "f55e02b1-b552-42ff-a5d7-7d734f4ac3ac": {"doc_hash": "2da26917f7608a75e3ede46fb1a8e7824eb6e06a010ba385cdbaf88c6c6f83e5", "ref_doc_id": "a6ef86a2-62a9-4129-858a-fdfb2a3436b9"}, "36ebaf0f-1993-4159-8aff-cc9982f41c84": {"doc_hash": "5fcf4ef47acde06c899cf00d3b1b93d2b14a761932da3da8b1ade7046d67600d", "ref_doc_id": "fb915e19-4109-4f28-9bf8-0f139282c890"}, "c50dafcf-3d5c-4bd5-9642-a47fd359bf51": {"doc_hash": "b7d5a430b5532f52bc60e566baf0953606098c73d744d62a9706ff33529330d5", "ref_doc_id": "2f4b0dd3-69aa-4305-bdbe-724ea92884f3"}, "4664afea-8b84-4c36-8418-ef62294c8237": {"doc_hash": "5348943b008508daffc937996aca78c4d58ca9b02ae966412b72dfbd0c7bb120", "ref_doc_id": "8b610734-b59a-467c-8095-2c95e5c2db2c"}, "cc7ef73c-0a19-43b9-ae21-39477a2a1d01": {"doc_hash": "dccadeec30c36b86c286d91fb38375eabbda04916ec6661c9faa5bb822dd35e6", "ref_doc_id": "9083b8d0-3a40-4035-a5dd-3bf99ad4ea27"}, "cf0fe1a9-84ec-4db1-8b85-1f7d32e613c8": {"doc_hash": "21d487c62ef1ab6c9530b3a3bfc8fa0b0c4a6f582d3b2fb01e8297c2e789a8f0", "ref_doc_id": "8d2cc84c-9f5b-4f07-ac8d-519c27216e36"}, "85800353-fd9a-4f62-8f47-73dd03da4e73": {"doc_hash": "b372398d5867e699a888f349805cc7a975905d27c4bd58bb8b9b9f412114a8fa", "ref_doc_id": "3ee00b36-48f6-47f8-bb41-2f1cc567c5ac"}, "20d84b55-9fef-4be9-ba93-6625a96061f9": {"doc_hash": "551d5ffa3e0a9b3c2526a3fc3acb4f818a702df45b1dc6fb85bb50124236504e", "ref_doc_id": "6468dbed-28f5-499b-84ca-916e53350ed5"}, "e3f01320-752c-4808-958d-7d6bdc06af2e": {"doc_hash": "375931d265b2bc6f18313485ddec7ce17c09df22af0353b03fa6d35cb353337c", "ref_doc_id": "fa7c6645-be05-4f87-9ec2-48ab2f1cbe95"}, "e89a5c63-dda1-4b56-931e-5fb3f743ba03": {"doc_hash": "bc52577dbe5283feefce9493f0955f801e66176b0dc15e607b251d7093b543f1", "ref_doc_id": "f439ecee-0378-4afa-9268-5f41144db7bf"}, "f4820f98-8c6c-4a97-ad52-f544afa37847": {"doc_hash": "cc17b1b06fa94ab22e06197cfebe6e1a5e9a61382d063e3bc02fc724d4bcfca8", "ref_doc_id": "0f461362-1320-4bf6-8edc-fba074a7eac9"}, "03079138-c4f9-440b-a528-ff7e06d79861": {"doc_hash": "8ef78870388c4dee19fa05e28b413095a02f97486c94264f5570927abb4320c9", "ref_doc_id": "d35a8d7b-e234-459e-8a4e-885f1e6251d7"}, "8775fae5-0691-4ead-acb5-1212d2b9163f": {"doc_hash": "2dd56aaf542d48b5ca8392040e64e3d674774a3df35dab04e13e9328479a6639", "ref_doc_id": "31a55762-0b76-46e5-a653-b3a61c3a2601"}, "b930a6c9-fa51-4b26-b03c-d9a1901dc266": {"doc_hash": "27a7e8747d44ce5343d29df376f9ecdee08b6894610bf29f6c32bbb5099200cf", "ref_doc_id": "b2155022-da43-48ea-a1dd-62c4e9196a62"}, "9b47ed51-8772-48b1-b816-c1589beec19c": {"doc_hash": "d93d9ec345db8568014d5aaeb4181e5c2b53bdff1f515d8649a438b29bdbc874", "ref_doc_id": "229747fc-255c-4bcc-806f-bc0fd0892653"}, "878f9d29-9262-49d8-9fac-acaa01151690": {"doc_hash": "b21077645814f9b73f26f71c5e6a03306cd4b2c8ede946425bf8e2ac3b30d595", "ref_doc_id": "e386fff7-1c92-47de-a726-0a061ec213c1"}, "340d923a-feb4-4ddb-a2ff-f1244ba17226": {"doc_hash": "ccfba3066ac908190bc61692a63cefec707446b74d03c2818ac00a39f987a11e", "ref_doc_id": "6b6d189d-8bbe-4bd3-b394-77dbd6e60828"}, "1a136364-2ef4-42b6-9293-42f0da2a76b0": {"doc_hash": "bccd59138dfdde0a0bf93042fe1c5ba89a5b7a84b81c21dbe9ef92aaa77f1026", "ref_doc_id": "6de8040c-b01e-44d1-9271-24f65385fc1c"}, "c6ccd485-5ee0-4160-87bb-f8b86d0e1f13": {"doc_hash": "d312f720eee7fe192ae228550457383d78971246ba4aad233628b7e8eb51945c", "ref_doc_id": "c2cb8f24-3914-43a8-bcd4-5a1b165e5fe8"}, "192d90b9-9ce6-4830-9b5f-42c0c7c09f39": {"doc_hash": "4d5316148bcd7f749a7d95d69c9b40e23ee383521c5b2c33a987b489a6673e37", "ref_doc_id": "2e81cd8f-9580-46bb-bf6b-ea69eacaabc4"}, "6e3adf8f-03c3-4263-8678-595590555bea": {"doc_hash": "c5f25e2a831136b0ee4f6180cc9e0cb6138bc52d416f55d9b43f3927d0a15ad6", "ref_doc_id": "e266554f-2c54-4365-be7a-bf7b7e8ba8cc"}, "99421063-a5a2-4d26-9c8a-e23ee170a2b3": {"doc_hash": "f449a188ab8e3c53b5aea3ae23b7328af7597846987da7b104fa5f1dd0469f1f", "ref_doc_id": "7f700ecf-729d-4882-a1da-cc35db20d881"}, "1ca65e20-e684-4c82-8af4-303f8ced94c0": {"doc_hash": "1aec5c4da1f22af5ad0b73ed9a802e83866a37df9cdd704053e3667fdce84e60", "ref_doc_id": "809069f3-1a44-42ff-90cd-80bb7a6375ae"}, "d9999133-5816-4c80-b4be-38d4a4bcd3b8": {"doc_hash": "e046e9a2f836b3777a4181901b8b9a3149c8016a8e2188f08adff88e589d26ab", "ref_doc_id": "30e5f74c-7146-4d53-96ff-c7c35b39886b"}, "210d717b-50df-4856-87a0-c5d8cff50bf4": {"doc_hash": "321e675f7281d03e8c3789f21b0ea38a5c8bfa54fb4e6f8aad9ba4337ca3ad2a", "ref_doc_id": "afae9ee6-66d9-4863-8198-bdd6a0efb6ab"}, "91282c2c-4607-4fc9-8ab4-6bf74e6c0b4f": {"doc_hash": "ccc0ee853416765f53ecda3daf9d3014e0934049d79981766c896caccf5b47eb", "ref_doc_id": "9a62554e-0cfd-4f9d-ac67-ccfbdfda2f87"}, "4818d594-2715-4c5c-8c20-5d23603254d9": {"doc_hash": "aefe0a85361eab7e36a8eceb337f1159684b2b21f12053c489ec3cfc84603925", "ref_doc_id": "8b430829-84c2-47b2-850b-83768e6763c8"}, "7d85c16e-6b18-4118-8ee3-b719c5805116": {"doc_hash": "6722505e4c645415388d280d411b6493a47024095049b1de180c106d28ce74af", "ref_doc_id": "ae31376d-ea2a-4cfe-b41a-2f6cf7d0a0f5"}, "bf7a093c-888d-4813-acee-aba1536b44a3": {"doc_hash": "d397a5038d1f61ad479d407d78fecc6cd4157c9c0dead00d3e6d1769c5ca1d42", "ref_doc_id": "765d5a12-3897-4e8a-a23e-ab508ac85deb"}, "342808db-825e-4a93-a6c9-cd5e30b7fca0": {"doc_hash": "009377d123c2d08ccffa059496da7cb40f99c1e1ade286f36f3bff0d03553c27", "ref_doc_id": "41a125e4-3a5d-4f24-85c6-593541001179"}, "2db691ac-fbad-46f7-aca1-5399d6a20aea": {"doc_hash": "6f2fe88c23f97a47708cdb933bfa7e1e52527cdd9e5375d13b50565839574123", "ref_doc_id": "31160153-fbb4-4ebb-9e04-6e496caa3451"}, "6cf4f4cb-3508-408d-be66-5b32e528c3be": {"doc_hash": "5bbefef5b5f222ca27487a41ac130e3ccab70837edecfbdcd7acb32008c4d7b0", "ref_doc_id": "ffa3bc08-7977-4519-b6d6-ad167b598973"}, "f22ed49d-61ec-4dfd-85a0-98d1cbe17efc": {"doc_hash": "9e2c43552487f3bd973eba5e71163b12d218864041022a4ddabaa4f9f5d40f39", "ref_doc_id": "ccd7df73-5ee3-41f8-a057-ab243a385055"}, "ea11600a-c982-4d96-b131-3120e0ec1462": {"doc_hash": "b8c58ea64c44acb3974cd2be17f3aa23d7ebfc06af0105c93ac3dc759f84adbf", "ref_doc_id": "83a2a83d-ad6b-4545-b112-781ae7751741"}, "f8ef79c1-5a0c-4334-aa89-7f3477b0b4a4": {"doc_hash": "697d029ee065848a5587578ba41c0b118cb310ebe1ecf6f2a6d30b5b18402c7a", "ref_doc_id": "500ea70c-2817-4e7b-bc46-579605c68040"}, "95262db2-adf9-45e9-b757-5c6caa50502e": {"doc_hash": "bdbec63a459cabfb4370d70459c958d4e276fde1a205f367d8808ef7dd0dc9b9", "ref_doc_id": "8962aa57-8e79-4c3d-9f7b-76d7d78adc91"}, "f4146fef-8094-4b46-8ecd-7df856643da1": {"doc_hash": "075e2589415370bcb84a038bd609dfa2849e9cbd3af81f426f33d9afd77dc366", "ref_doc_id": "0a8d9220-535e-4528-862c-d9fd03822721"}, "cbe82225-bf09-401f-b336-3f1533701d70": {"doc_hash": "cced8a8e15d87ced70a25b52aa0cbe59d3bdf927a9884db5a39a8740220dd404", "ref_doc_id": "9038eebc-b4d9-4266-8003-004d1963c107"}, "0bccc458-618d-4397-986a-8c91b270685b": {"doc_hash": "f94664cbddfc8949df949f63c7485611a93519492d26beaa490e854da6a33483", "ref_doc_id": "b2b3921e-a310-4302-8229-552b0b8c93d9"}, "7b05345f-b636-426b-9240-2daf9726d687": {"doc_hash": "cb01e3d4328735bda6ddc803d8b799b10cb893ed06422934a53035dbdd9f6910", "ref_doc_id": "da4d4de2-51bd-43e0-9ba6-02ea4caa27ab"}, "614ea8a3-ae81-4924-9492-4e4fe4bfe8fa": {"doc_hash": "29759d5896474ad7c5842d86a509e1795debb92ab0c88b9aa173483f4c434eca", "ref_doc_id": "d58051b5-b0b4-4172-997f-033e64e159e3"}, "8f9dc688-7207-4963-90c8-728860bee174": {"doc_hash": "5ccf2049f1dc136e740fa02bc46185072c9ab4c8194feaef120f32c2c359ee8a", "ref_doc_id": "e9760275-71ef-4431-a6ca-1ffb9b43e485"}, "3121cf93-9368-4aad-8b4f-5945d36010fb": {"doc_hash": "5de19edf2c37b41ec2d31831b3276d422456c14ed8cb75b70a064e3279a9f4a6", "ref_doc_id": "a7e306e9-7ad0-4292-a1f1-9a8e7c608f8c"}, "f53e4d78-fb53-46d3-8223-c7066529b853": {"doc_hash": "9728d55895c6eab5dd2abc40afc7cd29b6cfa3a7fb7d8421c16fe99e60a2fad3", "ref_doc_id": "68e40242-55c4-4f32-878c-b2ee6a81e4a5"}}, "docstore/data": {"a7fcd440-7cef-48d9-a0f7-3a7aff3a1ef5": {"__data__": {"id_": "a7fcd440-7cef-48d9-a0f7-3a7aff3a1ef5", "embedding": null, "metadata": {"page_label": "1", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fd9e7a7d-90f3-4ccb-b4f9-57add24e258c", "node_type": null, "metadata": {"page_label": "1", "file_name": "bluetooth-act.pdf"}, "hash": "09b9e3a36a08cb67812693aafb6a2dd3dd859a42ffc66c5cafd490ffb35e30c6"}}, "hash": "09b9e3a36a08cb67812693aafb6a2dd3dd859a42ffc66c5cafd490ffb35e30c6", "text": "Bluetooth SIG ProprietaryPart A\nPART A: ARCHITECTURE Architecture, Mixing, and Conventions", "start_char_idx": 0, "end_char_idx": 90, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "986e5383-c388-4ded-8231-a359dd57580c": {"__data__": {"id_": "986e5383-c388-4ded-8231-a359dd57580c", "embedding": null, "metadata": {"page_label": "2", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "67fad07e-914b-418a-97b9-37a1aa4dc69e", "node_type": null, "metadata": {"page_label": "2", "file_name": "bluetooth-act.pdf"}, "hash": "d88b0667774515f61ab15deae93a35d3845cd43f816186d19bee72243713dfe4"}}, "hash": "d88b0667774515f61ab15deae93a35d3845cd43f816186d19bee72243713dfe4", "text": "Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 183\nArchitecture\nCONTENTS\n1 General description ........... ................ ................ ................. ............. 187\n1.1 Overview of BR/EDR operation ...... ................ .............. ........... 188\n1.2 Overview of Bluetooth Low Energy  operation .......... ............... 190\n1.3 [This section is no longer used] ... ................. ................ ........... 195\n1.4 Nomenclature ....... .............. .............. .............. .............. ........... 195\n2 Core system architecture.... ................ ................. ................ ........... 202\n2.1 Core architectural blocks ................ ................ .............. ........... 205\n2.1.1 Host architectural blocks...... .............. .............. ........... 205\n2.1.1.1 Channel manager........... ................. ............. 205\n2.1.1.2 L2CAP resource manager ............... ............. 206\n2.1.1.3 Security Manager  Protocol ......... .................. 206\n2.1.1.4 Attribute Protocol........ .............. ............ ........ 206\n2.1.1.5 [This section is no l onger used]....... ............. 206\n2.1.1.6 Generic Attribute Profil e .................. ............. 206\n2.1.1.7 Generic Access Profile ... ................. ............. 207\n2.1.2 BR/EDR/LE Contro ller architectural bl ocks................. 207\n2.1.2.1 Device manager ............. ................. ............. 207\n2.1.2.2 Link manager................ ............ ............ ........ 207\n2.1.2.3 Baseband resource m anager ............ ........... 208\n2.1.2.4 Link Controller ............ .............. ............ ........ 208\n2.1.2.5 PHY .............. .............. .............. ............ ........ 208\n2.1.2.6 Isochronous Adaptation  Layer......... ............. 209\n2.1.3 [This section is no longer us ed] ........... ............... ........ 209\n3 Data transport architecture. ................ ................. ................ ........... 210\n3.1 Core traffic bearers........ ................. ................ .............. ........... 211\n3.1.1 Framed data traffic. .............. .............. .............. ........... 212\n3.1.2 Unframed data traffi c ................ .............. ............ ........ 213\n3.1.3 Reliability of traffic bearers... .............. .............. ........... 214\n3.1.3.1 BR/EDR reliabili ty.............. ................ ........... 214\n3.1.3.2 LE reliability ................ .............. ............ ........ 215\n3.1.3.3 [This section is no l onger used]....... ............. 215\n3.2 Transport architecture entities ........ ................ .............. ........... 216\n3.2.1 BR/EDR generic packet structur e.................. ............. 216\n3.2.2 LE generic packet structure ... .............. ............... ........ 218\n3.3 Physical channels.......... ................. ................ .............. ........... 222\n3.3.1 BR/EDR physical channels....... .............. ............ ........ 222\n3.3.1.1 Basic piconet channel .... ................. ............. 223\n3.3.1.2 Adapted piconet channel... ................ ........... 224\n3.3.1.3 Inquiry scan channel ...... ................. ............. 225\n3.3.1.4 Page scan channel............ ................ ........... 226", "start_char_idx": 0, "end_char_idx": 3352, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "9e32c649-c975-43d7-a871-f4c81fd7152e": {"__data__": {"id_": "9e32c649-c975-43d7-a871-f4c81fd7152e", "embedding": null, "metadata": {"page_label": "3", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c4e97a49-dd88-4aa8-bf45-6cb9ad48c183", "node_type": null, "metadata": {"page_label": "3", "file_name": "bluetooth-act.pdf"}, "hash": "f3689f318d645e86a29fb2831777c33cf32555efb6ef8ef3f95987ea95bb2ed3"}}, "hash": "f3689f318d645e86a29fb2831777c33cf32555efb6ef8ef3f95987ea95bb2ed3", "text": "Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 184\nArchitecture\n3.3.1.5 Synchronization scan channel......... ............. 227\n3.3.2 LE physical channels ............. .............. ............... ........ 228\n3.3.2.1 LE piconet physical c hannel............ ............. 229\n3.3.2.2 Advertising physical ch annels ......... ............. 230\n3.3.2.3 Periodic physical channel ................ ............. 232\n3.3.2.4 LE Isochronous physica l channel................. 233\n3.3.3 [This section is no longer us ed] ........... ............... ........ 234\n3.4 Physical links ...... ................ .............. .............. .............. ........... 234\n3.4.1 BR/EDR links su pported by the basic and adapted piconet \nphysical channels................... .............. ............... ........ 235\n3.4.1.1 Active physical link ....... ............ ............ ........ 235\n3.4.1.2 [This section is no l onger used]....... ............. 236\n3.4.1.3 Connectionless Peripheral Broadcast physical \nlink ............. .............. .............. ............... ........ 236\n3.4.2 BR/EDR links support ed by the scanning physical \nchannels............ ................. ................ .............. ........... 236\n3.4.3 LE links supported by the LE physical channe ls......... 236\n3.4.3.1 Active physical link ....... ............ ............ ........ 237\n3.4.3.2 Advertising physical link ........... ............ ........ 237\n3.4.3.3 Periodic physica l link ................ ............ ........ 237\n3.4.3.4 Isochronous physical link s............... ............. 237\n3.4.4 [This section is no longer us ed] ........... ............... ........ 238\n3.5 Logical links and logical transports... .............. .............. ........... 238\n3.5.1 Casting................. ................ .............. .............. ........... 240\n3.5.2 Scheduling and acknowledgment  scheme.................. 240\n3.5.3 Class of data.......... .............. .............. .............. ........... 240\n3.5.4 Logical transports............... ................ .............. ........... 241\n3.5.4.1 BR/EDR asynchronou s connection-oriented \n(ACL) ............ .............. .............. ............ ........ 241\n3.5.4.2 BR/EDR synchronous  connection- oriented \n(SCO) ............. ................ ................. ............. 242\n3.5.4.3 BR/EDR extended synchronous connection-\noriented (eSCO) .... .............. .............. ........... 243\n3.5.4.4 BR/EDR active Peri pheral broadcast (APB). 243\n3.5.4.5 [This section is no l onger used]....... ............. 244\n3.5.4.6 LE asynchronous co nnection (LE ACL)........ 244\n3.5.4.7 LE advertising broadc ast (ADVB)................. 244\n3.5.4.8 Connectionless Peripheral Broadcast (CPB) 245\n3.5.4.9 LE periodic advertising .. ........... ............ ........ 245\n3.5.4.10 Connected Isochronous Stream (CIS) ......... 246\n3.5.4.11 Connected Isochronous Group (CIG)........... 246\n3.5.4.12 Broadcast Isochronous  Stream (BIS)........... 247\n3.5.4.13 Broadcast Isochronous  Group (BIG) ............ 247\n3.5.5 Logical links ...... ................. ................ .............. ........... 247", "start_char_idx": 0, "end_char_idx": 3221, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "49568944-65cd-4f85-be27-5b34f720420e": {"__data__": {"id_": "49568944-65cd-4f85-be27-5b34f720420e", "embedding": null, "metadata": {"page_label": "4", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "bd3aec19-a664-48f8-ac69-5afd3644580c", "node_type": null, "metadata": {"page_label": "4", "file_name": "bluetooth-act.pdf"}, "hash": "41cec9bf4a58506604908177c01354ddaab106ae6611f251ac0257c71a7c688f"}}, "hash": "41cec9bf4a58506604908177c01354ddaab106ae6611f251ac0257c71a7c688f", "text": "Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 185\nArchitecture\n3.5.5.1 BR/EDR logical links ..... ........... ............ ........ 247\n3.5.5.2 LE logical links............ .............. ............ ........ 248\n3.5.5.3 [This section is no l onger used]....... ............. 250\n3.6 L2CAP channels............ ................. ................ .............. ........... 250\n3.7 Isochronous Adaptation Layer (ISO AL) ................. .................. 251\n3.8 Power control...... ................ .............. .............. .............. ........... 251\n3.8.1 Power control in BR/EDR............ ............ ............ ........ 251\n3.8.2 Power control in LE .............. .............. .............. ........... 251\n4 Communication topo logy and operation............ ................ ........... 252\n4.1 Piconet topology .......... ................ ................. ................ ........... 252\n4.1.1 BR/EDR topology..... .............. .............. ............... ........ 252\n4.1.2 LE topology............ .............. .............. .............. ........... 254\n4.2 Operational procedures and modes ................. ............... ........ 256\n4.2.1 BR/EDR procedures ... .............. .............. ............ ........ 256\n4.2.1.1 Inquiry (discovering) pr ocedure....... ............. 256\n4.2.1.2 Paging (connecting) pr ocedure ......... ........... 257\n4.2.1.3 Connected mode ............ ................. ............. 257\n4.2.1.4 Hold mode ...... ................ ................. ............. 258\n4.2.1.5 Sniff mode .... .............. .............. ............ ........ 258\n4.2.1.6 [This section is no l onger used]....... ............. 258\n4.2.1.7 Role switch procedure... ........... ............ ........ 259\n4.2.1.8 Enhanced Data Rate ...... ................. ............. 259\n4.2.1.9 Connectionless Peripheral Broadcast mode 259\n4.2.2 LE procedures........ .............. .............. .............. ........... 260\n4.2.2.1 Device filtering procedur e................ ............. 260\n4.2.2.2 Advertising pr ocedure ................ .................. 261\n4.2.2.3 Scanning procedure ....... ................. ............. 262\n4.2.2.4 Discovering procedure ... ................. ............. 262\n4.2.2.5 Connecting procedure .... ................. ............. 263\n4.2.2.6 Connected mode ............ ................. ............. 263\n4.2.2.7 Periodic adver tising procedure... .................. 264\n4.2.2.8 Periodic advertising  synchronization procedure.\n264\n4.2.2.9 Periodic advertising  synchronized mode...... 265\n4.2.3 [This section is no longer us ed] ........... ............... ........ 265\n5 Security overview .............. ................ ................ ................. ............. 266\n5.1 Security architecture.... ................ ................. ................ ........... 266\n5.2 BR/EDR Secure Simple Pairing...... ................ .............. ........... 268\n5.2.1 Security goals ........ .............. .............. .............. ........... 268\n5.2.2 Passive eavesdropping protecti on................. ............. 269\n5.2.3 Man-in-the-middle pr otection ............... ............... ........ 269\n5.2.4 Association models.. .............. .............. ............... ........ 270\n5.2.4.1 Numeric Comparison.... ............ ............ ........ 270", "start_char_idx": 0, "end_char_idx": 3421, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "87cc729f-115f-4827-9084-aade6573eb8a": {"__data__": {"id_": "87cc729f-115f-4827-9084-aade6573eb8a", "embedding": null, "metadata": {"page_label": "5", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "44649460-c124-4a31-8539-ddf932b6df68", "node_type": null, "metadata": {"page_label": "5", "file_name": "bluetooth-act.pdf"}, "hash": "3636e97fa3dc9ada098ecc2ab4f13dd191c20329d8c7e35e41dc9fb9d088e04d"}}, "hash": "3636e97fa3dc9ada098ecc2ab4f13dd191c20329d8c7e35e41dc9fb9d088e04d", "text": "Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 186\nArchitecture\n5.2.4.2 Just Works...... ................ ................. ............. 271\n5.2.4.3 Out of Band .. .............. .............. ............ ........ 271\n5.2.4.4 Passkey Entry .. ................. ................ ........... 272\n5.2.4.5 Association model over view ............ ............. 272\n5.3 Secure Connections Only mode....... .............. .............. ........... 273\n5.4 LE security................. ................ ................ ................. ............. 273\n5.4.1 Association models.. .............. .............. ............... ........ 274\n5.4.2 Key generation....... .............. .............. .............. ........... 274\n5.4.3 Encryption............ ................ .............. .............. ........... 274\n5.4.4 Signed Data ........... .............. .............. .............. ........... 274\n5.4.5 Privacy feature....... .............. .............. .............. ........... 275\n5.4.6 Encrypted Advertising Data.... .............. ............... ........ 276\n5.5 [This section is no longer used] ... ................. ................ ........... 276\n5.6 Key generation between BR/EDR and LE physical transports 277\n6 Bluetooth application architecture..... ................. ................ ........... 278\n6.1 Bluetooth profiles.. .............. .............. .............. .............. ........... 278\n6.2 Generic Access Profile .. ................. ................ .............. ........... 278\n6.3 Profile hierarchy......... ................ ................ ................. ............. 279\n6.4 Generic Attribute Architecture......... ................ .............. ........... 280\n6.4.1 Attribute Protocol ................. .............. .............. ........... 280\n6.4.2 Generic Attribute Profile....... .............. .............. ........... 281\n6.5 GATT-Based Profile hierarchy ........ ................ .............. ........... 281\n6.5.1 Service.......... ................ ................ ................. ............. 282\n6.5.2 Included services ................. .............. .............. ........... 283\n6.5.3 Characteristic......... .............. .............. .............. ........... 283\n6.6 Mesh-based model hierarchy ........... .............. .............. ........... 283\n6.6.1 Model .............. ................ ................. ................ ........... 283\n6.6.2 Properties............. ................ .............. .............. ........... 284\n7 Coexistence and collocation ................. ................ .............. ........... 285\n7.1 Core features supporting coexis tence and collocation ............ 286\n7.2 Adaptive Frequency Hopping ............. .............. ............... ........ 286\n7.3 Coexistence between Bluet ooth Devices and Wireless LAN \nDevices............ ................. ................ .............. .............. ........... 287\n7.4 Mobile Wireless Standards (MWS) c oexistence...................... 287\n7.5 Synchronizing Bluetooth with an exte rnal timing source ......... 290\n7.6 Piconet clock adjustment ................ ................ .............. ........... 291\n7.7 Slot Availability Mask (SAM)........... ................ .............. ........... 292\n8 Direction finding using Bl uetooth Low Energy...... ............... ........ 293\n8.1 Angle of arrival (AoA) method ............ .............. ............... ........ 293\n8.2 Angle of departure (AoD) method..... .............. .............. ........... 294", "start_char_idx": 0, "end_char_idx": 3619, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "30c7970a-c05d-4a4c-af82-c46c8451661e": {"__data__": {"id_": "30c7970a-c05d-4a4c-af82-c46c8451661e", "embedding": null, "metadata": {"page_label": "6", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2996b822-0618-4677-a7c2-226dab5f6d85", "node_type": null, "metadata": {"page_label": "6", "file_name": "bluetooth-act.pdf"}, "hash": "982952b8a2141ee04259a7ea2129c00840eed4e4d2d5342a81f44fa644043d03"}}, "hash": "982952b8a2141ee04259a7ea2129c00840eed4e4d2d5342a81f44fa644043d03", "text": "General description Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 187\nArchitecture\n1  GENERAL DESCRIPTION\nBluetooth wireless technology is a short-range communi cations system \nintended to replace the ca ble(s) connecting portabl e and/or fixed electronic \ndevices. The key features of Bluetooth wireless technology are robustness, low \npower consumption, and low cost. Many features of the specification are \noptional, allowing pr oduct differentiation.\nThere are two forms of Bl uetooth wireless technology  systems: Basic Rate \n(BR) and Low Energy (LE). Both system s include device discovery, connection \nestablishment and connec tion mechanisms. The Basi c Rate system includes \nan optional Enhanced Data  Rate (EDR) extension.  The Basic Rate system \noffers synchronous and asynchronous con nections with data rates of 721.2 kb/\ns for Basic Rate and 2.1 Mb/s for Enhanced Data Rate. The LE system \nincludes features designed to enable products that  require lower current \nconsumption, lower complexi ty and lower cost than BR/EDR. The LE system is \nalso designed for use cases and applicat ions with lower data rates and has \nlower duty cycles. The LE system includes  an optional 2 Mb/s  physical layer \ndata rate and also offers isochronous data transfer in a connection-oriented \nand connectionless mechani sm that uses the is ochronous transports. \nDepending on the use case or applicati on, one system incl uding any optional \nparts may be more op timal than the other.\nDevices implementing both systems c an communicate with  other devices \nimplementing both systems as well as devices implementin g either system. \nSome profiles and use cases will be su pported by only one of the systems. \nTherefore, devices implementing both systems have the ability to support the \nmost use cases.\nThe Bluetooth core system c onsists of a Host and one or  more Controllers. A \nHost is a logical entity defined as all of the layers below the non-core profiles \nand above the Host Controller  interface (HCI). A Contro ller is a logical entity \ndefined as all of the layers  below HCI. An implemen tation of t he Host and \nController may contain the re spective parts of the HCI.\nAn implementation of the Bl uetooth Core has only one Controller which may be \none of the followin g configurations:\n\u2022 a BR/EDR Controller including the Radi o, Baseband, Link Manager and \noptionally HCI.\n\u2022 an LE Controller includ ing the LE PHY, Link Layer and optionally HCI.\n\u2022 a combined BR/EDR Controller por tion and LE Controller portion (as \nidentified in the previous two bu llets) into a single Controller.", "start_char_idx": 0, "end_char_idx": 2661, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "b2732342-1f42-4d4b-ac21-df2f2ed1b8e4": {"__data__": {"id_": "b2732342-1f42-4d4b-ac21-df2f2ed1b8e4", "embedding": null, "metadata": {"page_label": "7", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5bdc6c15-8aac-4cbf-a234-325b67ce70d9", "node_type": null, "metadata": {"page_label": "7", "file_name": "bluetooth-act.pdf"}, "hash": "b5c354d3bb9d3807d2d0d6d5e9f7794ece8c740784f7ac8ebb4e87db6ec0667d"}}, "hash": "b5c354d3bb9d3807d2d0d6d5e9f7794ece8c740784f7ac8ebb4e87db6ec0667d", "text": "General description Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 188\nArchitecture\nFigure 1.1:  Bluetooth Host and Controller combinations: (from left to right): LE Only Controller, BR/\nEDR only Controller, and BR/EDR/LE Controller\nThis Part of the specification provi des an overview of the Bluetooth system \narchitecture, communication topologies , and data transport features. The text \nin this Part of the spec ification should be treated as informational and used as \na background and fo r context-setting.\n1.1   OVERVIEW OF BR/EDR OPERATION\nThe Basic Rate / Enhanced Data Rate (B R/EDR) radio (physi cal layer or PHY) \noperates in the unlicen sed ISM band at 2.4 GHz.  The system employs a \nfrequency hopping transceiver to combat in terference and fading and provides \nmany FHSS carriers. Ba sic Rate radio operation uses a shaped, binary \nfrequency modulation to minimize transceiv er complexity. The symbol rate is 1 \nmegasymbol per seco nd (Msym/s) supporting the bi t rate of 1 megabit per \nsecond (Mb/s) or, with Enhanced Data Rate, a gross air bi t rate of 2 Mb/s or 3 \nMb/s. These modes are known as Ba sic Rate and Enhanc ed Data Rate \nrespectively.\nDuring typical operation a ph ysical radio channel is shared by a group of \ndevices that are synchronized to a common clock and frequency hopping \npattern. One device provi des the synchronization re ference and is known as \nthe Central. All other devices synchr onized to a Central\u2019s clock and frequency \nhopping pattern are known as Peripherals. A group of devices synchronized in \nthis fashion form a piconet. This is t he fundamental form of  communication in \nthe Bluetooth BR/EDR wireless technology.\nDevices in a piconet use a specific  frequency hopping pattern, which is \nalgorithmically determined by  certain fields in the Bluetooth address and clock \nof the Central. The basic hopping pattern  is a pseudo-random  ordering of the \n79 frequencies, separated by 1 MHz, in  the ISM band. The hopping pattern can \nbe adapted \u2013 on a per-Peripheral ba sis \u2013 to exclude a portion of the \nfrequencies that are used by interfering devic es. The adaptive hopping \ntechnique improves Bluetooth co-exist ence with static (non-hopping) ISM \nsystems when they are co-located.\nThe physical channel is sub- divided into time units k nown as slots. Data is \ntransmitted between Bluetooth devices in packets that are positioned in these \nslots. When circumstance s permit, a number of consecutive slots may be BR/EDR\nControllerHost\nLE\nControllerHost Host\nLE\nControllerBR/EDR\nControllerHost\nLE\nControllerBR/EDR\nController", "start_char_idx": 0, "end_char_idx": 2646, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "02833d39-4083-402d-b26e-88ea7b56e3f6": {"__data__": {"id_": "02833d39-4083-402d-b26e-88ea7b56e3f6", "embedding": null, "metadata": {"page_label": "8", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c32f54f9-4b29-4ea7-9dae-728b4d14d79e", "node_type": null, "metadata": {"page_label": "8", "file_name": "bluetooth-act.pdf"}, "hash": "807bffe9e9fa29c137d993d4ff49768d20430910444befbf24980821a23d8b11"}}, "hash": "807bffe9e9fa29c137d993d4ff49768d20430910444befbf24980821a23d8b11", "text": "General description Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 189\nArchitecture\nallocated to a single packet. Fre quency hopping may take place between the \ntransmission or reception of  packets. Bluetooth technology  provides the effect \nof full duplex transmission through the use of a Time-Division Duplex (TDD) \nscheme.\nAbove the physical channel there is a layering of  links and channels and \nassociated control protocols. The hier archy of channels an d links from the \nphysical channel upwards is physical chan nel, physical link, logical transport, \nlogical link and L2CAP channel. Thes e are discussed in more detail in Section \n3.3 to Section 3.6  but are introduced here to aid the understanding of the \nremainder of this section.\nTypically within a physica l channel, a physical  link is formed between a Central \nand one or more Peripher als. Exceptions to this  include Inquiry scan and Page \nscan physical channels, which have no a ssociated physical li nk. The physical \nlink provides bidirectional packe t transport between the Central and \nPeripherals, except in the case of a Connectionl ess Peripheral Broadcast \nphysical link. In that case, the physica l link provides a unidirectional packet \ntransport from the Central to a potentia lly unlimited number  of Peripherals. \nSince a physical channel could include multiple Peripherals, there are \nrestrictions on whic h devices may form a physical li nk. There is a physical link \nbetween each Peripheral and t he Central. Physical links are not formed directly \nbetween the Peripher als in a piconet.\nThe physical link is used as a transpor t for one or more lo gical links that \nsupport unicast syn chronous, asynchronous and isochronous traffic, and \nbroadcast traffic. Traffic on logical lin ks is multiplexed onto the physical link by \noccupying slots assigned by a scheduling function in  the resource manager.\nA control protocol for the baseband and physical layers is carried over logical \nlinks in addition to user data. This is th e Link Manager protoc ol (LMP). Devices \nthat are active in a piconet have a default asynchronous connection-oriented \nlogical transport that is used to transport the LMP protocol signaling. For \nhistorical reasons this is known as the ACL logi cal transport. With the \nexception of Connectionle ss Peripheral Broadcast devices, the primary ACL \nlogical transport is the one that is created whenev er a device joins a piconet. \nConnectionless Peripheral Broadcast devices  may join the piconet purely to \nlisten to Connectionless Peripheral Broadcast pa ckets. In that case, a \nConnectionless Peripheral Br oadcast logical transport is created (also called a \nCPB logical transport) and no ACL logical transport is  required. For all devices, \nadditional logical transpor ts may be created to tr ansport synchronous data \nstreams when required.\nThe Link Manager function us es LMP to control the oper ation of devices in the \npiconet and provide servic es to manage the lower architectural layers (radio \nand baseband). The LMP protocol is ca rried on the primary ACL and Active \nPeripheral Broadcast logical transports.", "start_char_idx": 0, "end_char_idx": 3202, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "7240fd42-2e5a-4c7e-84a0-e195bab2c5fc": {"__data__": {"id_": "7240fd42-2e5a-4c7e-84a0-e195bab2c5fc", "embedding": null, "metadata": {"page_label": "9", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "15b6df17-8462-4a75-9d8c-dcf66c61d822", "node_type": null, "metadata": {"page_label": "9", "file_name": "bluetooth-act.pdf"}, "hash": "4e86627eb64f1d18842e68a44fa08c7ed979ba9785120919774bbe7af0718836"}}, "hash": "f58ed8848c9135dfb78e8d920b4c111295e7b00c27290645c9464bce71c3fc4c", "text": "General description Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 190\nArchitecture\nAbove the baseband the L2CAP layer prov ides a channel-based abstraction to \napplications and services . It carries out segment ation and reassembly of \napplication data and multiplexing and de-mu ltiplexing of multiple channels over \na shared logical link. L2CAP has a protocol  control channel that  is carried over \nthe default ACL logi cal transport. Appl ication data submi tted to the L2CAP \nprotocol may be carried on any logical link that s upports the L2CA P protocol.\n1.2   OVERVIEW OF BLUETO OTH LOW ENERGY OPERATION\nLike the BR/EDR radio, t he LE radio operates in the unlicensed 2.4 GHz ISM \nband. The LE system em ploys a frequency hopping tr ansceiver to combat \ninterference and fading and provides many FHSS carriers. LE radio operation \nuses a shaped, binary frequency modulation to minimize transceiver \ncomplexity. LE uses terminology t hat differs from BR/EDR to describe \nsupported PHYs with regards to differenc es in modulation, coding that may be \napplied, and the resulting data rate s. The mandatory symbol rate is 1 \nmegasymbol per second (Msym /s), where 1 symbol repr esents 1 bit therefore \nsupporting a bit rate of 1 m egabit per second (Mb/s), wh ich is referred to as the \nLE 1M PHY. The 1 Msym/s symbol rate may optionally support error correction \ncoding, which is referred to  as the LE Coded PHY. Th is may use either of two \ncoding schemes: S=2, where 2 symbols represent 1 bit therefore supporting a \nbit rate of 500 kb/s, and S=8, wher e 8 symbols represent  1 bit therefore \nsupporting a bit rate of 125 kb/s. An opt ional symbol rate of  2 Msym/s may be \nsupported, with a bit rate of 2 Mb/s, which is referred to  as the LE 2M PHY. The \n2 Msym/s symbol rate s upports uncoded data only. LE 1M and LE 2M are \ncollectively referred to as the LE Uncoded PHYs. Section 3.2.2  describes this \nterminology in  more detail.\nLE employs two multiple access schem es: Frequency division multiple access \n(FDMA) and time division multiple access (TDMA). Forty (40) physical \nchannels, separated by 2 MH z, are used in the FDMA  scheme. Three (3) are \nused as primary adverti sing channels and 37 are used as general purpose \nchannels (including as se condary advertising cha nnels). A TDMA based \npolling scheme is used in which one device transmits a packet at a \npredetermined time and a corresponding devi ce responds with a packet after a \npredetermined interval.\nThe physical channel is sub- divided into time units k nown as events. Data is \ntransmitted between LE devices in packets  that are positioned in these events. \nThe following types of events exist: Adve rtising, Extended Adve rtising, Periodic \nAdvertising, Connection, and Isochronous events (which are partitioned into \nBIS, BIG, CIS, and CIG events).\nDevices that transmit advertising packe ts on the advertising PHY channels are \nreferred to as advertisers. Devices th at receive adverti sing packets on the \nadvertising physical channels without the intention to c onnect to the advertising \ndevice are referred to as scanners. Transmissions  on the advertising PHY \nchannels occur in advertising ev ents. At the start of eac h advertising event, the \nadvertiser sends an adve rtising packet corresponding to the advertising event", "start_char_idx": 0, "end_char_idx": 3386, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "313de812-0b00-447c-a72a-5040dcf31b58": {"__data__": {"id_": "313de812-0b00-447c-a72a-5040dcf31b58", "embedding": null, "metadata": {"page_label": "10", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ea561b1a-82ab-416b-bac1-e42e602d7fd9", "node_type": null, "metadata": {"page_label": "10", "file_name": "bluetooth-act.pdf"}, "hash": "acdd9ca4cd4bbfd6c3856aab83d9a1899a4253b6a08e9547f1fd646c17555891"}}, "hash": "acdd9ca4cd4bbfd6c3856aab83d9a1899a4253b6a08e9547f1fd646c17555891", "text": "General description Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 191\nArchitecture\ntype. Depending on the type of advertising packet, the scanner may make a \nrequest to the advertiser on the same advertising PHY channel which may be \nfollowed by a response from the advertiser on the same advertising PHY \nchannel. The advertising PHY channel c hanges on the next advertising packet \nsent by the advertiser in  the same advertising event . The advertiser may end \nthe advertising event at any time during the event. Each ad vertising packet in \nan advertising event uses a different advertising PHY channel. Each \nadvertising event may use a different order for the advert ising PHY channels.\nFigure 1.2:  Advertising events\nLE devices may fulfill the ent ire communication in the ca se of unidirectional or \nbroadcast communication be tween two or more devices using advertising \nevents. LE devices may also use adverti sing events to estab lish bi-directional \nconnections with anot her device and to establish a synchronous or isochronous \nperiodic broadcasts. Asynchronous per iodic broadcasts may allow the \nadvertiser to receive responses from  one or more devices. These additional \nactivities make use of the general  purpose channels in various ways.\nDevices that need to form an ACL co nnection to another device listen for \nconnectable advertising packets. Such devices  are referred to as initiators. If \nthe advertiser is using a connectable advertising ev ent, an initiator may make a \nconnection request us ing the same advertising PHY channel on which it \nreceived the connectable ad vertising packet.  The advertising event is ended \nand connection events begin if the adver tiser receives and accepts the request \nfor a connection be initiated. Once a connection is established, the initiator \nbecomes the Central in what  is referred to as a pi conet and the advertising \ndevice becomes the Peripheral. Conn ection events are us ed to send data \npackets between the Centra l and Peripherals. In connection events, channel \nhopping occurs at the st art of each connection ev ent. Within a connection \nevent, the Central and Peri pheral alternate sending data packets using the \nsame data PHY channel. The Centra l initiates the beginning of each \nconnection event and c an end each connection ev ent at any time.$GY 6FDQQHU $GY $GY\n$GY\u0003&K\u000bN\f $GY\u0003&K\u000bN\u000e\u0015\f $GY\u0003&K\u000bN\u000e\u0014\f$GYHUWLVLQJ\u0003HYHQW\n$GY $GY $GY\n$GY\u0003&K\u000bP\f $GY\u0003&K\u000bP\u000e\u0014\f$GYHUWLVLQJ\u0003HYHQW", "start_char_idx": 0, "end_char_idx": 2518, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "8267b3c6-de17-4d53-afc5-ffac106dad60": {"__data__": {"id_": "8267b3c6-de17-4d53-afc5-ffac106dad60", "embedding": null, "metadata": {"page_label": "11", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c54f7062-e008-45fe-a113-2a7a06f31866", "node_type": null, "metadata": {"page_label": "11", "file_name": "bluetooth-act.pdf"}, "hash": "52400e0ddd0c03122358bd39ec88a038731663163b508fe7f404815d91403d49"}}, "hash": "52400e0ddd0c03122358bd39ec88a038731663163b508fe7f404815d91403d49", "text": "General description Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 192\nArchitecture\nFigure 1.3:  Connection events\nDevices in a piconet use a specific  frequency hopping pattern, which is \nalgorithmically determined by a field cont ained in the connect ion request sent \nby an initiating device. The hopping patte rn used in LE is a pseudo-random \nordering of the 37 frequencies in the ISM band. The hopping pattern can be \nadapted to exclude a portion of the freq uencies that are us ed by interfering \ndevices. The adaptive hopping technique im proves Bluetooth co-existence with \nstatic (non-hopping) IS M systems when these are co-located and have access \nto information about the lo cal radio environment, or det ected by other means. A \nPeripheral can classify frequencies as  good and bad an d provide that \ninformation to the Centra l. The Central can take this information into \nconsideration while adapt ing the hopping pattern.\nUsing an ACL connection, a Central can establish one or more isochronous \nconnections that use t he isochronous physical channel. An isochronous \nconnection is used to transfer isochrono us data between t he Central and a \nPeripheral by using a logical transport, which is referred to  as a Connected \nIsochronous Stream (CIS). A CIS consists  of CIS events that occur at regular \nintervals (designated ISO_Interval). Ever y CIS event consists of one or more \nsubevents. In each subeven t, the Central transmits once and the Peripheral \nresponds. If the Centra l and Peripheral have comp leted transferring the \nscheduled isochronous data  in a CIS event, all rema ining subevents in that \nevent will have no radio transmissions a nd the event is closed. Each subevent \nuses a PHY channel which is determine d by using the channel selection \nalgorithm. The PHY channel that is us ed for a subevent is marked as ISO \nCh(eventcount, subevent count), as shown in Figure 1.4 .Initiator Adv C\u2192P\nAdv Ch(k) Data Ch(x)Advertising event\nP\u2192C P\u2192C C\u2192P\nData Ch(x+1)Connection event\nC\u2192P P\u2192CConnection event", "start_char_idx": 0, "end_char_idx": 2097, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "b45293d6-bdc1-4393-8a60-11df40de0d36": {"__data__": {"id_": "b45293d6-bdc1-4393-8a60-11df40de0d36", "embedding": null, "metadata": {"page_label": "12", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0e3a4014-8d85-485f-91f4-cb86fe97d2b2", "node_type": null, "metadata": {"page_label": "12", "file_name": "bluetooth-act.pdf"}, "hash": "ead29557900deed3f51bce6198c25020d93b6c3b2d5dfc8c5dc3c02b2b0effc3"}}, "hash": "ead29557900deed3f51bce6198c25020d93b6c3b2d5dfc8c5dc3c02b2b0effc3", "text": "General description Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 193\nArchitecture\nFigure 1.4:  CIS events and subevents\nA device can use an isoc hronous physical channel to broadcast isochronous \ndata by using isochronous connectionle ss logical transports. An isochronous \nconnectionless logical trans port is referred to as a Broadcast Isochronous \nStream (BIS). A BIS consists of BIS ev ents that occur at regular intervals \n(designated ISO_Interval). Every BIS event  consists of one or more subevents. \nIn every subevent, a broadcasting device transmits an isochronous data \npacket. Each subevent uses a PHY c hannel that is dete rmined using the \nchannel selection algorithm.\nA device can transmit severa l BISes with synchronized ti ming; this is referred \nto as a Broadcast Isochronous Group (BIG ). The various BIS events together \nform a BIG event. The device can also use the isochronous physical channel to \nbroadcast control information in a Contro l subevent, which is transmitted at the \nend of all subevents for a BIG, as shown in Figure 1.5 .\nA device that transmits BIG events al so transmits periodic advertisement \nevents that contain synchronization in formation of the BIG. A device that is \nscanning can synchronize to those peri odic advertising event s and receive the \nsynchronization information.  Using this synchronizati on information, the device \ncan synchronize to one or more BISes in the BIG and receive the isochronous \ndata. Figure 1.5  shows two BIG events: one wi th and one without a Control \nsubevent. Each subevent uses a PHY ch annel marked as ISO Ch(eventcount, \nsubeventcount), as shown in Figure 1.5 .C/g198PEvent x Event x+1\nISO_IntervalSubevent 1\nISO Ch(x,1)Subevent 2\nISO Ch(x,2)Subevent 1\nISO Ch(x+1,1)Subevent 2\nISO Ch(x+1,2)\nP/g198C C/g198P P/g198C C/g198P P/g198C C/g198P P/g198C", "start_char_idx": 0, "end_char_idx": 1899, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "fe5ad608-5e12-44ad-9dfa-d5e67883b63c": {"__data__": {"id_": "fe5ad608-5e12-44ad-9dfa-d5e67883b63c", "embedding": null, "metadata": {"page_label": "13", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ae6bc19f-57d8-4549-9bcc-2944ffd42a52", "node_type": null, "metadata": {"page_label": "13", "file_name": "bluetooth-act.pdf"}, "hash": "c3ea76be1d3633bfbcbcbabd77b3e73467d5b080064f367e3a22a11f09e3c551"}}, "hash": "c3ea76be1d3633bfbcbcbabd77b3e73467d5b080064f367e3a22a11f09e3c551", "text": "General description Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 194\nArchitecture\nFigure 1.5:  BIG and BIS events, BIS subevents, and Control subevent\nAbove the physical channel there ar e concepts of links, channels and \nassociated control protocol s. The hierarchy is physi cal channel, physical link, \nlogical transport, logica l link, and L2CAP channel. These are discussed in \nmore detail in Section 3.3  to Section 3.6  but are introduced  here to aid the \nunderstanding of the rema inder of this section.\nWithin a physical channel, a physical link  is formed between devices. The \nactive physical link provides bidirect ional packet transport between the Central \nand Peripherals. Centrals may have physical links to more than one Peripheral \nat a time and Peripherals ma y have physical links to more than one Central at \na time. A device may be Central and Perip heral in different piconets at the \nsame time. Role changes between a Centra l and Peripheral are not supported. \nThe advertising and peri odic physical links provide a unidirectional packet \ntransport from the advertise r to a potentially unlimit ed number of scanners or \ninitiators.\nThe physical link is used as a transpor t for one or more lo gical links that \nsupport asynchronous traffic.  Traffic on logical links is multiplexed onto the \nphysical link assigned by a scheduling function in  the resource manager.\nA control protocol for the lin k and physical layers is ca rried over logical links in \naddition to user data. This  is the Link Layer protoc ol (LL). Devices that are \nactive in a piconet have a default LE  asynchronous connecti on logical transport \n(LE ACL) that is used to transport the LL protocol signaling. Th e default LE \nACL is the one that is created w henever a piconet is created.\nThe Link Layer function uses the LL prot ocol to control the operation of devices \nin the piconet and provide services to  manage the lower architectural layers \n(PHY and LL).\nOverall, a piconet consists of one ACL l ogical transport over t he active physical \nlink plus zero or more CIS logical transports over the isochronous physical \nlink(s).Tx Tx TxBIS Event x\nISO_IntervalTx Tx TxBIS Event x+1\nTx\nSubevent 1\nISO Ch(x,1)Subevent 2\nISO Ch(x,2)Subevent 3\nISO Ch(x,3)Subevent 1\nISO Ch(x+1,1)Subevent 2\nISO Ch(x+1,2)Subevent 3\nISO Ch(x+1,3)Control \nsubevent\nISO Ch(x+1,1)BIG Event x BIG Event x+1", "start_char_idx": 0, "end_char_idx": 2451, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "693d315a-2844-4ed1-ad0d-8979ac451dbf": {"__data__": {"id_": "693d315a-2844-4ed1-ad0d-8979ac451dbf", "embedding": null, "metadata": {"page_label": "14", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c58bf181-1fb2-41f8-9c82-3b040f2f9b51", "node_type": null, "metadata": {"page_label": "14", "file_name": "bluetooth-act.pdf"}, "hash": "bf4c4cdeac2f98598f9784fd5c61bd61ddd54cb138a045e25c5be25fb9f9619a"}}, "hash": "bf4c4cdeac2f98598f9784fd5c61bd61ddd54cb138a045e25c5be25fb9f9619a", "text": "General description Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 195\nArchitecture\nJust as in BR/EDR, above the Link Layer the L2CAP layer provides a channel-\nbased abstraction to applicat ions and services. It ca rries out fragmentation and \nde-fragmentation of  application data  and multiplexing and de-multiplexing of \nmultiple channels over a shared logical link. L2CAP has a protocol control \nchannel that is carri ed over the primary AC L logical transport. \nIn addition to L2CAP, LE pr ovides two additional protocol  layers that reside on \ntop of L2CAP. The Securi ty Manager protocol (S MP) uses a fixed L2CAP \nchannel to implement the security functi ons between devices.  The other is the \nAttribute Protocol (ATT) that provides a method to  communicate small amounts \nof data over a fixed L2CAP channel. The Attribute Protocol is also used by \ndevices to determine the services an d capabilities of other devices. The \nAttribute Protocol may al so be used over BR/EDR.\nThe LE radio provides a means for detect ing the relative direction of another \nLE radio by using the A ngle of Arrival (AoA) or Angle of Departure (AoD) \nmethod.\n1.3   [THIS SECTION IS NO LONGER USED]\n1.4   NOMENCLATURE\nWhere the following terms appear in the specificati on they have the meaning \ngiven in Table 1.1 . \nActive Peripheral Broadcast \n(APB)The logical transport that is used to transport L2CAP user traffic and some kinds of LMP traffic to all active devices in the piconet over the BR/EDR Controller. See Section 3.5.4.4\nAd Hoc Network A network typically created in a spontaneous manner. An ad hoc network requires no formal infrastructure and is limited in tempor al and spatial extent.\nAdvertiser A Bluetooth Low Energy device that broadcasts adver-\ntising packets during advert ising events on advertising \nchannels\nAdvertising event A series of between one and three advertising packets on different advertising physical channels sent by an advertiser.\nAdvertising Packet A packet containing an advertising PDU. See [Vol 6] \nPart B, Section 2.3.1\nAngle of Arrival (AoA) Angle of Arrival is the relati ve direction at which a prop-\nagating RF wave that was transmitted by a single antenna is incident on an antenna array.\nAngle of Departure (AoD) Angle of Departure is the relative direction from which a propagating RF wave that was transmitted using an antenna array is incident on another antenna.\nTable 1.1:  Nomenclature (Sheet 1 of 7)", "start_char_idx": 0, "end_char_idx": 2509, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "b6500f2b-32fd-494e-8e2a-f6ad2a58a871": {"__data__": {"id_": "b6500f2b-32fd-494e-8e2a-f6ad2a58a871", "embedding": null, "metadata": {"page_label": "15", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "1954a776-1ab4-43c1-b320-376c90ec8a69", "node_type": null, "metadata": {"page_label": "15", "file_name": "bluetooth-act.pdf"}, "hash": "1e8fd8c4cc9bea493f587c580de991398967e77c7a720b1c9d5d09aa92343be5"}}, "hash": "1e8fd8c4cc9bea493f587c580de991398967e77c7a720b1c9d5d09aa92343be5", "text": "General description Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 196\nArchitecture\nBD_ADDR The Bluetooth Device Address, BD_ADDR, is used to \nidentify a Bluetooth device.\nBluetooth Bluetooth is a wireless communication link, operating in the unlicensed ISM band at 2.4 GHz using a frequency \nhopping transceiver. It allows real-time AV and data communications between Bluetooth Hosts. The link protocol is based on time slots.\nBluetooth Baseband The part of the Bluetooth system that specifies or implements the medium access and physical layer pro-cedures to support the exchange of real-time voice, data information streams, and ad hoc networking between Bluetooth Devices.\nBluetooth Clock A 28 bit clock internal to a BR/EDR Controller sub-sys-\ntem that ticks every 312.5 \u00b5s . The value of this clock \ndefines the slot numbering and timing in the various physical channels.\nBluetooth Controller A generic term referr ing to a Controller.\nBluetooth Device A device that is capable of short-range wireless com-\nmunications using the Bluetooth system.\nBluetooth Device Address A 48 bit address used to identify each Bluetooth device. \nBR/EDR Bluetooth basic rate (BR) and enhanced data rate (EDR).\nBR/EDR Controller A term referring to the Bluetooth Radio, Baseband, Link Manager, and HCI layers.\nBR/EDR Piconet Physical Chan-nel A Channel that is divided into time slots in which each slot is related to an RF hop frequency. Consecutive hops normally correspond to different RF hop frequen-cies and occur at a standard hop rate of 1600 hops per second. These consecutive hops follow a pseudo-ran-dom hopping sequence, hopping through a 79 RF channel set, or optionally fewer channels when Adap-tive Frequency Hopping (AFH) is in use.\nBR/EDR/LE Bluetooth basic rate (BR), enhanced data rate (EDR) and low energy (LE).\nC-plane Control plane\nChannel Either a physical channel or an L2CAP channel, depending on the context.\nConnect (to service) The establishment of a conne ction to a service. If not \nalready done, this also includes establishment of a physical link, logical transp ort, logical link and L2CAP \nchannel.\nTable 1.1:  Nomenclature (Sheet 2 of 7)", "start_char_idx": 0, "end_char_idx": 2225, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "fcaf034c-d09f-4332-b90f-df1701758b0d": {"__data__": {"id_": "fcaf034c-d09f-4332-b90f-df1701758b0d", "embedding": null, "metadata": {"page_label": "16", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7bfd13df-853f-4ade-a531-d47c39f449c6", "node_type": null, "metadata": {"page_label": "16", "file_name": "bluetooth-act.pdf"}, "hash": "5cf5a2aa20ae3baf1a1ef57b10f5d697741b753bb1a8fc3b7a371371f2e0c237"}}, "hash": "5cf5a2aa20ae3baf1a1ef57b10f5d697741b753bb1a8fc3b7a371371f2e0c237", "text": "General description Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 197\nArchitecture\nConnectable device A BR/EDR device in range th at periodically listens on \nits page scan physical ch annel and will re spond to a \npage on that channel. An LE device that is advertising using a connectable advertising event.\nConnected devices Two BR/EDR devices and wit h a physical link between \nthem.\nConnecting A phase in the communicati on between devices when \na connection between the devices is being established. (Connecting phase follows after the link establishment phase is completed.)\nConnection A connection between two peer applications or higher layer protocols mapped onto an L2CAP channel.\nConnection establishment A procedure for creating a connection mapped onto a channel.\nConnection event A series of one or more pairs of interleaving data pack-\nets sent between a Central and a Peripheral on the \nsame physical channel.\nConnectionless Peripheral Broad-cast (CPB) A feature that enables a Central to broadcast informa-tion to an unlimited number of Peripherals.\nConnectionless Peripheral Broad-cast Receiver A Bluetooth device that receives broadcast information from a Connectionless Peripheral Broadcast Transmit-ter. The device is a Peripheral of the piconet.\nConnectionless Peripheral Broad-cast Transmitter A Bluetooth device that se nds Connectionless Periph-\neral Broadcast messages for reception by one or more Connectionless Peripheral Broadcast receivers. The device is the Cent ral of the piconet.\nController A collective term referring to all of the layers below HCI.\nCoverage area The area where two Bluetoo th devices can exchange \nmessages with acceptable quality and performance.\nCreation of a secure connection A procedure of establishing a connection, including authentication and encryption.\nCreation of a trusted relationship A procedure where the remote device is marked as a trusted device. This includes storing a common link key for future authentica tion, or pairing, when a link key is \nnot available.\nDevice discovery A procedure for retrieving the Bluetooth Device Address, clock, and Class of Device from discoverable devices.\nDiscoverable device A BR/EDR device in range th at periodically listens on \nan inquiry scan physical c hannel and will respond to an \ninquiry on that channel. An LE device in range that is advertising with a connectabl e or scannable advertising \nevent with a discoverable flag set in the advertising data. This device is in the discoverable mode.\nTable 1.1:  Nomenclature (Sheet 3 of 7)", "start_char_idx": 0, "end_char_idx": 2614, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "0e0a8c1e-e97e-41e9-a131-86c65f3abd63": {"__data__": {"id_": "0e0a8c1e-e97e-41e9-a131-86c65f3abd63", "embedding": null, "metadata": {"page_label": "17", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8b39d494-c2e6-4d73-a722-ef75d9a90864", "node_type": null, "metadata": {"page_label": "17", "file_name": "bluetooth-act.pdf"}, "hash": "5ef675629e842f73e7fba29f2ec9e3894c7032a3b55232b93e9a4333df632734"}}, "hash": "5ef675629e842f73e7fba29f2ec9e3894c7032a3b55232b93e9a4333df632734", "text": "General description Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 198\nArchitecture\nDiscoverable Mode A Bluetooth device that is performing inquiry scans in \nBR/EDR or advertising with a discoverable or connect-able advertising event with a discoverable flag set in LE.\nDiscovery procedure A Bluetooth device that is carrying out the inquiry pro-cedure in BR/EDR or scanni ng for advertisers using a \ndiscoverable or connectable advertising event with a discoverable flag set in LE.\nHCI The Host Controller interface (HCI) provides a command interface to the baseband Controller and link manager and access to hardware status and control registers. This interface pr ovides a uniform method of \naccessing the Bluetooth baseband capabilities.\nHost A logical entity defined as all of the layers below the \nnon-core profiles and above the Host Controller inter-face (HCI); i.e., the layers specified in Volume 3 . A \nBluetooth Host attached to a Bluetooth Controller may communicate with other Bluet ooth Hosts attached to \ntheir Controllers as well.\nInitiator A Bluetooth Low Energy device that listens on advertis-ing physical channels for connectable advertising events to form connections.\nInquiring device A BR/EDR device that is carrying out the inquiry proce-dure. This device is performing the discovery proce-dure.\nInquiry A procedure where a Bluetooth device transmits inquiry messages and listens for responses in order to dis-cover the other Bluetooth devices that are within the coverage area.\nInquiry scan A procedure where a Bluetooth device listens for inquiry messages received on its inquiry scan physical channel.\nInteroperability The ability of two or more de vices to exchange informa-\ntion and to use the information that has been exchanged.\nIsochronous data Information in a stream where each information entity in the stream is bound by a time relationship to previ-ous and successive entities.\nKnown device A Bluetooth device for which at least the BD_ADDR is stored.\nL2CAP Logical Link Control and Adaptation Protocol\nL2CAP Channel A logical connection on L2CAP level between two devices serving a single application or higher layer protocol.\nL2CAP Channel establishment A procedure for establishing a logical connection on L2CAP level.\nLE Bluetooth Low Energy\nTable 1.1:  Nomenclature (Sheet 4 of 7)", "start_char_idx": 0, "end_char_idx": 2389, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "d0d98167-c6ec-4974-ba7a-f7690a05e5f0": {"__data__": {"id_": "d0d98167-c6ec-4974-ba7a-f7690a05e5f0", "embedding": null, "metadata": {"page_label": "18", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "15b0ac0b-2bb5-4421-b28d-1e49ec192a4c", "node_type": null, "metadata": {"page_label": "18", "file_name": "bluetooth-act.pdf"}, "hash": "0582355a6f7c65e56ea31acdf2fd4cae3d32fd321698dffc72a57a7cb1715202"}}, "hash": "0582355a6f7c65e56ea31acdf2fd4cae3d32fd321698dffc72a57a7cb1715202", "text": "General description Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 199\nArchitecture\nLink Shorthand for a logical link.\nLink establishment A procedure for establishing  the default ACL link and \nhierarchy of links and channels between devices.\nLink key A secret key that is known by two devices and is used to authenticate the link.\nLMP authentication An LMP level procedure for verifying the identity of a remote device.\nLMP pairing A procedure that authenticates two devices and cre-ates a common link key that can be used as a basis for a trusted relationship or a (single) secure connection.\nLogical link The lowest architectural level used to offer independent data transport services to clients of the Bluetooth system.\nLogical transport Shared acknowledgment protocol and link identifiers between different logical links.\nName discovery A procedure for retrieving the user-friendly name (the Bluetooth Device Name) of a connectable device.\nPacket Format of aggregated bits that are transmitted on a physical channel.\nPage The initial phase of the co nnection procedure where a \ndevice transmits a train of page messages until a \nresponse is received from the target device or a time-out occurs.\nPage scan A procedure where a device listens for page messages received on its page scan physical channel.\nPaging device A Bluetooth device that is carrying out the page proce-\ndure.\nPaired device A Bluetooth device for which a link key has been cre-\nated (either before connection establishment was \nrequested or during connecting phase).\nPasskey A 6-digit number used to authenticate connections \nwhen Secure Simple  Pairing is used.\nPeriodic advertising synchroniza-\ntion informationThe control information describing a periodic advertise-ment that a Bluetooth Low Energy device uses to syn-chronize to the advertisement it describes.\nPhysical Channel Characterized by synchronized occupancy of a sequence of RF carriers by one or more devices. A number of physical channel types exist with character-istics defined for their different purposes.\nPhysical link A Baseband or Link Layer level connection between two devices.\nPhysical Transport PHY packet transmission and/or reception on an RF channel using one or more modulation schemes.\nTable 1.1:  Nomenclature (Sheet 5 of 7)", "start_char_idx": 0, "end_char_idx": 2347, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "eb6e25b2-4c2a-4f07-8693-89698386709a": {"__data__": {"id_": "eb6e25b2-4c2a-4f07-8693-89698386709a", "embedding": null, "metadata": {"page_label": "19", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e5ed71a8-6627-4249-a475-c9fcd625ed1e", "node_type": null, "metadata": {"page_label": "19", "file_name": "bluetooth-act.pdf"}, "hash": "2ed9619bfb41042684bbb56cc590b3742a40a12ff24bbcf6454216ca0058c30d"}}, "hash": "2ed9619bfb41042684bbb56cc590b3742a40a12ff24bbcf6454216ca0058c30d", "text": "General description Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 200\nArchitecture\nPiconet A collection of devices (up to eight devices in BR/EDR, \nexactly two devices in LE) occupying a shared physical \nchannel where one of the devices is the Piconet Cen-tral and the remaining devices are connected to it.\nPiconet Central The BR/EDR device in a piconet whose Bluetooth Clock and Bluetooth Device Address are used to define the piconet physical channel characteristics.\nThe LE device in a piconet which initiates the creation \nof the piconet, chooses the Ac cess Address that identi-\nfies the piconet, and transmits first in each connection event.\nPiconet Peripheral Any BR/EDR device in a pico net that is not the Piconet \nCentral, but is connected to the Piconet Central.\nThe LE device in a piconet which is not the Central but \ncommunicates with it.\nPIN A user-friendly number that can be used to authenti-cate connections to a device before pairing has taken place.\nProfile Broadcast Data (PBD) A logical link that carries da ta from a Connectionless \nPeripheral Broadcast Transmitter to one or more Connectionless Peripheral Broadcast Receivers.\nResolving List A list of records used to generate and resolve Resolv-able Private Addresses. Each record contains a local Identity Resolving Key, a pe er Identity Resolving Key, \nand a peer Identity Address.\nScanner A Bluetooth Low Energy device that listens for advertis-ing events on the advertising physical channels.\nScatternet Two or more piconets that have one or more devices in common.\nService discovery Procedures for querying and browsing for services offered by or through another Bluetooth device.\nService Layer Protocol A protocol that uses an L2CAP channel for transporting PDUs.\nSilent device A Bluetooth enabled device appears as silent to a remote device if it does not respond to inquiries made by the remote device.\nSynchronization Scan Physical Channel A physical channel that enables a Peripheral to receive synchronization train packets from a Central.\nSynchronization Train A series of packets transmitted on a set of fixed fre-quencies that deliver sufficient information for a receiv-ing device to start receiving corresponding Connectionless Peripheral Broadcast packets or to recover the current piconet clock after missing a Coarse Clock Adjust. \nTable 1.1:  Nomenclature (Sheet 6 of 7)", "start_char_idx": 0, "end_char_idx": 2433, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "01913195-a76f-4e86-ae94-1f1f9dd8c8dc": {"__data__": {"id_": "01913195-a76f-4e86-ae94-1f1f9dd8c8dc", "embedding": null, "metadata": {"page_label": "20", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "109c0842-97d1-45ab-8318-fdfc60a1d1c6", "node_type": null, "metadata": {"page_label": "20", "file_name": "bluetooth-act.pdf"}, "hash": "d98b72d65fe2247a9235f423be31252f186584bd9be5cc28e2113a20d28a03cf"}}, "hash": "d98b72d65fe2247a9235f423be31252f186584bd9be5cc28e2113a20d28a03cf", "text": "General description Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 201\nArchitecture\nTick (BR/EDR) the time between changes of the value of \nthe Bluetooth Clock: 312.5 \u00b5s.\nU-plane User plane\nUnknown device A Bluetooth device for which no information (Bluetooth Device Address, link key or other) is stored.\nTable 1.1:  Nomenclature (Sheet 7 of 7)", "start_char_idx": 0, "end_char_idx": 411, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "50ff4bfe-d91c-452a-835b-05119a137ba2": {"__data__": {"id_": "50ff4bfe-d91c-452a-835b-05119a137ba2", "embedding": null, "metadata": {"page_label": "21", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4361c13f-4dbe-4086-b32b-f85d1ea0f9aa", "node_type": null, "metadata": {"page_label": "21", "file_name": "bluetooth-act.pdf"}, "hash": "d0591519c5038a8cd4a6f4d36a07355d9f6fd11f8e6ab1051160ddc40f9b02d4"}}, "hash": "d0591519c5038a8cd4a6f4d36a07355d9f6fd11f8e6ab1051160ddc40f9b02d4", "text": "Core system architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 202\nArchitecture\n2  CORE SYSTEM ARCHITECTURE \nThe Bluetooth Core system c onsists of a Host and a Controller. A minimal \nimplementation of the Bl uetooth BR/EDR core system co vers the four lowest \nlayers and associated prot ocols defined by the Bluetoot h specification as well \nas one common service layer protocol; the Service Discovery Protocol (SDP) \nand the overall profile requi rements are specified in the Generic Access Profile \n(GAP). A minimal implementation of a Bluetooth LE only core system covers \nthe four lowest layers and associat ed protocols defined by the Bluetooth \nspecification as well as  two common service layer protocols; the Security \nManager (SM) and Attribute Protocol (ATT) and the over all profile requirements \nare specified in the Generic Attribut e Profile (GATT) and Generic Access \nProfile (GAP). Impl ementations combining Bluetoot h BR/EDR and LE include \nboth of the minimal impl ementations described above.\nA complete Bluetooth application requi res a number of additional service and \nhigher layer protocols that are defined in t he Bluetooth specification, but are \nnot described here. The core system  architecture is shown in Figure 2.1 .", "start_char_idx": 0, "end_char_idx": 1324, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "c9a9d378-179f-4ae2-adc0-a8f86f5edd59": {"__data__": {"id_": "c9a9d378-179f-4ae2-adc0-a8f86f5edd59", "embedding": null, "metadata": {"page_label": "22", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3671ba0e-f39e-4b6a-8400-05dd0326c5e2", "node_type": null, "metadata": {"page_label": "22", "file_name": "bluetooth-act.pdf"}, "hash": "dfe544ea42e38a0b1437249723a0adbfebe1ef20aafc0fd89079efa532e6c6bb"}}, "hash": "dfe544ea42e38a0b1437249723a0adbfebe1ef20aafc0fd89079efa532e6c6bb", "text": "Core system architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 203\nArchitecture\nFigure 2.1:  Bluetooth core system architecture\nFigure 2.1  shows the Core blo cks, each with its associated communication \nprotocol. Link Manager, Link Controll er and BR/EDR Radio blocks comprise a \nBR/EDR Controller. Link Manager, Li nk Controller and LE Radio blocks \ncomprise an LE Controller. L2CAP, SD P and GAP blocks co mprise a BR/EDR \nHost. L2CAP, SMP, Attribute Protocol , GAP and Generic Attribute Profile \n(GATT) blocks comprise an LE Host. A BR/EDR/LE Host comb ines the set of \nblocks from each respective Host. This  is a common implementation involving \na standard physical communication interf ace between the C ontroller and the \nHost. Although this interface is optional the architecture is designed to allow for \nits existence and characteristics. T he Bluetooth specification enables \ninteroperability between independent Bluetooth systems by defining the \nprotocol messages exchanged between  equivalent layers, and also \ninteroperability between independent Bl uetooth Controllers and Bluetooth C-plane and control services C/E Command/Event \nACL As ync hronous  (A CL ) da ta  path SCO Synchronous (SCO, eSCO) data path \nU-plane and data traffic ISOBroadcast Isochronous Stream (BIS)\nConnected Isochronous Stream (CIS)HostL2cap Resource \nManagerChannel Manager\nHCI\nLink \nManager\nBaseband Resource Manager\nLink Controller\nBR/EDR Radio and LE Radio (PHY)C/E\nBR/EDR ControllerLink ControllerSDP\nLink \nManagerATT/\nGATT\nL2CAPSMP\nLE ControllerGAP\nISOALISO ACL ACL SCO C/E\nDevice \nManagerC/E", "start_char_idx": 0, "end_char_idx": 1665, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "306e6da3-f326-4f14-8f67-595afd0dccd8": {"__data__": {"id_": "306e6da3-f326-4f14-8f67-595afd0dccd8", "embedding": null, "metadata": {"page_label": "23", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "643134e3-13c2-4eaa-ac04-fbbf28ad3dc7", "node_type": null, "metadata": {"page_label": "23", "file_name": "bluetooth-act.pdf"}, "hash": "2a3fa19175b9dd0308a77355819e0d4e9800e05170123f6742c1a315faf910cf"}}, "hash": "84918d54169613cd2d32ef0d9f3918c3a6ea726aaa48dfd4d4b6ac42a03f8a8d", "text": "Core system architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 204\nArchitecture\nHosts by defining a common interfac e between Bluetooth Controllers and \nBluetooth Hosts.\nA number of functional blocks and the path  of services and data between them \nare shown. The functional blocks show n in the diagram provide a set of \nconceptual entities that are used when  describing the r equirements of the \nspecification; in general the Bluetooth specification does not define the details \nof implementations except where this is  required for inter operability. Thus the \nfunctional blocks in Figure 2.1  are shown in order to  aid description of the \nsystem behavior. An implementation may be different from the system shown \nin Figure 2.1 .\nStandard interactions are defined fo r all inter-device operation, where \nBluetooth devices exchange protocol signaling according to the Bluetooth \nspecification. The Bluetooth core system protocols ar e the Radio (PHY) \nprotocol, Link Control (LC) and Link Manager  (LM) protocol or  Link Layer (LL) \nprotocol, and Logical Link Control and Adaptation protocol  (L2CAP), all of \nwhich are fully defined in subsequent parts of the Bluet ooth specification. In \naddition, the Service Discove ry protocol (SDP) and the Attribute Protocol (ATT) \nare service layer protocols that ma y be required by some Bluetooth \napplications.\nThe Bluetooth core system of fers services th rough a number of service access \npoints that are shown in the diagram as ellipses. These services consist of the \nbasic primitives that cont rol the Bluetooth core syst em. The services can be \nsplit into three types. T here are device cont rol services that modify the \nbehavior and modes of a Bl uetooth device, transport control services that \ncreate, modify and releas e traffic bearers (channels  and links), and data \nservices that are used to submit data for transmission over traffi c bearers. It is \ncommon to consider the first two as bel onging to the C-pla ne and the last as \nbelonging to the U-plane.\nA service interface to the Bluetooth Co ntroller is defined  such that the \nController may be consi dered a standard part. In th is configuration the \nBluetooth Controller operat es the lowest four la yers. The Bluetooth Host \noperates the L2CAP layer and other higher layers. The standard interface is \ncalled the Host Controller interface ( HCI) and its service access points are \nrepresented by the ellipses on the uppe r edge of the Bluet ooth Controller in \nFigure 2.1 . Implementation of th is standard service in terface is optional.\nAs the Bluetooth architectu re is defined with the poss ibility of separate Host \nand Controller(s) communicating th rough one or more HCI transports, a \nnumber of general assump tions are made. Bluetooth Controllers are assumed \nto have limited data buffer ing capabilities in com parison with the Host. \nTherefore the L2CAP layer is expected to carry out some simple resource \nmanagement when submitting L2C AP PDUs to the Controll er for transport to a \npeer device. This includes segment ation of L2CAP SDUs into more \nmanageable PDUs and then the fragmentation of PDUs into start and \ncontinuation packets of a size suitable for the Controller buffers, and", "start_char_idx": 0, "end_char_idx": 3300, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "5c3e6813-e259-40e5-955b-3079652d39bb": {"__data__": {"id_": "5c3e6813-e259-40e5-955b-3079652d39bb", "embedding": null, "metadata": {"page_label": "24", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "deb7b3a6-1854-4ff0-8fb6-8c501d3f14a4", "node_type": null, "metadata": {"page_label": "24", "file_name": "bluetooth-act.pdf"}, "hash": "d7596988d576f9d109e699c548e23482e8260e98d3300621519574152eb211ae"}}, "hash": "3e7e4ebf1c9f4d29230c09080f40a1552eb9055e23cbcea81bf10565dfb9fcc3", "text": "Core system architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 205\nArchitecture\nmanagement of the use of C ontroller buffers to ensure availability for channels \nwith Quality of Serv ice (QoS) commitments.\nThe BR/EDR Baseband and LE Link Layer provide the basic acknowledgment/\nrepeat request (ARQ) protocol in Bluetooth. T he L2CAP layer can optionally \nprovide a further error detection and re transmission to the L2CAP PDUs. This \nfeature is recommended for applications with requirem ents for a low probability \nof undetected errors in the user data. A further optiona l feature of L2CAP is a \nwindow-based flow control that can be used to manage buffer allocation in the \nreceiving device. Both of these optional features  augment the QoS \nperformance in certain sc enarios. Not all of the L2CAP capabilities are \navailable when us ing the LE system.\nAlthough these assumptions are not al ways required for embedded Bluetooth \nimplementations that combine all la yers in a single system, the general \narchitectural and QoS models are defined with these assumptions in mind, in \neffect a lowest co mmon denominator.\nAutomated conformance testing of im plementations of the Bluetooth core \nsystem is required. This is achieved by  allowing the tester to control the \nimplementation through the PH Y interface, test interfac es such as Direct Test \nMode (DTM), and test commands and event s over HCI which are only required \nfor conformance testing.\nThe tester exchanges messages with th e Implementation Under Test (IUT) \nthrough the PHY interface to  ensure the correct res ponses to requests from \nremote devices. The tester controls the IUT through HCI,  DTM, or test \ncommands to cause the IUT to originate exchanges th rough the PHY interface \nso that these can also be verified as conformant.\n2.1   CORE ARCHITECTURAL BLOCKS\nThis section describes the function and responsibility  of each of the blocks \nshown in Figure 2.1 . An implementation is not  required to follow the \narchitecture described abov e, though every implementati on is still required to \nconform to the protocol specifications, behaviors , and other requirements \nspecified in subsequent parts of  the Bluetooth specification.\n2.1.1  Host architectural blocks\n2.1.1.1  Channel manager\nThe channel manager is responsible fo r creating, managi ng and closing \nL2CAP channels for the trans port of service protocol s and application data \nstreams. The channel manager uses the L2C AP protocol to interact with a \nchannel manager on a remote (peer) device to create these L2CAP channels \nand connect their endpoints to the appropriate entit ies. The channel manager \ninteracts with its local li nk manager to create new l ogical links (if necessary)", "start_char_idx": 0, "end_char_idx": 2799, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "cb36a519-cc24-4933-a67e-84911e03cca7": {"__data__": {"id_": "cb36a519-cc24-4933-a67e-84911e03cca7", "embedding": null, "metadata": {"page_label": "25", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a51a50b8-541b-4eeb-adb2-8b0483a41f82", "node_type": null, "metadata": {"page_label": "25", "file_name": "bluetooth-act.pdf"}, "hash": "9cfad4734c368200f21663ce4fa860ababc8bf129db2fda055c77a7842370ce2"}}, "hash": "9097880b20c45ee10c9f80405b132de281d7e6815c03a281769d143bf1d5a37e", "text": "Core system architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 206\nArchitecture\nand to configure these lin ks to provide the required quality of service for the \ntype of data being  transported.\n2.1.1.2  L2CAP resource manager\nThe L2CAP resource manager block is responsible for managing the ordering \nof submission of PDU frag ments to the baseband and so me relative scheduling \nbetween channels to ensure that L2CAP cha nnels with QoS commitments are \nnot denied access to the physical channel due to Controller resource \nexhaustion. This is requir ed because the architectura l model does not assume \nthat a Controller has  limitless buffering, or that the HCI is a pipe of infinite \nbandwidth.\nL2CAP Resource Managers may also carry  out traffic confor mance policing to \ncheck that applications ar e submitting L2CAP SDUs within the bound s of their \nnegotiated QoS settings. The general Bluetooth data transport model assumes \nwell-behaved applications , and does not define how  an implementation is \nexpected to deal with this problem.\n2.1.1.3  Security  Manager Protocol\nThe Security Manager Protocol (SMP) is the peer-to-peer protocol used to \ngenerate encryption keys an d identity keys. The prot ocol operates over a \ndedicated fixed L2CAP c hannel. The SMP block also manages storage of the \nencryption keys and identit y keys and is responsible  for generating random \naddresses and resolving random addresses to known device identities. The \nSMP block interfaces direct ly with the Controller to  provide stored keys used \nfor encryption and authentication during t he encryption or pai ring procedures. \nThis block is only used in LE systems. Si milar functionality in  the BR/EDR system \nis contained in the Link Man ager block in the Controller. SMP functionality is in the \nHost on LE systems to reduc e the implementation cost of  the LE only Controllers.\n2.1.1.4  Attribute Protocol\nThe Attribute Protocol (ATT) block implements the peer-t o-peer protocol \nbetween an ATT Server and an ATT Client. The ATT Client comm unicates with \nan ATT Server on a remote device over  a dedicated fixed L2CAP channel. The \nATT Client sends commands, requests, and confirmations to the ATT Server. \nThe ATT Server sends responses, notific ations and indications  to the client. \nThese ATT Client commands  and requests provide a me ans to read and write \nvalues of attributes on a pe er device with an ATT Server.\n2.1.1.5  [This section is no longer used]\n2.1.1.6  Generic Attribute Profile\nThe Generic Attribute Prof ile (GATT) block represent s the functionality of the \nATT Server and, optionally, the ATT Cli ent. The profile descr ibes the hierarchy", "start_char_idx": 0, "end_char_idx": 2737, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "7d62ae4b-d180-4bef-97b1-6ac932c4a8a3": {"__data__": {"id_": "7d62ae4b-d180-4bef-97b1-6ac932c4a8a3", "embedding": null, "metadata": {"page_label": "26", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c99276b4-1814-44f1-a123-ac921213f846", "node_type": null, "metadata": {"page_label": "26", "file_name": "bluetooth-act.pdf"}, "hash": "8532486d0da87d3e6f607afe17c6c7aee9c988978f3423a9ff8d05ec6bbf77b6"}}, "hash": "8532486d0da87d3e6f607afe17c6c7aee9c988978f3423a9ff8d05ec6bbf77b6", "text": "Core system architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 207\nArchitecture\nof services, characteristics and attribut es used in the ATT Server. The block \nprovides interfaces for discovering, readi ng, writing and indi cating of service \ncharacteristics and attributes. GATT is used on LE devices for LE profile \nservice discovery.\n2.1.1.7  Generi c Access Profile\nThe Generic Access Profile (GAP) blo ck represents the base functionality \ncommon to all Bluetooth devi ces such as modes and access procedures used \nby the transports, protoc ols and application profiles. GAP services include \ndevice discovery, connection modes, se curity, authenticat ion, association \nmodels and service discovery.\n2.1.2  BR/EDR/LE Controll er architectural blocks\nIn implementations wher e the BR/EDR and LE syst ems are combined, the \narchitectural blocks may be shared be tween systems or each system may \nhave their own instant iation of the block.\n2.1.2.1  Device manager\nThe device manager is t he functional block in the baseband that controls the \ngeneral behavior of the Bluetooth device. It is respons ible for all operations of \nthe Bluetooth system that ar e not directly related to  data transport, such as \ninquiring for the presence of nearby Bluetooth devices, connect ing to Bluetooth \ndevices, or making the local Bluetooth device discoverable or connectable by \nother devices.\nThe device manager requests access to the transport me dium from the \nbaseband resource Contro ller in order to ca rry out its functions.\nThe device manager also controls local device behavior implied by a number of \nthe HCI commands, such as managing the device local name, any stored link \nkeys, and other functionality.\n2.1.2.2  Link manager\nThe link manager is responsible for the creation, modification and release of \nlogical links (and, if  required, their associated logica l transports), as well as the \nupdate of parameters related to physi cal links between dev ices. The link \nmanager achieves this by communicati ng with the link manager in remote \nBluetooth devices using the Link Manager  Protocol (LMP) in BR/EDR and the \nLink Layer Protocol (LL) in LE.\nThe LM or LL protocol allows the cr eation of new logica l links and logical \ntransports between devices wh en required, as well as the general control of \nlink and transport attributes such as the enabling of encryp tion on the logical \ntransport, the adapting of transmit power on the physical link, or the adjustment \nof QoS settings in BR/E DR for a logical link.", "start_char_idx": 0, "end_char_idx": 2598, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "f0e33102-6122-4a8f-8d07-c2f4564b30b0": {"__data__": {"id_": "f0e33102-6122-4a8f-8d07-c2f4564b30b0", "embedding": null, "metadata": {"page_label": "27", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a24ad36e-1ea9-4fb9-9dc0-e80cc5dec545", "node_type": null, "metadata": {"page_label": "27", "file_name": "bluetooth-act.pdf"}, "hash": "b1f491d7d794852fc44a2a38a5bead9984a53c66be379798d1dabbf701c1e8d6"}}, "hash": "b1f491d7d794852fc44a2a38a5bead9984a53c66be379798d1dabbf701c1e8d6", "text": "Core system architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 208\nArchitecture\n2.1.2.3  Baseband resource manager\nThe baseband resource manager is respons ible for all access to the radio \nmedium. It has two main functions. At its heart is a scheduler that grants time \non the physical channels to all of the entiti es that have negotiated an access \ncontract. The other main function is to negotiate a ccess contracts with these \nentities. An access contract is effectiv ely a commitment to  deliver a certain \nQoS that is required in or der to provide a us er application with an expected \nperformance.\nThe access contract and scheduling function must take account of any \nbehavior that requires use of the Controller.  This includes (for example) the \nnormal exchange of data between conn ected devices over logical links, and \nlogical transports, as well as  the use of the radio medium  to carry out inquiries, \nmake connections, be discoverable or connec table, or to take  readings from \nunused carriers during the use of adaptive fre quency hopping mode.\nIn some cases in BR/EDR systems the scheduling of a logical link results in \nchanging a logical link to  a different physical chan nel from the one that was \npreviously used. This may be (for exam ple) due to involvem ent in scatternet, a \nperiodic inquiry function,  or page scanning. When t he physical channels are \nnot time slot aligned, then the resource manager  also accounts for the \nrealignment time between sl ots on the original phys ical channel and slots on \nthe new physical channel. In  some cases the slots will  be naturally aligned due \nto the same device clock being used as  a reference for both physical channels.\n2.1.2.4  Link Controller\nThe Link Controller is responsible for the encoding and dec oding of Bluetooth \npackets from the data payload and paramete rs related to the physical channel, \nlogical transport and logical link.\nThe Link Controller carrie s out the link cont rol protocol sig naling in BR/EDR \nand Link Layer protocol in  LE (in close conjunction with the schedul ing function \nof the resource manager), which is us ed to communicate flow control and \nacknowledgment and retrans mission request signals. The interpretation of \nthese signals is a characte ristic of the logical trans port associated with the \nbaseband packet. Interpretation and cont rol of the link c ontrol signaling is \nnormally associated with t he resource manager\u2019s scheduler.\n2.1.2.5  PHY\nThe PHY block is responsible for tr ansmitting and receiving packets of \ninformation on the physical channel. A control path betw een the baseband and \nthe PHY block allows th e baseband block to  control the timing and frequency \ncarrier of the PHY block. The PHY block transforms a stream of da ta to and \nfrom the physical channel and t he baseband into r equired formats.", "start_char_idx": 0, "end_char_idx": 2920, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "8f2ef54d-5fcc-421a-a5ba-2b7ebfd45abc": {"__data__": {"id_": "8f2ef54d-5fcc-421a-a5ba-2b7ebfd45abc", "embedding": null, "metadata": {"page_label": "28", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9081617d-9907-45d0-8175-fd230353d675", "node_type": null, "metadata": {"page_label": "28", "file_name": "bluetooth-act.pdf"}, "hash": "672f332d39bbabea7bb9854b412ca9f3b13ec67a95bb0bd2038fa17b8ba4863c"}}, "hash": "672f332d39bbabea7bb9854b412ca9f3b13ec67a95bb0bd2038fa17b8ba4863c", "text": "Core system architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 209\nArchitecture\n2.1.2.6  Isochronous Adaptation Layer\nThe Isochronous Adaptation Layer (ISOAL ) enables the upper layer to send or \nreceive isochronous data to or from the Link Layer in a flexible way such that \nthe size and interval of data packets in the upper layer can be  different from the \nsize and interval of dat a packets in the Link Layer. The ISOAL uses \nfragmentation/recombination or segment ation/reassembly operations to \nconvert upper layer data un its into lower layer data units (or the other way \naround).\n2.1.3  [This secti on is no longer used]", "start_char_idx": 0, "end_char_idx": 705, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "b179b7c0-d030-42cb-aa1a-9c6a901d7491": {"__data__": {"id_": "b179b7c0-d030-42cb-aa1a-9c6a901d7491", "embedding": null, "metadata": {"page_label": "29", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "16f9a053-0364-41ea-b09a-1f5ba0fca4b5", "node_type": null, "metadata": {"page_label": "29", "file_name": "bluetooth-act.pdf"}, "hash": "179412d90373291542c0bf3eec6d0daea451b4fb46f880796d93c5c75eee2b4d"}}, "hash": "179412d90373291542c0bf3eec6d0daea451b4fb46f880796d93c5c75eee2b4d", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 210\nArchitecture\n3  DATA TRANSPORT ARCHITECTURE\nThe Bluetooth data transpor t system follows a layered architecture. This \ndescription of the Bluetoot h system describes the Bl uetooth core transport \nlayers up to and including L2CAP channe ls. All Bluetooth operational modes \nfollow the same generic transport ar chitecture, which is shown in Figure 3.1 .\nFigure 3.1:  Bluetooth generic data transport architecture\nFor efficiency and legacy reasons, the Bluetooth tr ansport architecture \nincludes a sub-division of the logical layer, distin guishing between logical links \nand logical transports. This  sub-division provides a general (and commonly \nunderstood) concept of a logical link that pr ovides an independent transport \nbetween two or more devices. The logica l transport sub-layer is required to \ndescribe the inter-dependence bet ween some of the logi cal link types (mainly \nfor reasons of legacy behavior).\nThe ACL, SCO, and eSCO connections ar e considered as logical transports \nbut often behave as separat e physical links. Howe ver, they are not as \nindependent as might be desired , due to their shared use of resources such as \nthe LT_ADDR and acknow ledgment/repeat reque st (ARQ) scheme. Hence the \narchitecture is incapable of representin g these logical trans ports with a single \ntransport layer. The additional logical transport layer goes some way towards \ndescribing this behavior./\u0015&$3\n/D\\HU\n/RJLFDO\n/D\\HU\n3K\\VLFDO\n/D\\HU/\u0015&$3\u0003&KDQQHOV\n/RJLFDO\u0003/LQNV\n/RJLFDO\u00037UDQVSRUWV\n3K\\VLFDO\u0003/LQNV\n3K\\VLFDO\u0003&KDQQHOV\n3K\\VLFDO\u00037UDQVSRUWV", "start_char_idx": 0, "end_char_idx": 1692, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "be403c1e-29b2-4a71-bcc0-85a87e226778": {"__data__": {"id_": "be403c1e-29b2-4a71-bcc0-85a87e226778", "embedding": null, "metadata": {"page_label": "30", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fc1541df-30d7-4c6b-8850-1308dad5ce0e", "node_type": null, "metadata": {"page_label": "30", "file_name": "bluetooth-act.pdf"}, "hash": "b30335f9b83d500256f5d55536f2f88957bc34dc98256bde687d86025a73b41d"}}, "hash": "b30335f9b83d500256f5d55536f2f88957bc34dc98256bde687d86025a73b41d", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 211\nArchitecture\n3.1   CORE TRAFFIC BEARERS\nThe Bluetooth core system pr ovides a number of stan dard traffic bearers for \nthe transport of service protocol and application dat a. These are shown in \nFigure 3.2 below (for ease of repres entation this is shown with higher layers to \nthe left and lower la yers to the right).\nFigure 3.2:  Bluetooth traffic bearers\nThe core traffic bearers that are avai lable to applications are shown in Figure \n3.2 as the shaded rounded rectangl es. The architectural la yers that are defined \nto provide these servic es are described in Section 2 . A number of data traffic \ntypes are shown on the left of the diagram linked to t he traffic bearers that are \ntypically suitable for transporti ng that type of  data traffic.\nThe logical links are named using the na mes of the associated logical transport \nand a suffix that indicate s the type of data that is transported. (C for control \nlinks carrying LMP or LL  messages, U for L2CAP links carrying user data \n(L2CAP PDUs) and S for st ream links carrying unfo rmatted synchronous or Traffic TypesApplication Bluetooth core\nLogical\nTransportsLogical Links L2CAP Channels/ISOAL\nHigher Layer Protocol \nSignallingHigher Layer Protocol \nSignalling\nReliable \nAsynchronous \nFramed User DataReliable \nAsynchronous \nFramed User Data\nHigher Layer Framed \nIsochronous User \nDataHigher Layer Framed \nIsochronous User \nData\nConstant Rate \nIsochronous User \nDataConstant Rate \nIsochronous User \nData\nUnreliable \nAsynchronous \nFramed User DataUnreliable \nAsynchronous \nFramed User DataSignallingSignalling\nUnicastUnicastACL-UACL-UACL-CACL-CBR/EDR \nLink \nManagerBR/EDR \nLink \nManagerChannel \nManagerChannel \nManager\nCISCIS\nAPBAPB APB-UAPB-U Active BroadcastActive BroadcastAPB-CAPB-C\nPBDPBD CPBCPBLE-ULE-ULE-CLE-C\nLE ACLLE ACLLE Link \nLayerLE Link \nLayer\nAdvertisement BroadcastAdvertisement BroadcastADVBADVB\nADVB-UADVB-UADVB-CADVB-C\nIsochronous \nUnframed Profile \nDataIsochronous \nUnframed Profile \nDataSCOSCO\neSCOeSCOSCO-SSCO-S\neSCO-SeSCO-S\nBISBISBR/EDR ACLBR/EDR ACL\nPADVBPADVBLEB-CLEB-CLE-FLE-FLE-SLE-S", "start_char_idx": 0, "end_char_idx": 2222, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "363fe45c-c7c9-44fc-8fa7-19c1186a2540": {"__data__": {"id_": "363fe45c-c7c9-44fc-8fa7-19c1186a2540", "embedding": null, "metadata": {"page_label": "31", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2cca3d9b-3710-4ec9-b70c-c73d6d658c5a", "node_type": null, "metadata": {"page_label": "31", "file_name": "bluetooth-act.pdf"}, "hash": "b3820cc9d6d725288731b28f87ee32de683ee8d81a38870d9e3d788c4f94485a"}}, "hash": "db8477a0495dded643e827aefbda56109d22eff6e1498069328e70412d7a8586", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 212\nArchitecture\nisochronous data.) It is common for the su ffix to be removed from the logical \nlink without introducing am biguity, thus a reference to  the default ACL logical \ntransport can be resolved to mean the AC L-C logical link in cases where the \nLMP protocol is being discussed, the LE -C logical link in cases where LL \nprotocol is being discussed, or the AC L-U or LE-U logica l links when the \nL2CAP layer is being discussed.\nThe mapping of application traffic types to Bluetooth core traffic bearers in \nFigure 3.2 is based on matching the traffic characteristics with the bearer \ncharacteristics. It is recommended to use these mappings as they provide the \nmost natural and efficient method of transporting the data with its given \ncharacteristics.\nHowever, an application (or an implement ation of the Bluetooth core system) \nmay choose to use a differen t traffic bearer, or a diff erent mapping to achieve a \nsimilar result. For example,  in a BR/EDR piconet with  only one Peripheral, the \nCentral may choose to tran sport L2CAP broadcasts over  the ACL-U logical link \nrather than over the APB-U logical link. This will pro bably be more efficient in \nterms of bandwidth (if the physical channel quality is not too degraded). Use of \nalternative transport paths to those in Figure 3.2 is only acceptable if the \ncharacteristics of the applicatio n traffic type are preserved.\nFigure 3.2 shows a number of application tr affic types. These are used to \nclassify the types of data  that may be submitted to the Bluetooth core system. \nThe original data traffic ty pe can be different from the type that is submitted to \nthe Bluetooth core system if an intervening process m odifies it. For example, \nvideo data is generated at a constant rate  but an intermediate coding process \nmay alter this to variable rate, e.g. by MPEG4 encoding. Fo r the purposes of \nthe Bluetooth core system, only the characte ristic of the subm itted data is of \ninterest.\n3.1.1  Framed data traffic\nThe L2CAP layer services provide a frame-oriented transport for asynchronous \nand isochronous user data. The applicati on submits data to this service in \nvariable-sized frames (up to a negotiated ma ximum for the channel) and these \nframes are delivered in t he same form to the corr esponding application on the \nremote device. There is no requirement for the application to  insert additional \nframing information into the data, although it may do so if this is required (such \nframing is invisible to the Bluetooth core system).\nConnection-oriented L2CAP c hannels may be created for transport of unicast \n(point-to-point) data be tween two Bluetooth devi ces. Connection-oriented \nchannels provide a context wit hin which specific proper ties may be applied to \ndata transported on the channel. For exampl e, quality of service parameters or \nflow and error control modes may be applied. Connection-oriented L2CAP \nchannels are created using t he L2CAP connection procedure.\nA connectionless BR/EDR L2CAP  channel exists for broadcasting data or for \ntransport of unicast data. In the case of piconet topologies the Central is", "start_char_idx": 0, "end_char_idx": 3271, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "0789e25b-0c1b-44d4-a8f0-5cff936f64c8": {"__data__": {"id_": "0789e25b-0c1b-44d4-a8f0-5cff936f64c8", "embedding": null, "metadata": {"page_label": "32", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "661dc25f-b8ab-4e33-a869-54d5308328a0", "node_type": null, "metadata": {"page_label": "32", "file_name": "bluetooth-act.pdf"}, "hash": "058cf5ae6698670b417c15d5de062c10c51576f9ad48bb9e6d9ccc729e0e9c03"}}, "hash": "18b37d6736e1cd4cdfa73f0f12dc78a5c1594e796de16022e6b44de45fededf9", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 213\nArchitecture\nalways the source of broadcast data and the Peripheral(s) ar e the recipients. \nBroadcast traffic on the connectionle ss L2CAP channel is uni-directional. \nUnicast data sent on the connec tionless L2CAP channels may be uni-\ndirectional or bi-d irectional. Unicast data sent on the L2CAP connectionless \nchannel provides an alternate mechanism to send data with the same level of \nreliability as an L2CAP conn ection-oriented channel ope rating in Basic mode \nbut without the addit ional latency incurred by o pening an L2CAP connection-\noriented channel. LE L2CAP connec tionless channels are not supported.\nBR/EDR L2CAP channels have an associ ated QoS setting that defines \nconstraints on the delivery of the frames of data. Th ese QoS settings may be \nused to indicate (for exam ple) that the data is is ochronous, and therefore has a \nlimited lifetime after whic h it becomes invalid, or that the data should be \ndelivered within a given time  period, or that the data is reliable and should be \ndelivered without error, however long this takes.\nSome L2CAP channels are fixed channels created wh en the ACL-U and/or LE-\nU logical links are established. Thes e fixed channels have  fixed channel \nidentifiers and fixed configurations  and do not permit negotiation of the \nconfiguration after they are created. These fix ed channels are used for BR/\nEDR and LE L2CAP signaling (ACL-U or LE-U), connec tionless channel (ACL-\nU and APB-U), Security M anager Protocol (LE- U), and Attribute Protocol (ACL-\nU or LE-U).\nThe L2CAP channel manager is  responsible for arrang ing to transport the \nL2CAP channel data frames  on an appropriate baseband logical link, possibly \nmultiplexing this onto t he baseband logical link with  other L2CAP channels with \nsimilar characteristics.\n3.1.2  Unframed data traffic\nIf the application does not require deliver y of data in frames, possibly because \nit includes in-stream framin g, or because the data is a pure stream, then it may \navoid the use of L2CAP channels and make direct use of a baseband logical \nlink.\nThe Bluetooth core system su pports the direct transport of application data that \nis isochronous and of a constant rate (e ither bit-rate, or frame-rate for pre-\nframed data), using a SCO-S or eSCO-S  logical link. These logical links \nreserve physical channel bandwidth and provide a constant rate transport \nlocked to the piconet clock. Data is tr ansported in fixed size packets at fixed \nintervals with both of these par ameters negotiated  during channel \nestablishment. eSCO links provide a gr eater choice of bit-rates and also \nprovide greater reliability by using li mited retransmission in case of error. \nEnhanced Data Rate operat ion is supported for eSCO, but not for SCO logical \ntransports. SCO and eSCO logical trans ports do not s upport multiplexed \nlogical links or any further  layering within the Bluet ooth core. An application \nmay choose to layer a number of str eams within the submitted SCO/eSCO", "start_char_idx": 0, "end_char_idx": 3135, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "4b269446-c1b1-4202-ad5b-8f8d590ec80e": {"__data__": {"id_": "4b269446-c1b1-4202-ad5b-8f8d590ec80e", "embedding": null, "metadata": {"page_label": "33", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ee8b22c2-5a42-4c9a-b1b5-f55dd4eedd27", "node_type": null, "metadata": {"page_label": "33", "file_name": "bluetooth-act.pdf"}, "hash": "dc22431d0722b015c144eee2410aa42c2dbc87e6751060cc168d20f976ee445e"}}, "hash": "16b8d496f7c7bf248ffa92d36b3c9e51e53c6165fdfd4659b5b0bb11ed91a591", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 214\nArchitecture\nstream, provided that the submitted stream is, or has  the appearance of being, \na constant rate stream.\nThe Bluetooth core system al so supports the direct transport of application \ndata using a Profile Broadcas t Data (PBD) logical link. Th is logical link is similar \nto SCO-S and eSCO-S since it reserves  physical channel bandwidth, provides \na constant rate transport locked to the piconet clock, and transports data at \nfixed intervals. It does not support multiple xed logical links or any further \nlayering within the Bluetooth core but,  unlike SCO-S and eSCO -S, it supports \nbroadcasting data from  a single transmitter  to many receivers.\nThe application chooses t he most appropriate type of logical link from those \navailable at the baseband, and creates and configures it to transport the data \nstream, and releases it wh en completed. (The applicat ion will norm ally also \nuse a framed L2CAP unicast channel to tr ansport its C-plane in formation to the \npeer application on the remote device.)\nIf the application data is isoc hronous and of a variable  rate, then this may only \nbe carried by the L2CAP unicast chann el, and hence will be treated as framed \ndata.\nUnframed data traffic is not supported in the LE system.\n3.1.3  Reliability of traffic bearers\nA link or channel is characterized as reliable if the rece iver is capable of \ndetecting errors in received packets and requesting retrans mission until the \nerrors are removed. This is known as an Automatic Repeat reQuest (ARQ) \nscheme. Due to the error detection systems used, so me residual undetected \nerrors may still remain in the received  data. The rate at  which these occur \ndepends on the details of the error detection system.\nA link or channel is characterized as unre liable if the receiver is not capable of \ndetecting errors in received packets or if it can detect errors but cannot request \nretransmission. In the la tter case (such as with most broadcast links), the \npackets passed on by the re ceiver to higher layers may be without error but \nthere is no guarantee that a ll the packets that were se nt are received. Uses for \nunreliable links are norm ally dependent on techniques to improve the \nredundancy of the transmissi on, such as the use of Forward Error Connection \nor the repetition of dat a from the higher laye rs while the data is valid, in order to \nincrease the probability that the receiver is able to re ceive at least one of the \ncopies successfully.\n3.1.3.1  BR/ED R reliability\nBluetooth is a wireless communications system. In poor RF environments, this \nsystem should be considered inherently unr eliable. To counteract this the \nsystem provides levels of protection  at each layer. The baseband packet \nheader uses forward error correcting (FEC ) coding to allow er ror correction by", "start_char_idx": 0, "end_char_idx": 2964, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "56177f6e-6eba-4e49-9dcc-f919a3e88ea0": {"__data__": {"id_": "56177f6e-6eba-4e49-9dcc-f919a3e88ea0", "embedding": null, "metadata": {"page_label": "34", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ee72869c-8103-4a93-bd16-0e69bd47991d", "node_type": null, "metadata": {"page_label": "34", "file_name": "bluetooth-act.pdf"}, "hash": "87ad9e0dac7d4963ae0cf864dffed16ce66107d4414c446b9203610a64fd7973"}}, "hash": "87ad9e0dac7d4963ae0cf864dffed16ce66107d4414c446b9203610a64fd7973", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 215\nArchitecture\nthe receiver and a header error check (HEC) to det ect errors remaining after \ncorrection. Certai n Baseband packet types incl ude FEC for the payload. \nFurthermore, some Baseband packet ty pes include a cyclic redundancy error \ncheck (CRC).\nOn ACL logical transports the results of  the error detection algorithm are used \nto drive a simple ARQ prot ocol. This provides an enh anced reliability by re-\ntransmitting packets that do not pass the receiver\u2019s error ch ecking algorithm. It \nis possible to modify th is scheme to support late ncy-sensitive packets by \ndiscarding an unsuccessfully transmitte d packet at the tr ansmitter if the \npacket\u2019s useful life has ex pired. eSCO links use a m odified version of this \nscheme to improve reliabilit y by allowing a limited num ber of retransmissions.\nThe resulting reliability gained by this ARQ scheme is only as dependable as \nthe ability of the HE C and CRC codes to detect erro rs. In most cases this is \nsufficient, however it ha s been shown that for the longer packet types the \nprobability of an unde tected error is too high to support typical applications, \nespecially those with a large amo unt of data being transferred.\nThe L2CAP layer provides an additional le vel of error control that is designed \nto detect the occasional  errors not detected by the baseband and request \nretransmission of the affected data. This pr ovides the level of reliability required \nby typical Bluetooth applications. The re sulting rate of re sidual errors is \ncomparable to the rate in other communication systems.\nThe transmitter may remove packets fr om the transmit queue such that the \nreceiver does not receive all the packe ts in the sequence. If this happens \ndetection of the missing packets is delegated to the L2CAP layer.\nStream links have a reliability characte ristic somewhere be tween a reliable and \nan unreliable link, depending on t he current operating conditions.\n3.1.3.2  LE reliability\nLike BR/EDR, in poor RF environments,  the LE system should be considered \ninherently unreliable. To counteract this, the system provides levels of \nprotection at each layer. The LL packe t uses a 24-bit cyc lic redundancy error \ncheck (CRC) to cover the contents of the pa cket payload. If the CRC \nverification fails on t he packet payload, the packet is not acknowledged by the \nreceiver and the packet gets re transmitted by the sender.\nBecause of the longer CRC  and the shorter typica l message compared with \nBR/EDR, it is not necessary for the L2 CAP layer to provi de a separate error \ndetection and retransmission mechanism.\n3.1.3.3  [This section is no longer used]", "start_char_idx": 0, "end_char_idx": 2787, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "eec34918-423a-4ff7-8df7-4e3af7be03d8": {"__data__": {"id_": "eec34918-423a-4ff7-8df7-4e3af7be03d8", "embedding": null, "metadata": {"page_label": "35", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6725f002-dfdf-462c-9ed8-73b094fe85b9", "node_type": null, "metadata": {"page_label": "35", "file_name": "bluetooth-act.pdf"}, "hash": "b66d37293784cc4f5764d5f06b54bcb85fac9221e12a1605bb73320dc7bdc8d5"}}, "hash": "b66d37293784cc4f5764d5f06b54bcb85fac9221e12a1605bb73320dc7bdc8d5", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 216\nArchitecture\n3.2   TRANSPORT A RCHITECTURE ENTITIES\nThe Bluetooth transport architec ture entities are shown in Figure 3.3 and are \ndescribed from the lowest layer upw ards in the subsequent sections.\nFigure 3.3:  Overview of transport architecture entities and hierarchy\nThe BR/EDR Physical Transport encapsul ates the BR/EDR Physical Channels. \nTransfers using the BR/EDR Physica l Transport use the BR/EDR Generic \nPacket Structure. The LE Physical Trans port encapsulates the LE Physical \nChannels. Transfers using the LE Physi cal Transport use the LE Generic \nPacket Structure.\n3.2.1  BR/EDR generi c packet structure\nThe generic packet structure nearly reflects  the architectural layers found in the \nBluetooth BR/EDR system. The BR/EDR packet stru cture is designed for \noptimal use in normal operat ion. It is shown in Figure 3.4 .BR/EDR \nAdapted \nPiconet \nPhysical ChannelBR/EDR \nActive \nPhysical LinkBR/EDR \nACLUnicast\nL2CAP \\ \nISOAL\nChannelsPhysical\nLinksPhysical\nTransportsControl \n(LL)\nLE-CUser \n(L2CAP) \nLE-U\nLE Piconet \nPhysical \nChannelLE \nActive \nPhysical\nLinkControl \n(LL) \nADVB-CUser\n (LL) \nADVB-U\nLE \nAdvertising \nPhysical\nLink\nLE \nAdvertising \nPhysical \nChannelADVBLE\nACL\nBR/EDR \nInquiry \nScan \nPhysical \nChannelBroadcast\nProfile \nBroadcast \nData (PBD)\nBR/EDR \nSynchronization \nScan Physical \nChannel\nBR/EDR Physical TransportPADVB\nLE\nPeriodic \nPhysical\nLink\nLE Periodic \nPhysical \nChannelAPBControl\n(LMP) \nACL-CUser \n(L2CAP) \nACL-UControl \n(LMP) \nAPB-CUser \n(L2CAP) \nAPB-U\nBR/EDR \nBasic \nPiconet \nPhysical ChannelSCO-S eSCO-S\nPhysical\nChannelsLogical\nTransportsLogical\nLinks\nBR/EDR \nConnectionless \nPeripheral Broadcast \nPhysical LinkeSCO SCO\nBR/EDR \nPage\nScan \nPhysical \nChannelCPBControl \n(LL) \nLEB-C\nLE\nBIS\nLE \nIsochronous \nPhysical\nLink\nLE \nIsochronous \nPhysical \nChannel\nLE Physical TransportLE\nCISLE-\nStream\nLE-SLE-\nFramed\nLE-FIsochronous \nAdaptation \nLayer\nPAwR", "start_char_idx": 0, "end_char_idx": 2037, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "732641dd-50db-4398-bcd9-56365e980bcc": {"__data__": {"id_": "732641dd-50db-4398-bcd9-56365e980bcc", "embedding": null, "metadata": {"page_label": "36", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ee64f81f-e9ab-489a-b68f-d0dd29f6b7ef", "node_type": null, "metadata": {"page_label": "36", "file_name": "bluetooth-act.pdf"}, "hash": "b70710acb0c207673cf1a1f7a08cab99c92a5cb74f2ee6f8a2bcc9a9769a710c"}}, "hash": "b70710acb0c207673cf1a1f7a08cab99c92a5cb74f2ee6f8a2bcc9a9769a710c", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 217\nArchitecture\nFigure 3.4:  BR/EDR packet structure\nPackets normally only include the fields that are nece ssary to represent the \nlayers required by the transaction. Th us a simple inquiry request over an \ninquiry scan physical channel does not create or  require a logica l link or higher \nlayer and therefore consists  only of the channel a ccess code (associ ated with \nthe physical channel).\nAll packets include the c hannel access code. This is  used to identify communi-\ncations on a particular physi cal channel, and to exclude or ignore packets on a \ndifferent physical channel that happens to be using the same  RF carrier in \nphysical proximity.\nThere is no direct field wi thin the BR/EDR packet stru cture that represents or \ncontains information relating to physical links. This info rmation is implied by the \ncombination of the logical transport address (LT_AD DR) carried in the packet \nheader and the channel  access code (CAC).\nMost BR/EDR packets include a packe t header. The packet  header is always \npresent in packets transm itted on physical channels th at support physical links, \nlogical transports and logica l links. The packet header  carries the LT_ADDR, \nwhich is used by each receiving device to determine if the packet is addressed \nto the device and is used to  route the packet internally.\nThe BR/EDR packet header also carries par t of the link contro l (LC) protocol \nthat is operated per  logical transport (except fo r ACL and SCO transports that \noperate a shared LC pr otocol carried on eith er logical transport).\nThe Enhanced Data Rate (EDR) packets hav e a guard time and synchroniza-\ntion sequence before the payload. This is  a field used for physical layer change \nof modulation scheme.\nThe payload header is present  in all packets on logica l transports that support \nmultiple logical links. The payload header includes a logi cal link identifier field \nused for routing the payload, and a field indicating t he length of the payload Carries the link control \nLC protocolChannel Access Code Packet Header Payload Header Payload\u0003%RG\\Carries the physical channel  \naccess code\nCarries the logical transport  \nidentifier\nCarries the logical link  \nidentifier\nCarries LMP  messages, L2CAP  signals, \nL2CAP frames or other user dataLayer Information\nProtocolsMICGuard & \nSync\n(EDR Only)EDR Physical layer mode \nchange\nCRCPayload", "start_char_idx": 0, "end_char_idx": 2516, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "0367e4f3-4f59-40af-b7b0-ac23b35e02ab": {"__data__": {"id_": "0367e4f3-4f59-40af-b7b0-ac23b35e02ab", "embedding": null, "metadata": {"page_label": "37", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "16310200-4f2a-4a4b-a0d4-dc3a8d7ef59a", "node_type": null, "metadata": {"page_label": "37", "file_name": "bluetooth-act.pdf"}, "hash": "b4ef6e7e9b767883de7ec15a22a7d19c22ce57498de85d2d8c4046d5538aa605"}}, "hash": "b4ef6e7e9b767883de7ec15a22a7d19c22ce57498de85d2d8c4046d5538aa605", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 218\nArchitecture\nbody. Some packet types also include a CRC at the end of the packet payload \nthat is used to detect most erro rs in received packets. When AES-CCM \nencryption is enabled, ACL packets include a Message Int egrity Check (MIC) \njust prior to the CRC.\nEDR packets have a tr ailer after the CRC.\nThe packet payload body is used to trans port the user data. The interpretation \nof this data is dependent on t he logical transport and logi cal link identifiers. For \nACL logical transports Li nk Manager protocol (L MP) messages and L2CAP \nsignals are transported in  the packet payload body, along with general user \ndata from applications. \nFor SCO, eSCO, and CPB logi cal transports the pay load body contains the \nuser data for the logical link.\n3.2.2  LE generi c packet structure\nLE radio operation is ba sed on three PHYs  and makes use of two modulation \nschemes. Table 3.1  summarizes the properties of  each of the LE PHYs. Each \npacket transmitted uses a single PHY.  Each PHY uses a single modulation \nscheme. Two of the PHYs are uncoded - t hat is, each bit maps  directly to a \nsingle radio symbol in the packet - while the third PHY is error correction \ncoded. There are two coding schemes: S=8 and S=2, w here S is the number of \nsymbols per bit.\nThe \"Access Header\" referred to in Table 3.1  includes all the bi ts in the packet \nformat associated with the par ticular PHY prior to the start of the PDU Header \nbut not including the preambl e. The preamble is excl uded as this is uncoded \nfor all PHYs.\nThe \"Payload\" referred to in Table 3.1  includes all the bits in the packet format \nfrom the PDU Header to  the end of the packet.\nThe general structure of the Link Layer Air Interface pa cket closely reflects the \narchitectural layers found in the LE sys tem. The packet st ructure for the LE PHYModulation \nschemeCoding scheme\nData rate Access Header Payload\nLE 1M 1 Msym/s modulation Uncoded Uncoded 1 Mb/s\nLE 2M 2 Msym/smodulation Uncoded Uncoded 2 Mb/s\nLE Coded 1 Msym/smodulationS=8S=8 125 kb/s\nS=2 500 kb/s\nTable 3.1:  Summary of  PHYs, modulation schemes, and coding schemes", "start_char_idx": 0, "end_char_idx": 2254, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "ae6d7c35-49ba-4f34-a8e7-e49c7638ebd4": {"__data__": {"id_": "ae6d7c35-49ba-4f34-a8e7-e49c7638ebd4", "embedding": null, "metadata": {"page_label": "38", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "28024078-bddd-4533-8d6f-334ac3817080", "node_type": null, "metadata": {"page_label": "38", "file_name": "bluetooth-act.pdf"}, "hash": "12441f2bc77a92925ff1d004f7dfb64ef2801c1d2f45af7a8eb4cc8919114a6a"}}, "hash": "12441f2bc77a92925ff1d004f7dfb64ef2801c1d2f45af7a8eb4cc8919114a6a", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 219\nArchitecture\nUncoded PHYs is designed for optimal us e in normal operation and is shown in \nFigure 3.5 .\nFigure 3.5:  The packet structure for the LE Uncoded PHYs\nThe packet structure for the LE Coded PHY is designed for optimal use in \nextended range operati on and is shown in Figure 3.6 .\nFigure 3.6:  The packet structure for the LE Coded PHY \nWhen using the LE Coded PHY, it is recommended to carefully consider the \nimpact of radio-on time for power c onsumption and duty cycle for scheduling \nand coexistence over the ai r. The LE Coded PHY with  S=8 coding (125 kb/s) \nrepresents the worst case , when considering radio- on time and duty cycle, \nwhere each packet sent ov er the air will be approximat ely 8 times larger than \nLE 1M.\nTable 3.2  illustrates the on-air time of advert ising events with different sizes of \nAdvData. The first is using connec table and scannable undirected advertising \u0012Z\u0012 D/\u0012 3'8\u00033D\\ORDG 3'8\u0003+HDGHU 3UHDPEOH $FFHVV\u0003$GGUHVV&DUULHV\u0003WKH\u0003 ORJLFDO\u0003WUDQVSRUW\u0003\nDQG\u0003ORJLFDO\u0003OLQN \u0003LGHQWLILHUV\n&DUULHV\u0003RQH\u0003RI\u0003WKH\u0003IROORZLQJ\u001d\u0003\n/\u0015&$3\u0003VLJQDOV\u000f\u0003 /\u0015&$3\u0003IUDPHV\u000f\u0003,62$/\u0003VHJPHQWV\u000f\u0003\nLVRFKURQRXV\u0003GDWD\u000f\u0003RU\u0003RWKHU\u0003XVHU\u0003GDWD&RQVWDQW\u00037RQH\u0003\n([WHQVLRQ&DUULHV\u0003SK\\VLFDO\u0003FKDQQHO\nDFFHVV\u0003FRGH\nPreamble Access Address CI PDU Payload MIC\nCarries\u0003RQH\u0003RI\u0003WKH\u0003IROORZLQJ\u001d\u0003 L2CAP\u0003\nsignals,\u0003L2CAP\u0003frames\u000f\u0003,62$/\u0003VHJPHQWV\u000f\u0003\nLVRFKURQRXV\u0003GDWD\u000f  or other user data\nCarries the Link Layer ProtocolCarries physical channel\naccess codeCarries logical transport\nandlogical link identifiersLayer Information\nCRC TERM1 PDU Header TERM2\nAccess\nHeader", "start_char_idx": 0, "end_char_idx": 1680, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "4dbe2125-6488-489a-a9e6-86f3366266c6": {"__data__": {"id_": "4dbe2125-6488-489a-a9e6-86f3366266c6", "embedding": null, "metadata": {"page_label": "39", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f3e81003-7039-4b88-b189-3eb250ece2df", "node_type": null, "metadata": {"page_label": "39", "file_name": "bluetooth-act.pdf"}, "hash": "76ad9e3fa89bb9131a695e8ddfd52507edb5a7ff8014b13fb4e965db41025bb9"}}, "hash": "76ad9e3fa89bb9131a695e8ddfd52507edb5a7ff8014b13fb4e965db41025bb9", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 220\nArchitecture\nevents where the AdvData is  sent on the primary adv ertising physical channel. \nThe second is using event s where the AdvData is offloaded to the secondary \nadvertising physical channel. The us age of the primar y and secondary \nadvertising physical channels is described in Section 3.3.2.2 . Numbers in \nparentheses are hypothetical and show case s that are not valid in a compliant \nimplementation.\nNote: The events without offloading were calculat ed using three ADV_IND \nPDUs, while the events with offlo ading used three ADV_EXT_IND PDUs \ncontaining only the AuxPtr  and ADI fields plus on e AUX_ADV_IND PDU with \nthe AdvA and ADI fields pres ent and holding the AdvData.\nTable 3.3  illustrates, for a range of payload sizes, the diff erence in Link Layer \nData Physical Channel PDU packet durations for connections over the LE 1M \nPHY and LE Coded PHY wi th S=8 coding. Connection duty cycle for a specific \nimplementation may be easily ca lculated from this information.\nThe physical link identifier is not contained in the Link Layer  Air Interface \npacket. The physical channel identifiers are either fi xed, are determined at \nconnection setup, or are determined at periodic advertisi ng setup. All LE \npackets include the Access Address. This  is used to identify communications AdvData \n[Bytes]Connectable Undirected \nAdvertising event [\u00b5s]Connectable Undirected \nAdvertising event Using \nOffloading [\u00b5s]\nLE 1M LE Coded S=8 LE 1M LE Coded S=8\n0 384 (3,312) 568 4,864\n15 744 (6,192) 688 5,824\n31 1,128 (9,264) 816 6,848\n100 (2,784) (22,512) 1,368 11,264\n245 (6,264) (50,352) 2,528 20,544\nTable 3.2:  On-air time fo r various advertising events\nPayload [bytes]LL Data Physical Channel PDU [\u00b5s]\nLE 1M LE Coded S=8\n0 80 720\n15 200 1,680\n31 328 2,704\n100 880 7,120\n255 2,120 17,040\nTable 3.3:  On-air time for various data physica l channel packets not containing Constant Tone \nExtensions", "start_char_idx": 0, "end_char_idx": 2055, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "78f90e1f-364e-41d6-9c88-e0992e7be5d2": {"__data__": {"id_": "78f90e1f-364e-41d6-9c88-e0992e7be5d2", "embedding": null, "metadata": {"page_label": "40", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "59cdc56b-e1c3-429d-964b-268f4b4fc48d", "node_type": null, "metadata": {"page_label": "40", "file_name": "bluetooth-act.pdf"}, "hash": "89853606ca96aba7c10e1769724be0f9793f366bd82b6066e6cde7e8b6256900"}}, "hash": "89853606ca96aba7c10e1769724be0f9793f366bd82b6066e6cde7e8b6256900", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 221\nArchitecture\non a physical channel, and to exclude or ignore packets  on different physical \nchannels that are using th e same PHY channels in ph ysical proximity. The \nAccess Address determines w hether the packet is direct ed to the advertising \nphysical channel (and thus  an advertising physical li nk) used for non-periodic \nadvertising, the periodic ph ysical channel used for periodic advert ising, or to a \npiconet physical channel (and thus an active physical li nk to a device). The LE \nadvertising physical channel used for non-periodic advertisi ng uses a fixed \nAccess Address. The LE periodic physical channel used for periodic \nadvertising and LE piconet physical ch annels use a randomly generated 32-bit \nvalue as their Access Address. This  provides a high number of periodic \nadvertising trains and a hi gh number of active  devices that can be addressed in \nan LE periodic advertise ment or an LE piconet.\nAll LE packets include a PDU header. T he PDU header determi nes the type of \nadvertisement broadcast or logical link  carried over the physical channel.\nFor advertising physical ch annel PDUs, the PDU header contains the type of \nadvertisement payload, the device address type for addresses contained in the \nadvertisement, and the adve rtising physical channel PD U payload length. Most \nadvertising physical channel PDU payl oads contain the advertiser's address \nand advertising data. One advertisi ng physical channel PDU payload only \ncontains the advertiser's device address and the initia tor's device address in \nwhich the advertisement is  directed. Advertising ph ysical channel PDUs with \nscan requests payloads contain the scanner's device address and the \nadvertiser's device address. Advertis ing physical channel PDUs with scan \nresponses contain advertiser's device  address and the scan response data. \nAdvertising physical channel PDUs with  connection reques t payloads contain \nthe initiator's device add ress, advertiser's devic e address and connection \nsetup parameters.\nFor Data Physical Channel PDUs, the PD U header contains the Logical Link \nIdentifier (LLID), the Ne xt Expected Sequence Nu mber (NESN), Sequence \nNumber (SN), More Data (MD), CTEI nfo Present (CP), payload length, and \nmay contain CTEInfo. For Data Physica l Channel PDUs that  contain control \ncommands, the Data Channel  PDU payload cont ains a command opcode and \ncontrol data that is specific to the command. There is an optional Message \nIntegrity Check (MIC) value that is used to authentic ate the data PDU. For Data \nPhysical Channel PDUs that are data, the Data Physical Channel PDU payload \ncontains L2CAP data.\nAn Isochronous Physical Channel PDU can be either a Connected \nIsochronous or Broadcast Isochronous PDU. A Connected Isochronous PDU \ncontains a header and may contain an isochronous payload. The header field \ncontains the Logical Link  Identifier (LLID), Sequen ce Number (SN), Next \nExpected Sequence Number (NESN), Cl ose Isochronous Ev ent (CIE), Null \nPDU Indicator (NPI), and the payload length. A Connect ed Isochronous PDU \nmay also contain a Message Integrity Check (MIC) field.", "start_char_idx": 0, "end_char_idx": 3277, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "f0354f07-1f39-4ca5-87f5-76feb0338a94": {"__data__": {"id_": "f0354f07-1f39-4ca5-87f5-76feb0338a94", "embedding": null, "metadata": {"page_label": "41", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "67af2177-6a86-4b39-b061-5267ac5ffd9f", "node_type": null, "metadata": {"page_label": "41", "file_name": "bluetooth-act.pdf"}, "hash": "a23e6d73c822d34d69fb733ac3b9f3d9a04e89dae08746c58928abd48782ab98"}}, "hash": "a23e6d73c822d34d69fb733ac3b9f3d9a04e89dae08746c58928abd48782ab98", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 222\nArchitecture\nA Broadcast Isochronous PDU contains a header and either isochronous or \ncontrol data. The header fi eld contains the Logical Link Identifier (LLID), the \nControl Subevent Sequence Number (CSSN), the Control Subevent \nTransmission Flag (CSTF), and t he payload length. The Broadcast \nIsochronous PDU may also contain a Message Integrity Check (MIC) field.\nBoth advertising physical channel pa ckets and data physical channel packets \ncan contain a Constant T one Extension, which can be used for determining the \nrelative direction of a received radio signal.\n3.3   PHYSICAL CHANNELS\nA number of types of ph ysical channel are defined . All Bluetooth physical \nchannels are characterized by a se t of PHY frequencies combined with \ntemporal parameters and restricted by sp atial considerati ons. For the basic \nand adapted piconet physi cal channels frequency hopping is used to change \nfrequency periodically to reduce the effect s of interference and for regulatory \nreasons.\nThe Bluetooth BR/EDR system and LE system differ sli ghtly in the way they \nuse physical channels.\n3.3.1  BR/EDR physical channels\nIn the BR/EDR core system, peer devices  use a shared physical channel for \ncommunication. To achieve this their tr ansceivers need to be tuned to the same \nPHY frequency at the same ti me, and they need to be within a nominal range \nof each other.\nGiven that the number of RF carriers is limit ed and that many Bluetooth \ndevices may be operating independently withi n the same spatial and temporal \narea there is a strong likelihood of two independent Bluetoot h devices having \ntheir transceivers tuned to th e same RF carrier, result ing in a physical channel \ncollision. To mitigate the unwanted effects of this colli sion each transmission on \na physical channel starts with an access code that is used as a correlation \ncode by devices tuned to the physical ch annel. This channel access code is a \nproperty of the physi cal channel. The access code is present at the start of \nevery transmitted packet.\nSeveral BR/EDR physical channels ar e defined. Each is optimized and used \nfor a different purpose. Two of thes e physical channels (t he basic piconet \nchannel and adapted piconet channel) are used for co mmunication between \nconnected devices and are asso ciated with a specific piconet. Other BR/EDR \nphysical channels are used for discovering  (the inquiry scan channel) and \nconnecting (the page scan channel) Bluetoot h devices. The synchronization \nscan physical channel is used by devic es to obtain timing and frequency \ninformation about the Connec tionless Peripheral Broadc ast physical link or to \nrecover the current piconet clock.", "start_char_idx": 0, "end_char_idx": 2823, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "bd94504b-90af-4bb8-8700-ea37d24aa46e": {"__data__": {"id_": "bd94504b-90af-4bb8-8700-ea37d24aa46e", "embedding": null, "metadata": {"page_label": "42", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e846dba3-7b85-4b0d-a55d-3298f0f585e4", "node_type": null, "metadata": {"page_label": "42", "file_name": "bluetooth-act.pdf"}, "hash": "cf13808bf5a4cc6796871c0bb1f18baa5460af449de2a5865e4fffe0d76048e7"}}, "hash": "cf13808bf5a4cc6796871c0bb1f18baa5460af449de2a5865e4fffe0d76048e7", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 223\nArchitecture\nA Bluetooth device can only use one BR /EDR physical channel at any given \ntime. In order to support mu ltiple concurrent operatio ns the device uses time-\ndivision multiplexing between the channels. In this way a Bluetooth device can \nappear to operate simultaneou sly in several piconets,  as well as being \ndiscoverable and connectable.\nWhenever a Bluetooth device is synch ronized to the ti ming, frequency and \naccess code of a physical c hannel it is said to be \u2018con nected\u2019 to this channel \n(whether or not it is ac tively involved in communica tions over the channel). The \nBluetooth specification assu mes that a device is only  capable of co nnecting to \none physical channel at any time. Ad vanced devices may be capable of \nconnecting simultaneously to more than one physical channel, but the \nspecification does not assume  that this is possible.\n3.3.1.1  Basic piconet channel\n3.3.1.1.1   Overview\nThe basic piconet channel is used for communication between connected \ndevices during normal operation.\n3.3.1.1.2   Characteristics\nThe basic piconet channel is charac terized by a ps eudo-random sequence \nhopping through the PHY channels. The hopping seq uence is unique for the \npiconet and is determined by  the Bluetooth Device Addr ess of the Central. The \nphase in the hopping sequen ce is determined by the Bluetooth clock of the \nCentral. All Bluetooth devic es participating in the pi conet are time- and hop-\nsynchronized to the channel.\nThe channel is divided into time slots where each sl ot corresponds to an PHY \nhop frequency. Consecutive hops correspo nd to different PHY hop frequencies. \nThe time slots are numbered according to the Bluetooth clo ck of the piconet \nCentral. Packets are transmitted by Bluet ooth devices participat ing in the piconet \naligned to start at a sl ot boundary. Each packet star ts with the channel access \ncode, which is derived from the Bluetooth Device Address of the piconet Central.\nOn the basic piconet chan nel the Central controls access to the channel. The \nCentral starts its trans mission in even-numbered ti me slots only. Packets \ntransmitted by the Central ar e aligned with the slot st art and define the piconet \ntiming. Packets transmitted by the Cent ral may occupy up to  five time slots \ndepending on the packet type.\nEach Central transmission is a packet carrying information on one of the logical \ntransports. Peripherals may transmit on t he physical channel in response. The \ncharacteristics of the res ponse are defined by  the logical transport that is \naddressed.", "start_char_idx": 0, "end_char_idx": 2706, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "59149e71-4af8-4d28-824c-1e53bb874aaf": {"__data__": {"id_": "59149e71-4af8-4d28-824c-1e53bb874aaf", "embedding": null, "metadata": {"page_label": "43", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d33e5255-5028-4173-9b3d-407dfbdde01f", "node_type": null, "metadata": {"page_label": "43", "file_name": "bluetooth-act.pdf"}, "hash": "0bed34a05591afc1a95be45dd63037cb15c08d684adfac65ddd9211f17f5820d"}}, "hash": "c2ecebb61d8d1f669400c295a16b808f37c51d1fc3516921573a4d93995ae43b", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 224\nArchitecture\nFor example, on the asynchronous connec tion-oriented logical transport (ACL), \nthe addressed Peripheral responds by transmitting a pa cket containing \ninformation for the same logical transport that is nominally aligned with the next \n(odd-numbered) slot start. Such a packet may occupy up to fi ve time slots, \ndepending on the packet type. On a broadc ast logical transport no Peripherals \nare allowed to respond.\n3.3.1.1.3   Topology\nA basic piconet channel may be shared by any number  of Bluetooth devices, \nlimited only by the resources available on  the piconet Central.  Only one device \nis the piconet Central, al l others being piconet Peri pherals. All communication \nis between the Central and Peripherals . There is no direct communication \nbetween Peripherals on th e piconet channel.\nThere is, however, a limitati on on the number of logica l transports that can be \nsupported within a piconet. This means that although there is no theoretical \nlimit to the number of Bluet ooth devices that share a c hannel there is a limit to \nthe number of these devices  that can be actively in volved in exchanging data \nwith the Central.\n3.3.1.1.4   Supported layers\nThe basic piconet channel supports a number of physical links, logical \ntransports, logical links and L2CAP channels used for general purpose \ncommunications.\n3.3.1.2  Adapted piconet channel3.3.1.2.1   Overview\nThe adapted piconet channel differs from the basic piconet channel in two \nways. First, the fr equency on which a Peripheral tr ansmits is the same as the \nfrequency used by its Central in the preceding transmi ssion. In other words the \nfrequency is not recomputed between Central and subs equent Peripheral \npackets. Second, the adapted piconet c hannel may be based on fewer than the \nfull 79 frequencies. A number of frequencies may be excluded from the \nhopping pattern by being marked as  \u201cunused\u201d. The rema inder of the 79 \nfrequencies are included. T he two sequences are t he same except that \nwhenever the basic pseudo-random hopping sequence selects an unused \nfrequency, it is replaced wi th an alternative chosen fr om the used set. The set \nof frequencies used may vary between diff erent physical li nks on the same \nadapted piconet channel.\nBecause the adapted piconet  channel uses the same  timing and access code \nas the basic piconet channel, physica l links on the two channels are often \ncoincident. This provides a deliberate benefit as  it allows Peripherals in either", "start_char_idx": 0, "end_char_idx": 2635, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "45586b94-098c-49f3-a8c8-f3b38ec8c29e": {"__data__": {"id_": "45586b94-098c-49f3-a8c8-f3b38ec8c29e", "embedding": null, "metadata": {"page_label": "44", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "45a3acae-1110-4b84-affc-92699183004e", "node_type": null, "metadata": {"page_label": "44", "file_name": "bluetooth-act.pdf"}, "hash": "7e07fbd51d1d275f961889f1806ec71c2de366970eac174be2f4d8a59cf2a510"}}, "hash": "143314c383f2611a3f810879293cc18db28d3e835d936951745b11f3387d6e9f", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 225\nArchitecture\nthe basic piconet channel or the adapted piconet ch annel to adjust their \nsynchronization to  the Central.\nThe topology and supported layers of t he adapted piconet physical channel are \nidentical to the basic pi conet physical channel with one exception: on the \nadapted piconet physical channel , it is possible for a si ngle Central to transmit \ndata to an unlimited number of Pe ripherals using a single CPB logical \ntransport. In this case, however, data is only transferred from Central to \nPeripheral and not from Peripheral to Central.\n3.3.1.3  Inquiry scan channel3.3.1.3.1   Overview\nIn order for a device to be discovered,  an inquiry scan channel is used. A \ndiscoverable device listens for inquiry requests on its inquiry scan channel and \nthen sends a response to that request. In  order for a device to discover other \ndevices, it iterates (hops) through a ll possible inquiry sc an channel frequencies \nin a pseudo-random fashi on, sending an inquiry request on each frequency \nand listening fo r any response.\n3.3.1.3.2   Characteristics\nInquiry scan channels follow a slower hopping patte rn and use an access code \nto distinguish between occasional occ upancy of the same radio frequency by \ntwo co-located devices using different physical channels.\nThe access code used on the inquiry scan channel is ta ken from a reserved set \nof inquiry access codes that are shar ed by all Bluetooth devices. One access \ncode is used for general inquiries, and a number of additional access codes \nare reserved for limited inquiries. Ea ch device has access to a number of \ndifferent inquiry scan channels. As all of these channels share an identical \nhopping pattern, a device may concurr ently occupy more than one inquiry scan \nchannel if it is capable of concurrently  correlating more than one access code.\nA device using one of its inquiry sc an channels remains passive on that \nchannel until it receives an inquiry message on th is channel from another \nBluetooth device. This is i dentified by the a ppropriate inquiry access code. The \ninquiry scanning device wil l then follow the inqui ry response procedure to \nreturn a response to the inquiring device.\nIn order for a device to discover other Bluetooth devices it uses the inquiry \nscan channel to send inquiry requests. As  it has no prio r knowledge of the \ndevices to discover, it c annot know the exact characte ristics of the inquiry scan \nchannel.\nThe device takes advantage  of the fact that inquiry sc an channels have a \nreduced number of hop frequencies and a slower rate  of hopping. The inquiring \ndevice transmits inquiry requests on ea ch of the inquiry  scan hop frequencies", "start_char_idx": 0, "end_char_idx": 2819, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "b5435b09-6fd7-4721-b40e-4660835b949e": {"__data__": {"id_": "b5435b09-6fd7-4721-b40e-4660835b949e", "embedding": null, "metadata": {"page_label": "45", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b04bf69d-dcf1-47fb-b628-09e8870e0408", "node_type": null, "metadata": {"page_label": "45", "file_name": "bluetooth-act.pdf"}, "hash": "36c605adf9b785072c37245931ec27f577bce239cb9911498312a4670fda8ac7"}}, "hash": "938dec1e045e5bd091f48b6474532fc491e9c6d78fc621a71cac47400837175f", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 226\nArchitecture\nand listens for an inquiry response. Tr ansmissions are done at  a faster rate, \nallowing the inquiring devi ce to cover all inquir y scan frequencies in a \nreasonably short time period.\n3.3.1.3.3   Topology\nInquiring and discoverable devices use a si mple exchange of packets to fulfill \nthe inquiring function. The topology formed during this  transaction is a simple \nand transient point-to-point connection.\n3.3.1.3.4   Supported layers\nDuring the exchange of packets between an inquiring and disco verable device \nit may be considered that  a temporary physical li nk exists between these \ndevices. However, the concept is quite  irrelevant as it  has no physical \nrepresentation but is only im plied by the brief transac tion between the devices. \nNo further architectural layers  are considered to be supported.\n3.3.1.4  Page scan channel\n3.3.1.4.1   Overview\nA connectable device (one t hat is prepared to acce pt connections) does so \nusing a page scan channel. A connectable device list ens for a page request on \nits page scan channel and, once receiv ed, enters into a sequence of \nexchanges with this device. In order for a device to connect to another device, \nit iterates (hops) th rough all page scan channe l frequencies in a pseudo-\nrandom fashion, sending a page request on each frequency and listening for a \nresponse.\n3.3.1.4.2   Characteristics\nThe page scan channel uses an acce ss code derived fr om the scanning \ndevice\u2019s Bluetooth Device Address to identify communications on the channel. \nThe page scan channel uses  a slower hopping rate than the hop rate of the \nbasic and adapted piconet channels. The hop  selection algorithm uses the \nBluetooth device clock of t he scanning device as an input.\nA device using its page scan  channel remains passive unt il it receives a page \nrequest from another Bluet ooth device. This is id entified by the page scan \nchannel access code. The two devices will then follow the page procedure to \nform a connection. Following a successful  conclusion of th e page procedure \nboth devices switch to the basic pico net channel that is characterized by \nhaving the paging device as Central.\nIn order for a device to connect to anot her Bluetooth device it uses the page \nscan channel of the target device in or der to send page requests. If the paging \ndevice does not know the phase of t he target device\u2019s page scan channel it", "start_char_idx": 0, "end_char_idx": 2549, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "bdf48e56-4815-4a3f-bf8b-c72ecd997a32": {"__data__": {"id_": "bdf48e56-4815-4a3f-bf8b-c72ecd997a32", "embedding": null, "metadata": {"page_label": "46", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6b277395-b1fd-4ed2-b7ff-f472d1b213a8", "node_type": null, "metadata": {"page_label": "46", "file_name": "bluetooth-act.pdf"}, "hash": "ea66abd88bd5b7876d043697fe36472df0891a39a8f99d39ee897c398a3f9272"}}, "hash": "cde90f5cc788165f23785ee8a86b3950c6ce66af7aa3c496a268cd7981c86f07", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 227\nArchitecture\ntherefore does not know the current hop frequency of the target device. The \npaging device transmits page reques ts on each of the page scan hop \nfrequencies and listens for a page response. This is done at a faster hop rate, \nallowing the paging devic e to cover all page scan frequencies in a reasonably \nshort time period.\nThe paging device may have some knowl edge of the target device\u2019s Bluetooth \nclock (indicated during a pr evious inquiry transaction  between the two devices, \nor as a result of a previous involvement in a pic onet with the device), in this \ncase it is able to predict  the phase of the target device\u2019s page scan channel. It \nmay use this information to optimize the synchronization of the paging and \npage scanning process and speed up the formati on of the connection.\n3.3.1.4.3   Topology\nPaging and connectable device s use a simple exchange of  packets to fulfill the \npaging function. The topol ogy formed during this tran saction is a simple and \ntransient point-to-point connection.\n3.3.1.4.4   Supported layers\nDuring the exchange of packets betwe en a paging and connectable device it \nmay be considered that a temporary ph ysical link exists between these \ndevices. However, the concept is quite  irrelevant as it  has no physical \nrepresentation but is only im plied by the brief transac tion between the devices. \nNo further architectural layers  are considered to be supported.\n3.3.1.5  Synchroniz ation scan channel\n3.3.1.5.1   Overview\nIn order to receive packets sent on t he CPB logical transpor t, a device must \nfirst obtain information about the timing and fr equency channels of those \npackets. If a device misses a Coarse Clock Adjustment notification, it needs to \nrecover the current piconet clock. The synchronization scan channel is \nprovided for these purposes. A scanning device listens for synchronization \ntrain packets on the synch ronization scan channel. Once a synchronization \ntrain packet is received, the device may st op listening for synchronization train \npackets because it has the timing and fr equency information nec essary to start \nreceiving packets sent on the CPB logica l transport or to re cover the piconet \nclock. \n3.3.1.5.2   Characteristics\nThe synchronization scan channel uses an access co de derived from the \nBluetooth Device Address of the synchron ization train transm itter to identify \nsynchronization train packe ts on the channel. Once a synchronization train \npacket is received, the scanning BR/E DR Controller may start receiving", "start_char_idx": 0, "end_char_idx": 2681, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "9c8b75c8-f707-42da-a57b-5852f04dd68f": {"__data__": {"id_": "9c8b75c8-f707-42da-a57b-5852f04dd68f", "embedding": null, "metadata": {"page_label": "47", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "98737e73-c1f8-49e9-bff0-f9cac4435c2e", "node_type": null, "metadata": {"page_label": "47", "file_name": "bluetooth-act.pdf"}, "hash": "ac82431162f021b8003ffa37e851081bce061ef9d24820e7f4dd6aafcdca850d"}}, "hash": "ac82431162f021b8003ffa37e851081bce061ef9d24820e7f4dd6aafcdca850d", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 228\nArchitecture\npackets sent on the CPB logical trans port, depending on the needs of the Host \nand any applicable profile(s).\n3.3.1.5.3   Topology\nThe topology formed during this scan is transient and point-to-multipoint. There \ncan be an unlimited num ber of scanning devices simultaneously receiving \nsynchronization train packets from the same synchroniz ation train transmitter. \n3.3.1.5.4   Supported layers\nThere is a one-way flow of packets from  the synchronization train transmitting \ndevice to the scanning device(s). This may be cons idered a temporary physical \nlink that exists only until the scanning device receives the required information. \nNo further architectural layers  are considered to be supported.\n3.3.2  LE phy sical channels\nIn the LE core system , two Bluetooth devices us e a shared physical channel \nfor communication. To achieve this, t heir transceivers need to be tuned to the \nsame PHY frequency at the same time, and they need to be within a nominal \nrange of each other.\nGiven that the number of PHY channels is limited, and many Bluetooth devices \ncan be operating in dependently within the same spatial and temporal area, \nthere is a strong likelihood of two pairs of independent Bluetooth devices \nhaving their transceivers tuned to the same PHY channel, resulting in a \ncollision. Unlike BR/EDR, where an access code is used to identify the piconet, \nLE uses a randomly generat ed Access Address to i dentify a physical channel \nbetween devices. In the event that two devices happen to share the same PHY \nchannel in the same area, the targeted device A ccess Address is used as a \ncorrelator to determine to which device the comm unication is directed.\nFour LE physical channels are defined. Each is optimized and used for a \ndifferent purpose. The LE piconet physi cal channel is used for communication \nbetween connected devices and is associat ed with a specific piconet. The LE \nadvertising physical channel is used fo r broadcasting advertisements to LE \ndevices. These advertisements can be used  to discover, connect, or send user \ndata to scanner or initiator devices. The periodic physical channel is used to \nsend user data to scanner devices in periodic adverti sements at a specified \ninterval. The LE isochronous physical c hannel is used to tr ansfer isochronous \ndata between LE devices in an LE piconet or to transfer isochronous data \nbetween unconnected LE devices.\nAn LE device can only use one of thes e LE physical channels at any given \ntime. In order to support mu ltiple concurrent operatio ns the device uses time-\ndivision multiplexing between the channels. In this way a Bluetooth device can \nappear to support connected devices while simultaneous ly sending advertising \nbroadcasts.", "start_char_idx": 0, "end_char_idx": 2894, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "12de26ba-57ce-403c-ae56-49fd1e9a0426": {"__data__": {"id_": "12de26ba-57ce-403c-ae56-49fd1e9a0426", "embedding": null, "metadata": {"page_label": "48", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d45df7f5-978e-4e43-9495-0145e4615a43", "node_type": null, "metadata": {"page_label": "48", "file_name": "bluetooth-act.pdf"}, "hash": "ca8a2d2e655e88f1adfd1bc16ecd70a3e83c0961cc488a7a79c4d49fe9ceb8fe"}}, "hash": "2def5cf35254e67f66a6f0f94ea2683142c50ae99853e92f977e78303edcaffd", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 229\nArchitecture\nWhenever an LE device is synchronize d to the timing and frequency of the \nphysical channel it is said  to be connected or sync hronized to this channel \n(whether or not it is ac tively involved in communica tions over the channel). The \nBluetooth specification assu mes that a device is only  capable of co nnecting to \none physical channel at a time. Ad vanced devices may be capable of \nconnecting or synchronizi ng simultaneously to more than one physical \nchannel, but the specif ication does not make this assumption.\nPackets on both the LE piconet physica l channel and the LE  advertisement \nbroadcast channel can cont ain a Constant Tone Extension that can be used for \nthe purpose of direction finding.\n3.3.2.1  LE piconet physical channel\n3.3.2.1.1   Overview\nThe LE piconet physical channel is  used for communication between \nconnected LE devices dur ing normal operation.\n3.3.2.1.2   Characteristics\nThe LE piconet physical channel is c haracterized by the access address, a \npseudo-random sequence of  PHY channels, and three additional parameters \nprovided by the Central. T he first is the channel map t hat indicates the set of \nPHY channels used in the piconet. T he second is a pseud o random number \nused as an index into the complete set of PHY channels. The third is the timing \nof the first data packet sent by the Central afte r the connection request.\nThe channel is divided into connection events where each connection event \ncorresponds to a PHY hop channel. Consecutiv e connection events \ncorrespond to different PHY hop channels. T he first packet sent by the Central \nafter the connection establis hment sets an anchor point  for the timing of all \nfuture connection events. In a connecti on event the Central transmits packets \nto a Peripheral in the pic onet and the Peripheral may respond with a packet of \nits own.\nOn the LE piconet physical channel the Centra l controls access to the channel. \nThe Central starts its trans mission in a connection event that occurs at regular \nintervals. Packets transmitted by the Central are aligned with the connection \nevent start and defi ne the piconet timing.\nEach Central transmission contains a packet carrying information on one of the \nlogical transports. The Peripheral can transmit on the ph ysical channel in \nresponse.\nThe LE piconet physical channel is similar to the BR /EDR adapted piconet \nchannel in that t he set of PHY channels used c an be modified to avoid \ninterference. The set of used channels in  the channel map is established by the \nCentral during connection se tup. While in a connection the Ce ntral can change", "start_char_idx": 0, "end_char_idx": 2772, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "6babf5b3-2bff-4c8e-90f2-76e61940e363": {"__data__": {"id_": "6babf5b3-2bff-4c8e-90f2-76e61940e363", "embedding": null, "metadata": {"page_label": "49", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "16cc8acf-e57c-43de-a1a9-946c4deb1192", "node_type": null, "metadata": {"page_label": "49", "file_name": "bluetooth-act.pdf"}, "hash": "255887a83c864a525f8d6cf2e66522ae6be6cc28e30c8d6ecf22757d0c43f282"}}, "hash": "255887a83c864a525f8d6cf2e66522ae6be6cc28e30c8d6ecf22757d0c43f282", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 230\nArchitecture\nthe channel map when necessa ry to avoid new interfer ers. The Peripheral can \nprovide channel classification information to the Central.\nThere are 37 LE piconet channels. T he Central can reduce this number \nthrough the channel map indicating the used channels. When the hopping \npattern hits an unused c hannel the unused channel is replaced with an \nalternate from the set of  used channels. The LE Pi conet physical channel can \nuse any LE PHY.\n3.3.2.1.3   Topology\nAn LE piconet physical channel is shared by exactly two LE devices.\nAn LE device may belong to one or more piconets at a time, that is, an LE \ndevice may be a Peripheral in zero or mo re piconets and may also be a Central \nin zero or more piconets.\nOnly one LE piconet physical channel can exist between two LE device \nidentities or non-resolvable private addresses.\n3.3.2.1.4   Supported layers\nThe LE piconet physical channel suppor ts L2CAP channels used for general \npurpose communications.\n3.3.2.2  Advertisin g physical channels\n3.3.2.2.1   Overview\nAn LE advertising physical channel is us ed to set up connections between two \ndevices or to communic ate broadcast informati on between unconnected \ndevices.\n3.3.2.2.2   Characteristics\nThere are two LE adverti sing physical channels: the primary advertising \nphysical channel and the second ary advertising physical channel.\nThe primary adve rtising physical channe l is a set of thr ee fixed PHY channels \nspread evenly across the LE frequency spectrum. T he number of primary \nadvertising PHY channels c an be reduced by the adverti sing device in order to \nreduce interference. The primary adver tising physical channel can use either \nthe LE 1M or  LE Coded PHY.\nThe primary advertising ph ysical channel is divided in to advertising events \nwhere each advert ising event can hop on all primary advertising PHY \nchannels. The advertising event s occur at regular interv als which are slightly \nmodified with a random delay to aid in interference avoidance.", "start_char_idx": 0, "end_char_idx": 2146, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "80bf8ed5-e637-4a41-96a8-65f00f97fc68": {"__data__": {"id_": "80bf8ed5-e637-4a41-96a8-65f00f97fc68", "embedding": null, "metadata": {"page_label": "50", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "80a78f2f-b97c-4577-83de-cb5814f1b4d9", "node_type": null, "metadata": {"page_label": "50", "file_name": "bluetooth-act.pdf"}, "hash": "36424e49e0cc4a1b5c901e05d4735e346e69a2ab39219e35041097a857bf4f22"}}, "hash": "c21eeb5a576b6403d9b2c31976fdb43e899b703ee3656421bc83c6dec8675ddf", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 231\nArchitecture\nOn the primary advertising physical c hannel the advertising device controls \naccess to the physical channel. The adver tising device starts its transmission in \nan advertising event and tr ansmits advertising packet s on one or more of the \nprimary advertisin g PHY channels. Each adverti sing packet is sent on a \ndifferent advertising PHY channel at a fixe d interval. Seven types of advertising \nevents can be used, with each advertisi ng event type havi ng different sized \nadvertising packets. The PDU payloads of  these advertising packets can vary \nin length from 6 to 37 octets.\nSome advertising events s ent by the advertising de vice permit the listening \ndevice to concurrently s end scan requests or connec tion requests packets on \nthe same advertising PHY channel in which the advertising packet was \nreceived. The advertising device c an send a scan response packet again on \nthe same advertising PHY channel within the same advertising event. The \npayload of the scan response packet can vary in length  from 6 to 37 octets.\nThe secondary advertising physical channel is a set of 37 fixed PHY channels \nspread across the LE freque ncy spectrum. These are the same fixed LE PHY \nchannels used by the data physical c hannel. The secondary advertising \nphysical channel uses the same channel indices as the data physical channel. \nThe payload of advertising packets us ed on the secondary advertising physical \nchannel can vary in length from 0 to 255 octets. Ad vertising pa ckets on the \nsecondary advertising physi cal channel are not part of the advertising event \nbut are part of the ex tended advertising event. These extended advertising \nevents begin at the same time as the advertising event on the primary \nadvertising physical channel and conclu de with the last packet on the \nsecondary advertising  physical channel.\nThe secondary advertising ph ysical channel is used to  offload data that would \notherwise be transmitt ed on the primary adverti sing physical channel. \nAdvertising packets on the secondary adv ertising physical channel (\"auxiliary \npackets\") are scheduled by t he advertiser when sufficient  over-the-air time is \navailable. The advertising packet on the primary adve rtising physical channel \ncontains the PHY channel a nd the offset to the star t time of the auxiliary \npacket.\nThe secondary advertising  physical channel can us e any LE PHY. All \nadvertising packets on the secondary advertising physic al channel in the same \nextended advertising event use the same  PHY, which is specified in the \nadvertising packet on the primary advertisi ng physical channel.\n3.3.2.2.3   Topology\nAn LE advertising physical channel c an be shared by any  number of LE \ndevices. Any number of LE devices c an transmit advertis ing packets while \nsharing the advertising ph ysical channel. Any number of scanning devices can \nlisten on the advertising ph ysical channel. An advertisi ng device can advertise \nand be connected on an LE piconet physica l channel simultaneously. Scanning", "start_char_idx": 0, "end_char_idx": 3179, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "84297c4c-26f1-4791-956e-e0ac58d10240": {"__data__": {"id_": "84297c4c-26f1-4791-956e-e0ac58d10240", "embedding": null, "metadata": {"page_label": "51", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a5fe3747-6e91-4927-8ee6-4c6662f1bf5b", "node_type": null, "metadata": {"page_label": "51", "file_name": "bluetooth-act.pdf"}, "hash": "6d9573fde00fd95af897bd961e01364ec9a3cca1214a583e29c80613d923019d"}}, "hash": "1e9a0939d1eee8ad666f641c01e8a9608d6a9c738c4011ed38dd683b66e863eb", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 232\nArchitecture\ndevices may also be connected to one or  more LE piconet physical channels \nsimultaneously.\n3.3.2.3  Periodic physical channel\n3.3.2.3.1   Overview\nAn LE periodic physical channel is used to  set up a periodic broadcast between \nunconnected devices.\n3.3.2.3.2   Characteristics\nThe periodic physical channel is char acterized by a ps eudo-random sequence \nof PHY channels and additional  parameters provided by the advertiser. These \nare the channel map that  indicates the set of PHY channels used in the \nperiodic broadcast, the event counter  used to determine the channel hopping \nsequence, the offset indicati ng the timing of the first periodic broadcast packet, \nand the interval between su ccessive periodic broadcasts.\nThe channel is divided into periodic adver tising events wher e the start of a \nperiodic advertising event corresponds to a PHY hop channel. The start of \nconsecutive periodic advertising event s corresponds to di fferent PHY hop \nchannels. The first packet sent by t he advertiser after the broadcast is \nestablished sets an anchor point  for the timing of all future per iodic advertising \nevents.\nOn the periodic physical ch annel, the advertising device controls access to the \nphysical channel. The advertiser starts it s transmission in a periodic advertising \nevent that occurs at regular intervals.  Packets transmitted by  the advertiser are \naligned with the periodi c advertising event and s pecified broadcast timing. \nAdditional packets may also be transmi tted between the peri odic advertising \nevents. The payload of packets sent by t he advertiser may vary in length from 0 \noctets to 255 octets.\nEach advertiser transmission contains  a packet carrying information on the \nPADVB logical transports. Scanners c annot transmit on the physical channel.\nThere are 37 PHY channels. The adver tiser can reduce th is number through \nthe channel map indicating th e used channels. When t he hopping pattern hits \nan unused channel, the unused channel is replaced wi th an alternate from the \nset of used channels. The periodic ph ysical channel can use any PHY. All \nperiodic advertising events use the same PHY used by  the advertiser in the \npacket describing the characteristi cs of the periodic physical channel.\n3.3.2.3.3   Topology\nAn LE periodic physical channel can be shared by any  number of LE devices. \nAny number of LE devices can trans mit periodic advertising packets while \nsharing the same periodic physical PHY channels.  Any number of scanning", "start_char_idx": 0, "end_char_idx": 2658, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "d6ed6bab-a480-4f30-84c6-5b2a9720edce": {"__data__": {"id_": "d6ed6bab-a480-4f30-84c6-5b2a9720edce", "embedding": null, "metadata": {"page_label": "52", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "13631f8c-b01c-4684-8b1f-59ef8b5109fa", "node_type": null, "metadata": {"page_label": "52", "file_name": "bluetooth-act.pdf"}, "hash": "e3de6d15892fd1e76e8e0c8d3d358c4f50c8ed4381f5410fc2a6e4b3321f3cf2"}}, "hash": "cd7d4bf387b0b1e9777ceb551730dbadd89d598cdb30ff69905bf81aafe20d05", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 233\nArchitecture\ndevices can listen on the per iodic physical channel. An  advertising device can \nadvertise and be synchronized on an LE periodic physical channel \nsimultaneously. Scanning devices may also be synchronized to one or more LE \nperiodic physical channels simultaneously.\n3.3.2.4  LE Isochronous physical channel\nThe LE isochronous physical channel c an be created to tran sfer isochronous \ndata between LE devices.\n3.3.2.4.1   Overview\nThe LE isochronous physical channel is  used to transfer isochronous data \nbetween connected or unconnected LE devices.\n3.3.2.4.2   Characteristics\nThe LE isochronous physical channel is  characterized by a pseudo-random \nsequence of PHY channels and by thr ee additional param eters that are \nprovided by a Central or a connectionless broadcaster. The first parameter is \nthe channel map that indi cates the set of PHY channels. The second \nparameter is a pseudo random number t hat is used as an index into the \ncomplete set of PHY channel s. The third parameter is  the timing of the first \ndata packet. The timing of the first packet of a CIS is provided  in the Link Layer \nmessage that is sent in the associat ed ACL connection by the Central during \nthe CIS establishment  phase. The timing of t he first packet of a BIS is \nreferenced from a periodic advertisi ng event associ ated with the BIS.\nThe LE isochronous physical channel is used to transfer isochronous data in \nisochronous events that occur at regular intervals. Each is ochronous event is \ndivided into one or more subevents. Each  subevent uses a PHY channel that is \nselected by the channel selection algorithm.\nIn any subevent in an isochronous co nnection, the Central transmits a packet \nto the Peripheral and the Peripheral ma y respond with a packet of its own. The \nCentral controls the access to the LE isochronous physical channel. In every \nCIS event, the Centra l starts its transmission at the start of the first subevent. \nPackets that are transmitted by the Central are time al igned with the start of \nevery subevent.\nA Broadcasting Isochronous transmitter transmits isochronous data packets \nand control packets. Any device that is  synchronized to the BIS can receive \nthese packets. The broadc asting device controls access to the LE isochronous \nphysical channel. Within BIS events, the broadcasting de vice starts its \ntransmission in the first subevent. Packets that are transmitted by the \nbroadcasting device are aligned wi th the start of  every subevent.\nThere are 37 PHY channels. The Central or the isochr onous stream transmitter \ncan reduce this number through the channel  map that indicates the used", "start_char_idx": 0, "end_char_idx": 2793, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "c7d8c73d-4894-4279-94b4-4522307bd022": {"__data__": {"id_": "c7d8c73d-4894-4279-94b4-4522307bd022", "embedding": null, "metadata": {"page_label": "53", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f2d3214f-74df-4fd5-bb97-f239a25c3add", "node_type": null, "metadata": {"page_label": "53", "file_name": "bluetooth-act.pdf"}, "hash": "88034bab0aa59e81ac32cc6d69cc8c06c57c4e24d8da7d3ba02b96101c9f9d87"}}, "hash": "59b8bb00712b0657d5935ece0b9a27d4a493634884a34ae2d42a6b07ec259d50", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 234\nArchitecture\nchannels. When the channel selection algorithm sele cts an unused channel, \nthe unused channel is r eplaced with an alternate fr om the set of used \nchannels. For CISes, the LE  isochronous physical cha nnel uses the set of PHY \nchannels that are enabled  on the LE piconet physical channel. The LE \nisochronous physical channel can use any LE PHY.\n3.3.2.4.3   Topology\nThe LE isochronous physical channel in a CIS can be used  for one-to-one \ncommunication between the devices that are in the LE piconet. The Central \nmay establish one or more CISes with the Peripher al in the LE piconet; that is, \nthe LE isochronous physi cal channel can carry one or more CIS logical \ntransports between a given Central and Peripheral. The LE isochronous \nphysical channel and all the CISes it  carries are terminated when the \nassociated LE piconet physical channel  is terminated. If a Central has \nestablished piconets with more than one Peripheral, it c an establish LE \nisochronous physical channels with more than one of these Peripherals at the \nsame time.\nThe LE isochronous physical cha nnel can be used for one-to-many \ncommunication topologies of  unconnected LE devices.  Each LE isochronous \nphysical channel can ca rry one or more BIS logical transports.\n3.3.3  [This secti on is no longer used]\n3.4   PHYSICAL LINKS\nA physical link repres ents a baseband connection bet ween Bluetooth devices. \nA physical link is always associat ed with exactly one physical channel \n(although a physical channel  may support more than one physical link). Within \nthe Bluetooth system a physica l link is a virtual conc ept that has no direct \nrepresentation within the structure of a transmitted packet.\nIn BR/EDR the access code packet field,  together with the clock and address \nof the Central Bluetooth device, is used to identify a physica l channel. In LE, \nthe access address and channel map, including hopIncrement  in the case of \nChannel Selection Algorithm  #1 or an event counter in the case of Channel \nSelection Algorithm #2, are used to id entify a physical c hannel. For BR/EDR \nand LE, there is no subsequent  part of the packet that directly iden tifies the \nphysical link. Instead, the physical link may be identified by association with the \nlogical transport, as each l ogical transport is only received on one physical link.\nSome physical link types have properties that may be modified. An example of \nthis is the transmit power for the link. Other physical link types have no \nmodifiable properties. In the case of BR /EDR physical links with modifiable \nproperties the LM protocol is  used to adapt thes e properties. In the case of LE \nphysical links with modifiabl e properties the LL  protocol is used to adapt these \nproperties. As the LM protoc ol (BR/EDR) or LL protoc ol (LE) is supported at a", "start_char_idx": 0, "end_char_idx": 2971, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "9e65771e-3571-425c-9cda-6a714bb39333": {"__data__": {"id_": "9e65771e-3571-425c-9cda-6a714bb39333", "embedding": null, "metadata": {"page_label": "54", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "96a8ee11-63f3-4ebd-ac45-298e2dddc1ed", "node_type": null, "metadata": {"page_label": "54", "file_name": "bluetooth-act.pdf"}, "hash": "0296db5aba864de11d8633ccd9496da6ec39573b88470282e3bb37a91ed5c82f"}}, "hash": "0296db5aba864de11d8633ccd9496da6ec39573b88470282e3bb37a91ed5c82f", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 235\nArchitecture\nhigher layer (by a logical link) the appropriate physica l link is identified by \nimplication from the logi cal link that transports the LM or LL signaling.\nIn the situation where a tr ansmission is broadcast over  a number of different \nphysical links, then the transmission para meters are selected to be suitable for \nall of the physical links.\n3.4.1  BR/EDR links suppor ted by the basic and ad apted piconet physical \nchannels\nThe basic piconet physical  channel supports a physica l link which may only be \nactive. The adapted piconet physica l channel may support several physical \nlinks, including active and Connectionless Peripheral  Broadcast. An active \nphysical link is a point-to-point link between the Central and  a Peripheral. A \nConnectionless Peripheral Broadcast physical link is a point-to- multipoint link \nbetween the Transmitter (Cent ral) and zero or more Receivers (Peripherals). \nAt least one physical link on the pico net physical channel is always present \nwhen a Peripheral is synch ronized in the piconet.\n3.4.1.1  Active physical link\nThe physical link between a C entral and a Peripheral is active if a default ACL \nlogical transport exists be tween the devices. Active physical links have no direct \nidentification of thei r own, but are identif ied by association with the default ACL \nlogical transport ID wi th which there is a one-to-one correspondence.\nAn active physical link has  the associated property of  radio transmit power in \neach direction. Transmissions from Pe ripherals are always di rected over the \nactive physical link to t he Central, and use the transmit power that is a property \nof this link in the Peripheral to Ce ntral direction. Transmissions from the \nCentral may be directed ov er a single active physi cal link (to a specific \nPeripheral) or over a number of physical links (to a gr oup of Peripherals in the \npiconet). In the case of  point-to-point transmissi ons the Central uses the \nappropriate transmit power for the physical link in question. (In the case of \npoint-to-multipoint transmissions the C entral uses a transmit power appropriate \nfor the set of de vices addressed.)\nActive physical links may be placed into Hold or Sniff mode. The effect of these \nmodes is to modify the per iods when the physical link  is active and may carry \ntraffic. Logical transports that have defined scheduling characteristics are not \naffected by these modes an d continue according to their pre-defined scheduling \nbehavior. The default ACL logical tr ansport and other links with undefined \nscheduling characteristics are subject to  the mode of the ac tive physical link.", "start_char_idx": 0, "end_char_idx": 2793, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "5df3a9e0-6d27-4f45-871b-883d0d47daf3": {"__data__": {"id_": "5df3a9e0-6d27-4f45-871b-883d0d47daf3", "embedding": null, "metadata": {"page_label": "55", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "4a6126d1-854b-414f-b6a7-35f5a4dc256c", "node_type": null, "metadata": {"page_label": "55", "file_name": "bluetooth-act.pdf"}, "hash": "6de9e1d3d3b79501e256508e369fde4d78abb7e0230924c170d5bfbd168ff48a"}}, "hash": "6de9e1d3d3b79501e256508e369fde4d78abb7e0230924c170d5bfbd168ff48a", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 236\nArchitecture\n3.4.1.2  [This section is no longer used]\n3.4.1.3  Connectionless Periphe ral Broadcast physical link\nA Connectionless Peripheral Broadcast physi cal link is pres ent on a Receiver \n(Peripheral) when it is synchronized in the piconet w here a CPB logical \ntransport exists. On a Tr ansmitter (Central), a Connectionless Peripheral \nBroadcast physical link is present when  a CPB logical transport exists whether \nor not any Receivers ar e synchronized. The C onnectionless Peripheral \nBroadcast physical link is a point-to-mu ltipoint unidirecti onal link between a \nTransmitter and zero or more Receivers.\nConnectionless Peripheral Broadcast ph ysical links do not support power \ncontrol because there is no feedback from Receivers to the Transmitter. Traffic \nis always directed from a single Transmi tter to zero or more Receivers.\nConnectionless Peripheral Broa dcast packets are sent at regular intervals. The \nBR/EDR Controller selects an interval within a range requested by the Host.\n3.4.2  BR/EDR links s upported by the scanni ng physical channels\nIn the case of inquiry sc an and page scan channels, the physical link exists for \na relatively short time and cannot be cont rolled or modified in any way. These \ntypes of physical links ar e not further elaborated.\n3.4.3  LE links supported by  the LE physical channels\nThe LE piconet physical channels suppor t an LE active physical link. The \nphysical link is a point-to- point link between the Centra l and a Periph eral. It is \nalways present when the Peripheral is in a c onnection with the Central.\nThe LE advertising physical channels support an LE advertising physical link. \nThe physical link is a broadcast between t he advertiser device and one or more \nscanner or initiator devices. It is always present when the advertiser is \nbroadcasting advertisement events.\nThe LE periodic physical channels support an  LE periodic physical link. The \nphysical link is a broadcast between t he advertiser device and one or more \nscanner devices. It is always present  when the advertise r is broadcasting \nperiodic advertising events.\nThe LE isochronous physical channels s upport LE isochronous  physical links. \nAn LE isochronous physical link can be a point-to-point link between a Central \nand a Peripheral or a c onnectionless link between a broadcast isochronous \ntransmitter and multip le receiving devices.", "start_char_idx": 0, "end_char_idx": 2533, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "9e4876d3-6d00-4972-99ca-7aa957f9e9ed": {"__data__": {"id_": "9e4876d3-6d00-4972-99ca-7aa957f9e9ed", "embedding": null, "metadata": {"page_label": "56", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0ff96095-16a3-42d5-af96-819e86611188", "node_type": null, "metadata": {"page_label": "56", "file_name": "bluetooth-act.pdf"}, "hash": "46530ddbdceb672cbb57e6b3571c878e2e24576835f192d911e3a2272afa44ea"}}, "hash": "46530ddbdceb672cbb57e6b3571c878e2e24576835f192d911e3a2272afa44ea", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 237\nArchitecture\n3.4.3.1  Active physical link\nThe physical link between a C entral and a Peripheral is active if a default LE \nACL logical transport exis ts between the devices. Active physical links are \neach associated with a separate piconet  physical channel, which in turn is \nidentified by the randomly generated A ccess Address used in the Link Layer \npacket. Each Access Address has a one- to-one relationship with the Central \nand the Peripheral of t he active physical link.\nAn active physical link has  the associated property of  radio transmit power in \neach direction, which may be different in each direct ion. A device uses the \nappropriate transmit power for the physica l link in question.\n3.4.3.2  Advertis ing physical link\nAn advertising physical link between an advertising device and an initiating \ndevice for the purposes of forming a co nnection (active physical link) can exist \nfor a relatively short period of time. These advertising physical links cannot be \ncontrolled or modified in any way and th ese types of physical links are not \nfurther elaborated.\nAn advertising physical link betw een an advertising device and a scanning \ndevice used for periodic broadcasting of us er data can exist for longer periods \nof time. There is no identif ication information about th e physical link within the \nprotocol. The relationship between the advertising and sca nning device is \nestablished through the use of the Bluetooth Device Address.\n3.4.3.3  Periodic physical link\nA periodic physical link between an adv ertising device and one or more \nscanning devices normally exists for a prolonged period of time. Periodic \nphysical links are each associated with  a separate periodi c physical channel, \nwhich in turn is identified by the r andomly generated Access Address used in \nthe Link Layer packet. Each Access A ddress has a one-to-one relationship \nwith the advertiser of the periodic physical link.\n3.4.3.4  Isochronous physical links\nThe isochronous physical link uses an  isochronous physical channel and \ncarries CIS and BIS logical transports.\nIsochronous physical links carrying CIS(es ) use the appropriate transmit power \nlevel for the physical li nk in question. Devices use power control on the \nassociated ACL-C logical li nk to adapt the transmit pow er level for the physical \nlink.\nIsochronous physical links carrying BI S(es) do not support power control \nbecause there is no feedback from Obse rvers to the Broadcaster. Traffic is \nalways directed from a si ngle Broadcaster to zero  or more Observers.", "start_char_idx": 0, "end_char_idx": 2693, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "e7fdc715-d287-44d0-b933-b500aa9bcb99": {"__data__": {"id_": "e7fdc715-d287-44d0-b933-b500aa9bcb99", "embedding": null, "metadata": {"page_label": "57", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e6c904a8-304e-46f4-9f5a-92a7863d1226", "node_type": null, "metadata": {"page_label": "57", "file_name": "bluetooth-act.pdf"}, "hash": "db300eb2d064fc469283b85ee06587e134c65eed4f1b0d264c2fd3598650170e"}}, "hash": "db300eb2d064fc469283b85ee06587e134c65eed4f1b0d264c2fd3598650170e", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 238\nArchitecture\n3.4.4  [This secti on is no longer used]\n3.5   LOGICAL LINKS AND LOGICAL TRANSPORTS\nA variety of logical links are availabl e to support different application data \ntransport requirements. Each logical link is associated with a logical transport, \nwhich has a number of characteristi cs. These characteri stics include flow \ncontrol, acknowledgmen t/repeat mechanisms, s equence numbering and \nscheduling behavior. Logica l transports are able to carry different types of \nlogical links (depending on the type of the logical transport). In the case of \nsome of the Bluetooth logical links thes e are multiplexed onto the same logical \ntransport. Logical transports  may be carried by active physical links on either \nthe basic or the adapted pi conet physical channel.\nLogical transport identificat ion and real-time (link cont rol) signaling are carried \nin the packet header, and for some logical links identification is carried in the \npayload header. Control signal ing that does not require single slot response \ntimes is carried out us ing the LMP protocol.\nTable 3.4  lists all of the logica l transport types, the suppo rted logical link types, \nwhich type of physical links and physi cal channels can su pport them, and a \nbrief description of the purpose  of the logi cal transport. \nLogical transportLinks \nsupported Supported by Bearer Overview\nAsynchronous Connection-Ori-ented (ACL) Control (LMP) ACL-C\nUser (L2CAP) \nACL-UBR/EDR active physical link, BR/EDR basic or adapted piconet physical channelBR/EDR Reliable or time-bounded, bi-direc-tional, point-to-point\nSynchronous Connection-Ori-ented (SCO) Stream (unframed) SCO-S BR/EDR active physical link, BR/EDR basic or adapted piconet physical channelBR/EDR Bi-directional, sym-metric, point-to-point, AV channels. Used for 64 kb/s constant rate data.\nExtended Syn-chronous Con-nection-Oriented (eSCO)Stream (unframed) eSCO-S BR/EDR active physical link, BR/EDR basic or adapted piconet physical channelBR/EDR Bi-directional, sym-metric or asymmet-ric, point-to-point, general regular data, limited retransmis-sion. Used for con-stant rate data synchronized to the Central\u2019s clock.\nTable 3.4:  Logical transport types (Sheet 1 of 2)", "start_char_idx": 0, "end_char_idx": 2357, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "3ea71c3d-6de2-45aa-a225-d20010624f5b": {"__data__": {"id_": "3ea71c3d-6de2-45aa-a225-d20010624f5b", "embedding": null, "metadata": {"page_label": "58", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "79400b61-8871-46c4-8ff3-4098a3b12bfb", "node_type": null, "metadata": {"page_label": "58", "file_name": "bluetooth-act.pdf"}, "hash": "1ab6214b36434948bcaa37984eeb39dd22d450a5098db8472d94cc6fb1fe5d9a"}}, "hash": "1ab6214b36434948bcaa37984eeb39dd22d450a5098db8472d94cc6fb1fe5d9a", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 239\nArchitecture\nActive Peripheral \nBroadcast (APB)Control (LMP)APB-CUser (L2CAP) APB-UBR/EDR active physical link, basic or adapted physical channelBR/EDR Unreliable, uni-direc-tional broadcast to any devices syn-chronized with the physical channel. Used for broadcast L2CAP groups and certain LMP mes-sages.\nConnectionless Peripheral Broad-cast (CPB) Profile Broad-cast Data (PBD) Connectionless Peripheral Broadcast physi-cal link, BR/EDR adapted piconet physical channelBR/EDR Unreliable, unidirec-tional, point-to-multi-point, periodic transmissions to zero or more devices. \nLE asynchronous connection (LE ACL Control (LL) LE-C, User (L2CAP) LE-U LE active physi-cal link, LE piconet physical channelLE Reliable, bi-direc-tional, point-to-point.\nLE Advertising Broadcast (ADVB) Control (LL) ADVB-C, User (LL) ADVB-U LE advertising physical link, LE advertising physical channelLE Unreliable, uni-direc-tional broadcast to all devices in a given area or directed to one recipient. Used to carry data and Link Layer signaling between uncon-nected devices.\nLE Periodic Advertising Broadcast (PADVB)Control (LL) ADVB-C, User (LL) ADVB-U LE periodic physical link, LE periodic physi-cal channelLE Unreliable, periodic, unidirectional broad-cast to all devices in a given area.\nConnected Iso-chronous Stream Low Energy Stream (LE-S) and Low Energy Framed data (LE-F)LE isochronous physical link LE Unidirectional or bidirectional trans-port in a point-to-point connection for transferring isochro-nous data.\nBroadcast Iso-chronous Stream Low Energy Stream (LE-S), Low Energy Framed data (LE-F) and Low Energy Broadcast Control (LEB-C)LE isochronous physical link LE Unidirectional trans-port for broadcasting data in a point to multipoint configura-tion and unidirec-tional transport for controlling the broadcast data.Logical transportLinks supported\nSupported by Bearer Overview\nTable 3.4:  Logical transport types (Sheet 2 of 2)", "start_char_idx": 0, "end_char_idx": 2072, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "4ec64300-02a6-4ba9-8967-9b6da448a451": {"__data__": {"id_": "4ec64300-02a6-4ba9-8967-9b6da448a451", "embedding": null, "metadata": {"page_label": "59", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "dfe7c0dd-275c-4c32-a059-05d62ad584d1", "node_type": null, "metadata": {"page_label": "59", "file_name": "bluetooth-act.pdf"}, "hash": "625d301046d11e8b8bc48bcd1e4a4ad1ce9448dcb70eea8b819d974a4adec35f"}}, "hash": "a4f62c4cabe4cd223da1f4eae9ca16ce056b6906958102f792df93191ff1ce7f", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 240\nArchitecture\nThe classification of each link type fo llows from a selection procedure within \nthree categories.\n3.5.1  Casting \nThe first category is that of casting. This may be ei ther unicast or broadcast.\n\u2022 Unicast links exist between exactly two endpoints. Traffi c may be sent in either \ndirection on unicast links.\n\u2022 Broadcast links exist betw een one source device and ze ro or more receiver \ndevices. Traffic is unidirectional, i e., only sent from the source devices to \nthe receiver devices. Broadcast lin ks are connectionless, meaning there is \nno procedure to create thes e links, and data may be se nt over them at any \ntime. Broadcast links are unreliable, and there is  no guarantee that the data \nwill be received.\n3.5.2  Scheduling and acknowledgment scheme\nThe second category  relates to the scheduli ng and acknowledgment scheme \nof the link, and implies the ty pe of traffic that is supported by the link. These are \nsynchronous, isochronous or asynchronous . There are no specific isochronous \nlinks defined, though the default ACL link c an be configured to operate in this \nfashion.\n\u2022 Synchronous links provide a method of associating t he transported data with \nthe Bluetooth piconet clock. This is ac hieved by reserving regular slots on \nthe physical channel, and transmitting fixe d size packets at these regular \nintervals. Such links are suitable for constant rate isochronous data.\n\u2022 Asynchronous links provide a method for transporting data t hat has no time-\nbased characteristics. The data is normally expected to  be retransmitted \nuntil successfully received, and each data entity ca n be processed at any \ntime after receipt, without reference to the time of receipt of any previous or \nsuccessive entity in the str eam (providing t he ordering of data entities is \npreserved).\n\u2022 Isochronous links provide a method for transporting data that has time-\nbased characteristics. The data may be  retransmitted until received or \nexpired. The data rate on  the link need not be const ant (this being the main \ndifference from synchronous links).\n3.5.3  Class of data\nThe final category is related to the class of data that is  carried by the link. This \nis either control data or user data. The user data ca tegory is sub-divided into \nL2CAP data, stream data, and periodic broadcast data.\n\u2022 Control links are only used for trans porting LMP or Link Layer messages \nbetween two Controllers. These links ar e invisible above the baseband layer \nor Link Layer and cannot be directly instantiated, co nfigured, or released by", "start_char_idx": 0, "end_char_idx": 2701, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "3969bd14-c6d5-4fd0-b2fc-e5d185c4d69b": {"__data__": {"id_": "3969bd14-c6d5-4fd0-b2fc-e5d185c4d69b", "embedding": null, "metadata": {"page_label": "60", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "dbcf14c1-1e26-43c0-b67c-9ce8db47a609", "node_type": null, "metadata": {"page_label": "60", "file_name": "bluetooth-act.pdf"}, "hash": "9591ea9e5213ba2196e4a9215cbf5c8b772b770837d5c576419b727b1bf61839"}}, "hash": "ce349618a3fb87cb083b3c0f34a2375a347a3bdaa2fafb5ae225a80d0b907eb1", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 241\nArchitecture\napplications, other than by the use of the services, such as connection and \ndisconnection, that have this effect implicitly. Contro l links are always \nmultiplexed with an equivalent L2CAP dat a link onto a logica l transport. For \nexample, ACL-C and ACL-U are multip lexed onto an ACL lo gical transport, \nwhereas ADVB-C and ADVB-U are multiplexed onto ADVB and PADVB \nlogical transports. Subj ect to the rules defi ning the acknowledgment \nscheme, the control link traffic normally takes priority over the L2CAP link \ntraffic.\n\u2022 L2CAP links are used to transport  L2CAP PDUs, whic h may carry the \nL2CAP signaling channel or fr amed user data submitte d to user-instantiated \nL2CAP channels. L2CAP frames submit ted to the baseband may be larger \nthan the available Baseband packets . A link control protocol embedded \nwithin the LLID field preserves the frame-start and frame-continuation \nsemantics when the frame is transmitted in a number  of fragments to the \nreceiver. Normally, L2CAP links give re liable delivery of dat a priority over \ntimely delivery.\n\u2022 Stream links are used to transport user  data when timely delivery of the \nlatest data has priority over reliabi lity. Lost data may be replaced by padding \nat the receiver. On BR/EDR, these links (SCO and eS CO) have a fixed \nbandwidth and are always bi directional between two devices; on LE, they \nhave a variable bandwidth with a spec ified maximum and may be either \nbidirectional between two devices (CIS) or unidire ctional broadcast (BIS).\n\u2022 Periodic broadcast data is transmitted at regular intervals, po ssibly with jitter, \nby a device. It has no acknowledgme nt mechanism. The same data is \ntransmitted until it is expl icitly changed. This is s ent on the PBD logical link \non BR/EDR and on the ADVB -U logical link on LE.\n3.5.4  Logical transports\n3.5.4.1  BR/EDR asynchronous connection-oriented (ACL)\nThe asynchronous c onnection-oriented (A CL) logical transport is used to carry \nLMP and L2CAP control signaling and best effort asynchronous user data. The \nACL logical transport uses  a 1-bit ARQN/SEQN schem e to provide simple \nchannel reliability. Every ac tive Peripheral within a piconet has one ACL logical \ntransport to the piconet Centra l, known as th e default ACL.\nThe default ACL is created between the Central and the Peripheral when a \ndevice joins a piconet (connects to the basic piconet physical channel). This \ndefault ACL is assigned a logical transport address (L T_ADDR) by the piconet \nCentral. This LT_ADDR is also used to identify the ac tive physical link when \nrequired (or as a piconet ac tive member identifier, effectively for the same \npurpose).\nThe LT_ADDR for the def ault ACL is reused for synchronous connection-\noriented logical transports between the same Central and Peripheral. Thus the \nLT_ADDR is not sufficient on its own to identify th e default ACL. However the", "start_char_idx": 0, "end_char_idx": 3047, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "ff7e94b9-2a8c-4773-a990-32bbd98d8d3d": {"__data__": {"id_": "ff7e94b9-2a8c-4773-a990-32bbd98d8d3d", "embedding": null, "metadata": {"page_label": "61", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f56bd2be-9b11-4d2c-96c4-1c7ea377804a", "node_type": null, "metadata": {"page_label": "61", "file_name": "bluetooth-act.pdf"}, "hash": "bc416243fd7599ad4bbbb71851a5b8d3bf5cba5e21eda6d26dd9c76cd1535535"}}, "hash": "bc416243fd7599ad4bbbb71851a5b8d3bf5cba5e21eda6d26dd9c76cd1535535", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 242\nArchitecture\npacket types used on the ACL are different from those used on the \nsynchronous connection-ori ented logical transport. Th erefore, the ACL logical \ntransport can be identified by the LT_ADDR field in  the packet header in \ncombination with the packet type field.\nThe default ACL may be used for isochr onous data transport by  configuring it \nto automatically flush packets after t he packets have expired. Asynchronous \ntraffic can be sent over an ACL logical transport c onfigured for isochronous \ntraffic by marking the asynchronous pa ckets as non-automatically-flushable. \nThis allows both isochronous  and asynchronous traffic to be transferred at the \nsame time to a single device.\nIf the default ACL is remov ed from the active physical  link then all other logical \ntransports that exist betw een the Central and the Peripher al are also removed. \nIn the case of unexpected loss of syn chronization to the piconet physical \nchannel the physical link a nd all logical transports an d logical links cease to \nexist at the time that this synchronization loss is detected.\n3.5.4.2  BR/EDR synchronous connection-oriented (SCO)\nThe synchronous connection-oriented (S CO) logical transpor t is a symmetric, \npoint-to-point transport bet ween the Central and a specific Peripheral. The \nSCO logical transport reserves slots on the physical channel  and can therefore \nbe considered as a circuit-switched connection between the Central and the \nPeripheral. SCO logical tran sports carry 64 kb/s of  information synchronized \nwith the piconet clock. Typically this information is an en coded voice stream. \nThree different SCO configurations  exist, offering a balance between \nrobustness, delay and bandwidth consumption.\nEach SCO-S logical link is  supported by a single SCO logical transport, which \nis assigned the same LT_A DDR as the def ault ACL logical transport between \nthe devices. Therefore the LT_ADDR field is not suff icient to identify the \ndestination of a received packet. Becaus e the SCO links use reserved slots, a \ndevice uses a combination of the LT_ADD R, the slot number s (a property of \nthe physical channel) and the packet type to  identify transmissions on the SCO \nlink.\nAlthough slots are reserved for the SCO, it is permissible to use a reserved slot \nfor traffic from another c hannel that has a hig her priority. This may be required \nas a result of Qo S commitments, or to send LM P signaling on the default ACL \nwhen the physical channel b andwidth is fully occupi ed by SCOs. As SCOs \ncarry different packet types to ACLs, t he packet type is used to identify SCO \ntraffic (in addition to the slot number and LT_ADDR).\nThere are no further architectural layers  defined by the spec ification that are \ntransported over a SCO link . A number of standard forma ts are defined for the \n64 kb/s stream that is transported, or an unformatted stream is allowed where \nthe application is responsib le for interpreting the encoding of the stream.", "start_char_idx": 0, "end_char_idx": 3133, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "53958838-61df-43b2-9c28-65edde642b0f": {"__data__": {"id_": "53958838-61df-43b2-9c28-65edde642b0f", "embedding": null, "metadata": {"page_label": "62", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6a5cce87-c601-4163-864c-9fea2bc08c2b", "node_type": null, "metadata": {"page_label": "62", "file_name": "bluetooth-act.pdf"}, "hash": "d610264378a4883056d6f0679831f7747a487d11e7c0503480e8ccbe41eb9bc5"}}, "hash": "a59db324ed73e44b93c4e9b2ed1e25c8e9401a7cb60b4d8ba9e8c5a215fc4110", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 243\nArchitecture\n3.5.4.3  BR/EDR  extended synchronous conn ection-oriented (eSCO)\nThe extended synchronous conn ection-oriented (eSCO) logical transport is a \nsymmetric or asymmetric , point-to-point transport between the Central and a \nspecific Peripheral. The eS CO reserves slots on t he physical channel and can \ntherefore be consider ed as a circuit-sw itched connection between the Central \nand the Peripheral. eSCO links offer a number of  extensions over the standard \nSCO links, in that they s upport a more flexible comb ination of packet types and \nselectable data conten ts in the packets and select able slot periods, allowing a \nrange of synchronous bi t rates to be supported.\neSCO links also can offer limited retr ansmission of packets (unlike SCO links \nwhere there is no retransmission). If these retransmissions are required they \ntake place in the slots that follow the reserved slots, otherw ise the slots may be \nused for other traffic.\nEach eSCO-S logical link  is supported by a single eSCO logical transport, \nidentified by a LT_AD DR that is unique wit hin the piconet for the duration of the \neSCO. eSCO-S links are created usi ng LM signaling and follow scheduling \nrules similar to SCO-S links.\nThere are no further architectural layers  defined by the spec ification that are \ntransported over an eSCO-S  link. Instead applicat ions may use the data \nstream for whatev er purpose they require, subject to the transport \ncharacteristics of the stream being suitable for the dat a being transported.\n3.5.4.4  BR/EDR active Peripheral broadcast (APB)\nThe active Peripheral broa dcast logical transport is  used to transport LMP \ncontrol signaling and connectionless L2CAP user traf fic to all devices in the \npiconet that are currently connected to the physical c hannel that is used by the \nAPB. There is no acknowle dgment protocol and the tr affic is uni-directional \nfrom the piconet Central to the Peripherals. The APB channel may be used for \nL2CAP group traffic (a lega cy of the 1.1 specificatio n), and is never used for \nL2CAP connection-oriented channels or L2CAP control signaling.\nThe APB logical transport is inherently unreliable because of the lack of \nacknowledgment. To impr ove the reliability, each packet is transmitted a \nnumber of times. An ident ical sequence number is used to assist with filtering \nretransmissions at the Peripheral.\nThe APB logical transport is i dentified by a reserved LT_ADDR.\nAn APB is implicitly cr eated whenever a piconet exis ts, and there is always one \nAPB associated with each of the active physical links (whether operating over \nthe basic or adapted pic onet physical channe l) that exist within the piconet. \nBecause the basic and ad apted piconet physical c hannels, and different \nchannel maps on the adapted piconet physi cal channel, are most ly coincident, \na Peripheral cannot always distinguish which of the APB channels is being", "start_char_idx": 0, "end_char_idx": 3064, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "f0c9aa81-9088-488d-92e5-7d039cad6456": {"__data__": {"id_": "f0c9aa81-9088-488d-92e5-7d039cad6456", "embedding": null, "metadata": {"page_label": "63", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "5aad374a-7790-4623-ade3-17659d0a082f", "node_type": null, "metadata": {"page_label": "63", "file_name": "bluetooth-act.pdf"}, "hash": "b1a78ea2d7f60fe1a93c00eadf7dd40f3fb975afa41c38ff78015e4fdfe6a17b"}}, "hash": "b1a78ea2d7f60fe1a93c00eadf7dd40f3fb975afa41c38ff78015e4fdfe6a17b", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 244\nArchitecture\nused to transmit the packets. This adds to  the general unreliabi lity of the APB \nchannel. (Although it is, perhaps, no more unreli able than general missed \npackets.)\nA Central may decide to us e only one of its two po ssible APBs (when it has \nboth a basic and adapted piconet physical channel), or only one of the channel \nmaps in use on the adapted piconet physi cal channel (when it  has more than \none map), as with sufficient  retransmissions or careful selection of which slots \nto transmit on it is possibl e to address all Peripherals.\nThe APB channel is never used to  carry L2CAP control signals.\n3.5.4.5  [This section is no longer used]\n3.5.4.6  LE asynchronous connection (LE ACL)\nThe LE asynchronous connection (LE ACL) logical transport is used to carry LL \nand L2CAP control signaling and best effo rt asynchronous user data. The LE \nACL logical transport uses a 1-bit N ESN/SN scheme to provide simple channel \nreliability. Every active Pe ripheral  has one LE ACL logical transport to the \npiconet Central, known as the default LE ACL.\nThe default LE ACL is automatically  created between the Central and the \nPeripheral when the piconet connecting them is created. This default LE ACL is \nassigned an Access Address by the piconet  Central. This Access Address is \nalso used to identify the active physica l link and active piconet physical channel \nwhen required.\nIf the default LE ACL is re moved from the LE active physical link then all other \nLE logical transports that exist between the Central and the Peripheral are also \nremoved. In the case of unexpected loss of synchronization to  the LE piconet \nphysical channel the LE physical link and all LE logica l transports and LE \nlogical links cease to exist at the time that this synchronization loss is detected.\n3.5.4.7  LE advertising broadcast (ADVB)\nThe LE advertising broadcast logical tr ansport is used to  transport broadcast \ncontrol and user data to all scanning devices in a given area. There is no \nacknowledgment protocol a nd the traffic is predomina tely unidirectional from \nthe advertising device. A sc anning device can send r equests over the logical \ntransport to get additional broadcast user data, or to  form an LE ACL logical \ntransport connection. The LE Advertising Broadcast logi cal transport data is \ncarried only over the LE advertising broadcast link.\nThe ADVB logical transport is inherent ly unreliable because of the lack of \nacknowledgment. To impr ove the reliability, each packet is transmitted a \nnumber of times over the LE advertising broadcast link.", "start_char_idx": 0, "end_char_idx": 2728, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "b4a9e7fb-b449-464a-9333-ef0d0c368c2f": {"__data__": {"id_": "b4a9e7fb-b449-464a-9333-ef0d0c368c2f", "embedding": null, "metadata": {"page_label": "64", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "477c4fb6-b9db-41b3-ad24-57c75f9d0718", "node_type": null, "metadata": {"page_label": "64", "file_name": "bluetooth-act.pdf"}, "hash": "178c66e2de8e1c2bc5ba3931ae1519beef09c79674f24be29873e503524e6fba"}}, "hash": "270fa64dd74f94fa44f46e7be06ac3d0d025a7675f0ec75cfaf7935c06afdd1b", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 245\nArchitecture\nAn ADVB is created whenever an advert ising device begins advertising. The \nADVB logical transport is identified by the advertiser's Bl uetooth Device \nAddress and advertising set.\n3.5.4.8  Connectionless Pe ripheral Broadcast (CPB)\nThe CPB logical transport is used to transport profile bro adcast data to all \ndevices connected to the Connectionl ess Peripheral Broadcast logical \ntransport. There is no acknowledgment sch eme and the traffic is unidirectional \nfrom a Transmitter to zero or more Re ceivers. To improve reliability, profile \nbroadcast data may be tran smitted multiple times.\nThe CPB logical transport is creat ed on the transmitter whenever the \nConnectionless Peripheral Broadcast is st arted. The CPB l ogical transport is \ncreated on the receiver whenever Connectionless Peripheral Broadcast \nreception is configured. The CPB logi cal transport is iden tified by a unique \nLT_ADDR within the piconet t hat is reserved specifically  for that purpose by the \nConnectionless Peripheral Broadcast Transmitter.\n3.5.4.9  LE periodic advertising\n3.5.4.9.1   LE periodic advertising broadcast (PADVB)\nThe LE periodic advertising broadcast logical transpor t is used to transport \nperiodic broadcast control and user data to all scanning devices in a given \narea. The data may be constant for seve ral periods or may change frequently. \nThere is no acknowledgment pr otocol and the traffic is unidirectional from the \nadvertising device. The LE Periodic Ad vertising Broadcast logical transport \ndata is carried only over the LE periodic physical link.\nThe PADVB logical transport  is inherently unreliable because of the lack of \nacknowledgment. To impr ove the reliability, the period between transmissions \ncan be shorter than  the interval between changes to the data so that each \npacket can be transmitted a number of ti mes over the LE periodic physical link.\nA PADVB is created whenever an adv ertising device begins periodic \nadvertising. The PADVB logical transpo rt is identified by  the advertiser's \nBluetooth Device Address, timing, and advertising set.\n3.5.4.9.2   Periodic advertising wi th responses (PAwR)\nThe LE periodic advertising with res ponses logical transport is used to \ntransport periodic broadcast co ntrol and user data to al l scanning devices in a \ngiven area. These broadcasts are grouped in to subevents, allowing a subset of \nthe devices to be synchronized with each subevent. Each subevent can then \ncontain information that is  directed to the subset of devices synchronized to \nthat subevent. This allows  the broadcasting device to send data to many \ndevices and the synchronized devices to only have to listen very infrequently", "start_char_idx": 0, "end_char_idx": 2839, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "015d3bf6-a90c-47bb-b848-6a19fa08b5e3": {"__data__": {"id_": "015d3bf6-a90c-47bb-b848-6a19fa08b5e3", "embedding": null, "metadata": {"page_label": "65", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d993df11-279b-415d-9e35-af5855485551", "node_type": null, "metadata": {"page_label": "65", "file_name": "bluetooth-act.pdf"}, "hash": "127a1c43bd7da55d1666204a58df10bceee8481e95be8b50f1d5d87b60da5847"}}, "hash": "127a1c43bd7da55d1666204a58df10bceee8481e95be8b50f1d5d87b60da5847", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 246\nArchitecture\nfor information directed to  them. The data may be constant for several periods \nor may change frequently. The PAwR logical tr ansport data is carried only over \nthe LE periodic physical link.\nThe PAwR logical transport also inclu des response slots. The devices that \nhave been directly addressed by the adver tising device use response slots to \nsend back responses. A higher layer s pecification determi nes the set of \ndevices that can respond and when they respond. The PAwR logical transport \nis inherently unreliable, but  the ability to use respons e slots allows higher layer \nacknowledgments to be used to provide reliability.\nA PAwR logical transport is created whenever an adve rtising device begins \nperiodic advertising confi gured to use subevents and responses. The PAwR \nlogical transport is i dentified by the advertiser's  Bluetooth Device Address, \ntiming, and advertising set.\n3.5.4.10  Connected Isoc hronous Stream (CIS)\nThe CIS is a data-symmetric or data- asymmetric, point-to-point logical \ntransport between the Central and a specific Pe ripheral. A CIS reserves \ntransmission/recept ion (Tx/Rx) periods, know n as subevents, on the \nisochronous physical channel and can be considered as a circuit switched \nconnection between th e Central and the Peripher al. The CIS supports a \nvariable flushing period for payloads , variable size dat a contents in the \npackets, and a variable number of subeven ts, allowing a range of isochronous \ndata rates, latencies, and re-transmi ssions to be suppor ted. A CIS can be \nconfigured to retransmit pa ckets by providing more subevents than required for \ntransmitting the data. If re transmissions are required, they take place in the \nsubevents (of the current or su bsequent events) that follow.\nEach LE-S or LE-F logical link is suppor ted by a single CIS th at is identified by \na unique access address for t he lifetime of the CIS. Th e LE-S or LE F links are \ncreated by using Link Layer  procedures. The higher layer may use the data \nstream for whatever purpose it requires , as long as the tr ansport characteris-\ntics of the stream are suitable for the dat a that is being trans ported. All isochro-\nnous connections are te rminated when the associated LE piconet physical \nchannel is terminated.\n3.5.4.11  Connected Isochronous Group (CIG)\nEach CIS is part of a CI G. A CIG may have one or mo re CISes, all with the \nsame Central but possibly different Peripher als. Multiple CISes in a CIG have a \ncommon timing refer ence based on the Central timi ng and are synch ronized in \ntime. The common timing reference of multiple CISes helps devices to \nsynchronize their i nput or output data. For example, when th e left and right \nchannels of an audio stereo stream, which are rece ived by separate devices, \nneed to be rendered at the same ti me. Multiple CISes in a CIG can be \nscheduled sequentially or in  an interleaved arrangement.", "start_char_idx": 0, "end_char_idx": 3071, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "21ca132f-be9f-41f8-9d9f-a8f0276424f9": {"__data__": {"id_": "21ca132f-be9f-41f8-9d9f-a8f0276424f9", "embedding": null, "metadata": {"page_label": "66", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "39de1414-2790-4e12-961b-a277ac6ae229", "node_type": null, "metadata": {"page_label": "66", "file_name": "bluetooth-act.pdf"}, "hash": "7b5de4f3cd39ccd07a4d860b8b9df8b304029488add28f4f64b79b8845e87d95"}}, "hash": "7b5de4f3cd39ccd07a4d860b8b9df8b304029488add28f4f64b79b8845e87d95", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 247\nArchitecture\n3.5.4.12  Broadcast Is ochronous Stream (BIS)\nThe BIS logical transport is used to tr ansport one or more isochronous data \nstreams to all devices for a BIS within  range. The data may be fixed or variable \nsize, framed or unframed. A BIS has one or more subevent s for transmitting \nisochronous data packets. A BIS supports transmission of multiple new iso-\nchronous data packets in every BIS event. There is  no acknowledgment proto-\ncol and the traffic is uni directional from the broad casting device. The BIS \nlogical transport is inherently unreliabl e because of the lack of acknowledg-\nment. To improve the reliab ility of delivery, the isoc hronous data packets can be \nunconditionally re-transmitted by increa sing the number of subevents in every \nevent. The reliability of delivery can also  be improved by transmitting packets in \nintervals earlier than the in tervals they are associated with; this is called \"pre-\ntransmission\". A BIS supports LE -S or LE-F logical links.  A BIS is identified by \na unique access address and the timing information. The access address and \nthe timing information is transmitted in t he packet that is sent using the associ-\nated Periodic Advertising Broadcast (P ADVB) logical transport. A scanning \ndevice that supports the Synchronized Re ceiver role feature may receive iso-\nchronous data from a BIS after synchronizing to the BIS by us ing the timing \ninformation from the pe riodic advertising train.\n3.5.4.13  Broadcast Isochronous Group (BIG)\nEach BIS is part of a BI G. A BIG may have one or more  BISes. Multiple BISes \nin a BIG have a common timing reference based on the broadcaster and are \nsynchronized in time. Fo r example, when the left  and right channels of an \naudio stereo stream, which are receiv ed by separate devices, need to be \nrendered at the same ti me. Multiple BISes in a BIG can be scheduled \nsequentially or in an interleaved arra ngement. A BIG also  supports a Low \nEnergy Broadcast Contro l (LEB-C) logical link.\n3.5.5  Logical links\nSome logical transports ar e capable of supporting different logical links, either \nconcurrently multiplexed,  or one of the choice.\n3.5.5.1  BR/EDR logical links\nWithin BR/EDR logical transports , the logical link is identi fied by the logical link \nidentifier (LLID) bi ts in the payload header of Baseband packets that carry a \ndata payload. The logical links distinguish between a limit ed set of core \nprotocols that are able to  transmit and receive data on the logical transports. \nNot all of the logical tran sports are able to carry a ll of the logi cal links (the \nsupported mapping is shown in Figure 3.2 ). In particular the BR/EDR SCO and \neSCO logical transports are only able to carry constant  data rate st reams, and \nthese are uniquely i dentified by the LT_ADDR. Such  logical transports only use \npackets that do not contai n a payload header, as thei r length is known in \nadvance, and no LLID is necessary.", "start_char_idx": 0, "end_char_idx": 3104, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "87c9b615-77eb-475f-8142-b229830fee79": {"__data__": {"id_": "87c9b615-77eb-475f-8142-b229830fee79", "embedding": null, "metadata": {"page_label": "67", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "eb824861-b315-47ea-83d7-668704b49828", "node_type": null, "metadata": {"page_label": "67", "file_name": "bluetooth-act.pdf"}, "hash": "87a035222348ab85ad5b92f2388a3e72d5297aa7d1aec56166f33ebbd2260110"}}, "hash": "e1a503e53b144bafb56e02957e2ce4054d6489e135f37699360795671b93a295", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 248\nArchitecture\n3.5.5.1.1   ACL control logical links (ACL-C and APB-C)\nThe ACL Control Logical Links (ACL-C and APB-C) are used to carry BR/EDR \nLMP signaling between devices in the piconet. The ACL- C control link is only \ncarried on the default AC L logical transport while the APB-C control link is only \ncarried on the APB logical transport. Each control link is always given priority \nover the corresponding data link ca rried on the same logical transport.\n3.5.5.1.2   User asynchronous/iso chronous logical links (ACL-U and APB-U)\nThe user asynchronous/isochronous logi cal links (ACL-U and APB-U) are used \nto carry all asynchronous and isochronous  framed user data. The ACL-U link is \nonly carried on the default ACL logical transport whil e the APB-U link is only \ncarried on the APB logical transport. Packets on t he ACL-U and APB-U link are \nidentified by one of two reserved LLID va lues. One value is used to indicate \nthat the Baseband packet c ontains the start of an L2C AP frame and the other \nindicates a continuation of a previous frame. This ens ures correct synchroniza-\ntion of the L2CAP reassembler followi ng flushed packets. The use of this tech-\nnique removes the need for a more comp lex L2CAP header in every Baseband \npacket (the header is only required in th e L2CAP start packets) because each \nL2CAP frame is completely transmitted before the next one starts. (An excep-\ntion to this rule being t he ability to flush a partially  transmitted L2CAP frame in \nfavor of another L2CAP frame.)\n3.5.5.1.3   User synchronous/ext ended synchronous logical links \n(SCO-S/eSCO-S)\nSynchronous (SCO-S) and extended synch ronous (eSCO-S) logical links are \nused to support isochronous data delivered in a stream without  framing. These \nlinks are associated with a single logical transport, where data is delivered in \nconstant sized units at a co nstant rate. There is no LLID within the packets on \nthese transports, as only a single logical link can be supported, and the packet \nlength and scheduling peri od are pre-defined and rema in fixed during the \nlifetime of the link.\nVariable rate isochronous data cannot be carried by the SCO-S or eSCO-S \nlogical links. In this ca se the data must be carried on ACL-U or APB-U logical \nlinks, which use packets  with a pay load header.\n3.5.5.1.4   Profile Broadcast Data (PBD) logical link\nThe PBD logical link is used to broadcast isochronou s unframed data to \nmultiple receivers and resides on the CPB logical transport. \n3.5.5.2  LE logical links\nWithin LE logical transports, the logical link is identified by  the logical link \nidentifier (LLID) bi ts in the payload header of Baseband packets that carry a", "start_char_idx": 0, "end_char_idx": 2826, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "77219cd0-01f3-49ff-b5b6-fd1ea11cef0a": {"__data__": {"id_": "77219cd0-01f3-49ff-b5b6-fd1ea11cef0a", "embedding": null, "metadata": {"page_label": "68", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c2c5292c-410f-4f17-9b6d-d3ee558792dd", "node_type": null, "metadata": {"page_label": "68", "file_name": "bluetooth-act.pdf"}, "hash": "d04e6374d7ccd6fd3f406da596bb135b5fe49f0672313eefa86fa3838336c863"}}, "hash": "d04e6374d7ccd6fd3f406da596bb135b5fe49f0672313eefa86fa3838336c863", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 249\nArchitecture\ndata payload. The logical links distinguish between a limit ed set of core \nprotocols that are able to  transmit and receive data on the logical transports. \nNot all of the logical tran sports are able to carry a ll of the logi cal links (the \nsupported mapping is shown in Figure 3.2 ).\n3.5.5.2.1   Control logical link (LE-C)\nThe LE ACL Control Logical Link (LE-C)  is used to carr y LE LL signaling \nbetween the two devices in the piconet. The control link is only carried on the \ndefault LE ACL logical transport.\n3.5.5.2.2   User asynchronous logical link (LE-U)\nThe user asynchronous logical link (LE- U) is used to ca rry all asynchronous \nand framed user data. The LE-U link is  carried on the LE logical transport. \nPackets on the LE-U link are identified by one of two reserved LLID values. \nOne value is used to indica te that the Baseba nd packet contains  the start of an \nL2CAP frame and the other indicates a continuation of  a previous frame or \nempty PDU. This ensures correct synchr onization of the L2CAP re-assembler. \nThe use of this technique remove s the need for a more complex L2CAP \nheader in every Baseband packet becaus e each L2CAP frame is completely \ntransmitted before t he next one starts.\n3.5.5.2.3   Advertis ing Broadcast Control logical link (ADVB-C)\nThe LE Advertising Broadcast Control Logic al Link (ADVB-C) is used to carry \nLE LL signaling between unconnected devices in a given area. This signaling is \nthe control commands for gathering additional broadcast user data (scan \nrequests) or connec tion requests. The control li nk is carried on the LE \nAdvertising Broadcast and LE Peri odic Advertising Broadcast logical \ntransports.\n3.5.5.2.4   Advertisi ng Broadcast User Data logical link (ADVB-U)\nThe LE Advertising Broadcas t User Data Logical Link  (ADVB-U) is used to \ncarry LE Advertising Bro adcast and LE Periodic Advertising Broadcast user \ndata used between devices without the need for a conne ction or LE-U between \nthe devices. The user data link is carried on the LE Adve rtising Broadcast \nlogical transport for LE Advertising Broadcast user data and the LE Periodic \nAdvertising Broadcast logical transport for LE Periodic Advertising Broadcast \nuser data.\n3.5.5.2.5   Low E nergy Stream (LE-S)\nAn LE-S is a logical link that is used to carry the unf ramed isochronous data \npackets of an isochronous data stream in a CIS or a BIS logical transport.", "start_char_idx": 0, "end_char_idx": 2567, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "c14e05e0-0fc9-4b0c-97e0-ef0b058ee239": {"__data__": {"id_": "c14e05e0-0fc9-4b0c-97e0-ef0b058ee239", "embedding": null, "metadata": {"page_label": "69", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f83ff640-ee99-4f4b-9434-725bbf938472", "node_type": null, "metadata": {"page_label": "69", "file_name": "bluetooth-act.pdf"}, "hash": "09c9003c975590dfe4f74c961a0b73c3faf49da3a5276a8a04f804416d49c30b"}}, "hash": "09c9003c975590dfe4f74c961a0b73c3faf49da3a5276a8a04f804416d49c30b", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 250\nArchitecture\n3.5.5.2.6   Low E nergy Framed (LE-F)\nAn LE-F is a logical link that is used to carry t he framed isochronous data \npackets of an isochronous data stream in a CIS or a BIS logical transport.\n3.5.5.2.7   Low Energy Broadcast Control (LEB-C)\nAn LEB-C is a logical link th at uses the BIS logical tran sport to carry the control \ninformation for all the BISes in a BIG.\n3.5.5.3  [This section is no longer used]\n3.6   L2CAP CHANNELS\nL2CAP provides a multiple xing role allowing many different applications to \nshare an ACL-U, APB-U, or LE-U logi cal link. Applications and service \nprotocols interface with L2CAP using a channel-oriented interface to create \nconnections to equivalent ent ities on other devices.\nL2CAP channel endpoints are id entified to their clients by a Channel Identifier \n(CID). This is assigned by L2CAP, an d each L2CAP channel  endpoint on any \ndevice has a different CID.\nL2CAP channels may be configured to provide an approp riate Quality of \nService (QoS) to the application. L2CAP  maps the channel onto the ACL-U, \nAPB-U, or LE-U logical link.\nL2CAP supports channels that are c onnection-oriented and others that are \ngroup-oriented. Group-oriented cha nnels may be mapped onto the APB-U \nlogical link, or implement ed as iterated transmission to  each member in turn \nover an ACL-U logical link.\nApart from the creation, configuration and dism antling of channels, the main \nrole of L2CAP is to multiplex service data units (SDUs) from the channel clients \nonto the ACL-U, APB-U, or LE-U logical link, and to ca rry out a simple level of \nscheduling, selecting SDUs acco rding to relative priority.\nL2CAP can provide per channel flow co ntrol with the peer L2CAP layer (except \non the APB-U logical link). This option is selected by the application when the \nchannel is established. L2C AP can also provide e nhanced error detection and \nretransmission to (a) reduce  the probability of undetec ted errors being passed \nto the application and (b) re cover from loss of portions of the user data when \nthe Baseband performs a flush on the ACL-U logical link.\nIn the case where an HCI is present, t he L2CAP is also required to segment \nL2CAP SDUs into fragments t hat will fit into the bas eband buffers, and also to \noperate a token based flow  control procedure over  the HCI, submitting \nfragments to the baseband only when allowed to do so. This may affect the \nscheduling algorithm.", "start_char_idx": 0, "end_char_idx": 2574, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "727597de-3210-4119-85dc-81c9ebd4e461": {"__data__": {"id_": "727597de-3210-4119-85dc-81c9ebd4e461", "embedding": null, "metadata": {"page_label": "70", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "95e0184f-c068-4b04-9a23-4bde34054d39", "node_type": null, "metadata": {"page_label": "70", "file_name": "bluetooth-act.pdf"}, "hash": "2ce65339be47572f77b06caa935928024d1c84915ef0701ed357c9bba23bac0b"}}, "hash": "2ce65339be47572f77b06caa935928024d1c84915ef0701ed357c9bba23bac0b", "text": "Data transport architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 251\nArchitecture\n3.7   ISOCHRONOUS ADAPTATION LAYER (ISOAL)\nThe ISOAL provides a mechanism such  that the timing used to generate or \nreceive isochronous data in the upper  layer can be inde pendent of the timing \nused in the CIS or BIS logi cal transport used to carr y the isochronous data. For \nexample, audio codec data can be generated at a 10 ms interval while the \nvalue of ISO_Interval fo r the CIS can be 11 .25 ms. The ISOAL converts upper \nlayer isochronous data units to lowe r layer isochronous dat a packets (or the \nother way around). For more information, see [Vol 6] Part G .\n3.8   POWER CONTROL\nThe power control feature provides a me chanism to request a remote device to \nadjust its transmit power level based on local signal quality information. The \nfeature is supported on BR/EDR  active physical links (see Section 3.4.1.1 ) and \non LE active physical links (see Section 3.4.3.1 ).\n3.8.1  Power control in BR/EDR\nIn BR/EDR, two power control me chanisms (legacy and enhanced power \ncontrol) are available. Both mechan isms support requesti ng an incremental \nchange in transmit power le vel. The enhanced power co ntrol mechanism also \nallows requesting a change to maximum transmit power level. The requested \nchange is applied on all suppor ted modulations at onc e since the modulation \ncan change dynamically between packets.\n3.8.2  Power control in LE\nIn LE, a device can request a remote dev ice to make a spec ified change in the \nremote device's power level on a given PHY.  This allows a faster transition to \nthe desired power level compared to incremental changes. A responding \ndevice can also return a value to indicate an accept able reduction in the power \nlevel that allows the reque sting device to further reduce its transmit power level \nto the minimum level possible and henc e conserve energy. The local and \nremote devices can also share their cu rrent transmit power levels during this \nexchange to enable devices to  calculate the link pa th loss bet ween them. \nDevices are also allowed to do autonomous  local transmit power level changes \nand indicate th e change to the remote device.\nIn LE, an ACL connection can have associated con nections like CIS(es). The \npower control for all the PHYs used on the ACL and associated connections is \nmanaged over the ACL connection. The Ho st can use the connection handle of \nthe ACL connection to retrieve inform ation for all PHYs used on the ACL and \nassociated connections.", "start_char_idx": 0, "end_char_idx": 2611, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "0d992a90-df3d-4134-b56b-9a77696cd39f": {"__data__": {"id_": "0d992a90-df3d-4134-b56b-9a77696cd39f", "embedding": null, "metadata": {"page_label": "71", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ebe3c7b7-7c98-4b29-871a-ac336e68a6ff", "node_type": null, "metadata": {"page_label": "71", "file_name": "bluetooth-act.pdf"}, "hash": "926c001e9c37e8772b355f3319880af8e8b0fe4493ef91e651573e7f631ca11e"}}, "hash": "926c001e9c37e8772b355f3319880af8e8b0fe4493ef91e651573e7f631ca11e", "text": "Communication topology and operation Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 252\nArchitecture\n4  COMMUNICATION TOPOLOGY AND OPERATION\n4.1   PICONET TOPOLOGY\n4.1.1  BR/EDR topology\nAny time a link is created us ing the BR/EDR Controller it  is within the context of \na piconet. Each link co nnects two devices, ca lled the \u201cCentral\u201d and \n\u201cPeripheral\u201d. A piconet consis ts of a single Central, kn own as the Central of the \npiconet, and all the Peripheral s linked to it, known as  the Peripherals in the \npiconet.\nConnected BR/EDR devices communicate  on the same physical channel by \nsynchronizing with a common clo ck and hopping sequence. The common \n(piconet) clock is identical  to the Bluetooth clock of the Central of  the piconet \nand the hopping seq uence is derived from  the Central\u2019s cloc k and the Central\u2019s \nBluetooth Device Address (different  hopping sequences may be used for \ndifferent Peripherals).\nThe terms Central and Peripheral are only  used when describin g these roles in \na piconet.\nA number of independent pic onets may exist in close proximity. Each piconet \nhas a different physical c hannel (that is a different  Central and an independent \ntiming and hop ping sequence).\nA Bluetooth device may parti cipate concurrently in tw o or more piconets. It \ndoes this on a time-division multiple xing basis. A Bluetooth device can never \nbe a Central of more than one piconet. (Sin ce in BR/EDR the piconet is defined \nby synchronization to the Central\u2019s Bluetooth clock it is impossible to be the \nCentral of two or more piconets.) A Bluetooth device may be a Peripheral in \nmany independent piconets.\nA Bluetooth device that is a member of two or more piconets is said to be \ninvolved in a scatternet. Involvement in  a scatternet does not necessarily imply \nany network routing cap ability or function in the Bluetooth device. The \nBluetooth core protocols do not, and are not in tended to offer such \nfunctionality, which is the responsibility of higher leve l protocols and is outside \nthe scope of the specification.", "start_char_idx": 0, "end_char_idx": 2118, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "f55e02b1-b552-42ff-a5d7-7d734f4ac3ac": {"__data__": {"id_": "f55e02b1-b552-42ff-a5d7-7d734f4ac3ac", "embedding": null, "metadata": {"page_label": "72", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a6ef86a2-62a9-4129-858a-fdfb2a3436b9", "node_type": null, "metadata": {"page_label": "72", "file_name": "bluetooth-act.pdf"}, "hash": "9e93d384bc6564d7e71a1b57a313ad64560e441b1fc47249ab67385f09ccacf5"}}, "hash": "2da26917f7608a75e3ede46fb1a8e7824eb6e06a010ba385cdbaf88c6c6f83e5", "text": "Communication topology and operation Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 253\nArchitecture\nFigure 4.1:  Example Bluetooth BR/EDR topology\nIn Figure 4.1  an example topology is shown t hat demonstrates a number of the \narchitectural features described below. Device A is a Central in a piconet \n(represented by the shaded area, and known as piconet A) with devices B, C, \nD and E as Peripherals. Three other piconet s are shown: a)  one piconet with \ndevice F as Central (k nown as piconet F) and devices E, G and H as \nPeripherals, b) one piconet with device D as Central (known as piconet D) and \ndevice J as Peripheral, and c) one pic onet with device M as Central (known as \npiconet M) and device E as a Peripheral and many devices N as Peripherals.\nIn piconet A there are two physical channels. Devices B and C are using the \nbasic piconet physical channel (represent ed by the blue enclo sure) as they do \nnot support adaptive frequency hopping. Devices D and E are capable of \nsupporting adaptive frequen cy hopping, and are usi ng the adapted piconet \nphysical channel (represented by the red enclosure). De vice A is capable of \nadaptive frequency hopping, an d operates in a TDM basis on both physical \nchannels according to which Pe ripheral is being addressed.\nPiconet D and piconet F ar e both using only a basic piconet physical channel \n(represented by the cyan and magenta enclosu res respectively). In the case of \npiconet D this is because device J does not support the adaptive hopping \nmode. Although device D supports adapt ive hopping it cannot use it in this \npiconet. In piconet F device F does not support adapt ive hopping, and \ntherefore it ca nnot be used in this piconet.A\nB\nCDEF\nH\nG\nK\nJ \n \n  \n \n \nN M \nInquiry scan\n physical channel \nL\nSynchronization scan\n physical channel Basic piconet\n physical channel Basic piconet\n physical channel \nAdapted piconet  \n physical channel \n(Connectionless \n3HULSKHUDO  Broadcast \nphysical link)   Basic piconet\n physical channel Adapted piconet\n physical channel", "start_char_idx": 0, "end_char_idx": 2104, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "36ebaf0f-1993-4159-8aff-cc9982f41c84": {"__data__": {"id_": "36ebaf0f-1993-4159-8aff-cc9982f41c84", "embedding": null, "metadata": {"page_label": "73", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fb915e19-4109-4f28-9bf8-0f139282c890", "node_type": null, "metadata": {"page_label": "73", "file_name": "bluetooth-act.pdf"}, "hash": "5fcf4ef47acde06c899cf00d3b1b93d2b14a761932da3da8b1ade7046d67600d"}}, "hash": "5fcf4ef47acde06c899cf00d3b1b93d2b14a761932da3da8b1ade7046d67600d", "text": "Communication topology and operation Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 254\nArchitecture\nPiconet M (represented by the orange enclosure) uses a Connectionless \nPeripheral Broadcast physical link over the adaptive piconet physical channel \nto send Profile Broadcast Da ta from the transmitter dev ice M to many Receiver \ndevices including E and N.\nDevice K is shown in the same locality as  the other devices. It  is not currently a \nmember of a piconet, but has services that  it offers to other  Bluetooth devices. \nIt is currently list ening on its inquiry scan physical channel (represented by the \ngreen enclosure), awaiting an in quiry request from another device. \nDevice L is shown in the same locality as  the other devices. It is not currently a \nmember of a piconet, but is currently  listening on its syn chronization scan \nphysical channel (represented by t he brown enclosure), awaiting a \nsynchronization train from another device.\n4.1.2  LE topology\n \nFigure 4.2:  Example of Bluetooth LE topology\nIn Figure 4.2  an example topology is shown t hat demonstrates a number of the \nLE architectural features described below. Device A is  a Central in two piconets \n(represented by the shaded areas) with devices B and C as the respective \nPeripherals. Unlike BR/EDR  Peripherals, LE Peripherals do not share a single EB\nJILE Piconet\nPhysical Channel\nLE Advertising\nPhysical ChannelLE AdvertisingPhysical ChannelLE Advertising\nPhysical Channel\nF\nGLE Piconet\nPhysical ChannelLE PiconetPhysical Channel\nLLE Piconet\nPhysical ChannelLE PiconetPhysical Channel\nMPLE Piconet\nPhysical ChannelLE PiconetPhysical Channel\nQNLE A dvertising\nPhysical ChannelLE Advertising\nPhysical ChannelCD\nA\nOH\nRK", "start_char_idx": 0, "end_char_idx": 1775, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "c50dafcf-3d5c-4bd5-9642-a47fd359bf51": {"__data__": {"id_": "c50dafcf-3d5c-4bd5-9642-a47fd359bf51", "embedding": null, "metadata": {"page_label": "74", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2f4b0dd3-69aa-4305-bdbe-724ea92884f3", "node_type": null, "metadata": {"page_label": "74", "file_name": "bluetooth-act.pdf"}, "hash": "25ceadfe724d0fab249e2a61597c1ac883c7ecb7d10e0cde1b8030090e55a03e"}}, "hash": "b7d5a430b5532f52bc60e566baf0953606098c73d744d62a9706ff33529330d5", "text": "Communication topology and operation Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 255\nArchitecture\npiconet or a common physi cal channel with the Cent ral. Each Peripheral \ncommunicates on a separate physical c hannel with the Cent ral. One other \npiconet is shown with device F as Cent ral and device G as a Peripheral. Device \nK is in a scatternet. Device K is Centra l of one piconet with  device L as the \nPeripheral and is Peripheral of a second piconet with de vice M as the Central. \nDevice O is also in a scatternet. Device O is the Peripheral of two piconets, one \nwith device P as th e Central and the other with devi ce Q as the Central. In the \nfigure, solid arrows point from Central to Peripheral; dashed arrows, indicating \na connection initiation, point  from initiator to advert iser using a connectable \nadvertising event; devices that are ad vertising are indi cated using stars.\nThere are five other gr oups of devices shown: \n1. Device D is an advertiser and device A is also an initiator.\n2. Device E is a scanner  and device C is also an advertiser.\n3. Device H is an advertiser and devices I and J are scanners.\n4. Device K is also an advertiser and devic e N is an initiator.\n5. Device R is an advertiser and dev ice O is also an initiator.\nDevices A and B are using one LE pic onet physical channel (represented by \nthe blue enclosure and a dark gray background). De vices A and C are using \nanother LE piconet physica l channel (represented by the blue enclosure and a \nlighter gray background). Device D is  advertising usi ng a connectable \nadvertising event on the advertising physical chann el (represented by the \ngreen enclosure) and device A is an initia tor. Device A can form a connection \nwith device D, creating a new picone t. Device C is also advertising on the \nadvertising physical channel (represented by the orange enclosure) using any \ntype of advertising events  that are being captured by  device E as a scanner. \nDevices C and D may be using different adv ertising PHY channels or different \ntimings to avoid collisions.\nDevices F and G are using a piconet and an LE piconet  physical channel \n(represented by the aqua en closure). Device F is th e Central and device G is \nthe Peripheral.\nDevices H, I and J are us ing the LE advertising ph ysical channel (represented \nby the purple enclosure). Device H is an advertiser and devices I and J are \nscanners.\nIn the scatternet involving device K, dev ices K and L are using one piconet and \nLE piconet physical channel. Devices K and M are using another piconet and \nLE piconet physical channel. Device K is also advertising using a connectable \nadvertising event on the advertising physical c hannel and device N is an \ninitiator. Device N can form a connecti on with device K resulting in device K \nbeing Peripheral of two devices and Central of one dev ice at the same time.\nIn the scatternet involving device O, devices O and P are using one piconet \nand LE piconet physical channel. Devi ces O and Q are usi ng another piconet", "start_char_idx": 0, "end_char_idx": 3096, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "4664afea-8b84-4c36-8418-ef62294c8237": {"__data__": {"id_": "4664afea-8b84-4c36-8418-ef62294c8237", "embedding": null, "metadata": {"page_label": "75", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8b610734-b59a-467c-8095-2c95e5c2db2c", "node_type": null, "metadata": {"page_label": "75", "file_name": "bluetooth-act.pdf"}, "hash": "c0eba196e6238f06e7a94edd234df14430cfcbb97ab8db29a427ad72d0eef9bb"}}, "hash": "5348943b008508daffc937996aca78c4d58ca9b02ae966412b72dfbd0c7bb120", "text": "Communication topology and operation Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 256\nArchitecture\nand LE piconet physical channel. Device  R is advertising using a connectable \nadvertising event on the advertising physical chann el and device O is an \ninitiator. Device O can form a connec tion with device R resu lting in device O \nbeing Peripheral of two devices and Central of one dev ice at the same time.\n4.2   OPERATIONAL PR OCEDURES AND MODES\nThe typical operational mode of a Bluetooth device is to be connected to other \nBluetooth devices (in a piconet) and exchanging data with those Bluetooth \ndevices. As Bluetooth is an ad-hoc wireless communications  technology, there \nare a number of operational procedures that enable pi conets to be formed so \nthat the subsequent comm unications can take plac e. Procedures and modes \nare applied at different layers  in the architecture and therefore a device may be \nengaged in a number of these procedures and modes concurrently.\n4.2.1  BR/EDR procedures\n4.2.1.1  Inquiry (discovering) procedure\nBluetooth devices use the in quiry procedure to discove r nearby devices, or to \nbe discovered by devices in their locality.\nThe inquiry procedure is asymmetrical. A Bluetooth de vice that tries to find \nother nearby devices is known as an inquiring device and actively sends \ninquiry requests. Bluetooth devices that ar e available to be found are known as \ndiscoverable devices and listen for thes e inquiry requests and send responses. \nThe inquiry procedure uses a special ph ysical channel for the inquiry requests \nand responses.\nBoth inquiring and discove rable devices may alread y be connected to other \nBluetooth devices in a piconet. Any time  spent inquiring or occupying the \ninquiry scan physical channel needs to  be balanced with th e demands of the \nQoS commitments on existi ng logical transports.\nThe inquiry procedure does not make use of any of the architectural layers \nabove the physical channel , although a transient physical link may be \nconsidered to be present during the e xchange of inquiry a nd inquiry response \ninformation.\n4.2.1.1.1   Ex tended Inquiry response\nAn Extended Inquiry Re sponse can be used to  provide miscellaneous \ninformation during the inqui ry response procedure. Da ta types are defined for \nsuch things as local na me and supported services, in formation that otherwise \nwould have to be obtained by establishi ng a connection. A device that receives \na local name and a list of supported services in an extended inquiry response \ndoes not have to connect to do a re mote name request and an SDP service \nsearch, thereby shortening t he time to useful inform ation. It is  recommended", "start_char_idx": 0, "end_char_idx": 2759, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "cc7ef73c-0a19-43b9-ae21-39477a2a1d01": {"__data__": {"id_": "cc7ef73c-0a19-43b9-ae21-39477a2a1d01", "embedding": null, "metadata": {"page_label": "76", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9083b8d0-3a40-4035-a5dd-3bf99ad4ea27", "node_type": null, "metadata": {"page_label": "76", "file_name": "bluetooth-act.pdf"}, "hash": "d9bf0d2a0556962e74b5939e57b4917b4a645de8357135e2cb9dbd4eea2f0a06"}}, "hash": "dccadeec30c36b86c286d91fb38375eabbda04916ec6661c9faa5bb822dd35e6", "text": "Communication topology and operation Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 257\nArchitecture\nthat a device includes all supported se rvices and a significa nt portion of its \nlocal name, if that name is  too long to be sent  in its entirety, in the extended \ninquiry response.\nExtended inquiry response data can be transmitted encrypted or unencrypted. \nUnencrypted data can be in terpreted by any device. Encrypted data can be \nreceived by any device but can on ly be decrypted and authenticated by \ndevices that have previously shared t he session key used to encrypt the data.\nThe extended inquiry response procedure  is backwards compatible with the \nstandard inquiry response procedure.\n4.2.1.2  Paging (conn ecting) procedure\nThe procedure for forming c onnections is asymmetrical  and requires that one \nBluetooth device carries out  the page (connection) proc edure while the other \nBluetooth device is connectable (page sc anning). The procedure is targeted, \nso that the page proc edure is only responded to by  one specified Bluetooth \ndevice.\nThe connectable device uses a specia l physical channel to listen for \nconnection request packets fr om the paging (connecting)  device. This physical \nchannel has attributes that are specific to the connec table device, hence only a \npaging device with knowledge of the connectable device is able to \ncommunicate on this channel.\nBoth paging and connectabl e devices may already be connected to other \nBluetooth devices. Any time spent pagi ng or occupying the page scan physical \nchannel needs to be balanc ed with the demands of the QoS comm itments on \nexisting logical transports.\n4.2.1.3  Connected mode\nAfter a successful connection procedure ov er the BR/EDR Cont roller, there is a \npiconet physical channel to which both  devices are connec ted, there is a \nphysical link between the devices, and th ere are default ACL-C, ACL-U, APB-\nC, and APB-U logical links. Two of t hese links (ACL-C and APB-C) transport \nthe LMP control protocol and are invisible to the layers above the Link \nManager. The ACL-U link transports th e L2CAP signaling pr otocol and any \nmultiplexed L2CAP best-effort channel s. The APB-U link transports L2CAP \nchannels that are broadcast to all Peripherals on the pi conet. It is common to \nrefer to a default ACL logical transport,  which can be resolv ed by context, but \ntypically refers to the default ACL-U logical link.\nWhen in the connec ted mode it is possible to create and release additional \nlogical links and to change the modes of the physi cal and logical links while \nremaining connected to the pi conet physical channel. It is also possible for the \ndevice to carry out inquiry, paging or  scanning procedures or to be connected \nto other piconets without needing to di sconnect from the original piconet", "start_char_idx": 0, "end_char_idx": 2883, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "cf0fe1a9-84ec-4db1-8b85-1f7d32e613c8": {"__data__": {"id_": "cf0fe1a9-84ec-4db1-8b85-1f7d32e613c8", "embedding": null, "metadata": {"page_label": "77", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8d2cc84c-9f5b-4f07-ac8d-519c27216e36", "node_type": null, "metadata": {"page_label": "77", "file_name": "bluetooth-act.pdf"}, "hash": "21d487c62ef1ab6c9530b3a3bfc8fa0b0c4a6f582d3b2fb01e8297c2e789a8f0"}}, "hash": "21d487c62ef1ab6c9530b3a3bfc8fa0b0c4a6f582d3b2fb01e8297c2e789a8f0", "text": "Communication topology and operation Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 258\nArchitecture\nphysical channel. These actions are done using the Li nk Manager, which \nexchanges Link Manager prot ocol messages with the remote Bluetooth device.\nDuring the time that a Peri pheral is actively connecte d to a piconet there is \nalways a default ACL logica l transport between the Peri pheral and the Central. \nThe only method of deleting the default ACL logical trans port is to detach the \ndevice from the piconet ph ysical channel, at which time  the entire hierarchy of \nL2CAP channels, logical links, and logica l transports betwe en the devices is \ndeleted.\n4.2.1.4  Hold mode\nHold mode is not a general device mode, but applies to unreserved slots on the \nphysical link. When in this  mode, the physical link is  only active during slots \nthat are reserved fo r the operation of  the synchronous link types SCO and \neSCO. All asynchronous lin ks are inactive. Hold mode s operate once for each \ninvocation and are then exited when comple te, returning to the previous mode.\n4.2.1.5  Sniff mode\nSniff mode is not a general device mode,  but applies to t he default ACL logical \ntransports. When in this mode  the availability of t hese logical transports is \nmodified by defining a du ty cycle consisting of pe riods of presence and \nabsence. Devices that hav e their default ACL logical transports in Sniff mode \nmay use the absent periods  to engage in activity on another physical channel, \nor to enter reduced power mode. Snif f mode only affect s the default ACL \nlogical transports (i.e. t heir shared ACL logical tran sport), and does not apply to \nany additional SCO or eSCO logical trans ports that may be active. The periods \nof presence and absence of the physical li nk on the piconet physical channel is \nderived as a union of all logical transports that ar e built on the physical link.\nSniff subrating provides a mechanism fo r further reducing the active duty cycle, \nthereby enhancing the power-s aving capability of Sn iff mode, by allowing a \nHost to specify maximum transmit and re ceive latencies. This allows the \nbasebands to optimize the low power per formance without having to exit and \nre-enter Sniff mode usi ng Link Manager commands.\nBroadcast logical transport s have no defined expect ations for presence or \nabsence. A Central should aim to schedule broadcasts to coincide with periods \nof physical link presence wi thin the piconet physical channel, but this is not \nalways possible or practica l. Repetition of broadcasts  is defined to improve the \npossibilities for reaching multiple Peripher als without overlapping presence \nperiods. However, broadcast logical tr ansports cannot be considered to be \nreliable.\n4.2.1.6  [This section is no longer used]", "start_char_idx": 0, "end_char_idx": 2864, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "85800353-fd9a-4f62-8f47-73dd03da4e73": {"__data__": {"id_": "85800353-fd9a-4f62-8f47-73dd03da4e73", "embedding": null, "metadata": {"page_label": "78", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "3ee00b36-48f6-47f8-bb41-2f1cc567c5ac", "node_type": null, "metadata": {"page_label": "78", "file_name": "bluetooth-act.pdf"}, "hash": "c72186e705e40ade199e8dc5e5da1900f7816ec040fb7d1b0b104452ad5dccd9"}}, "hash": "b372398d5867e699a888f349805cc7a975905d27c4bd58bb8b9b9f412114a8fa", "text": "Communication topology and operation Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 259\nArchitecture\n4.2.1.7  Role switch procedure\nThe role switch procedure is a method for swapping t he roles of two devices \nconnected in a piconet. Th e procedure involves movi ng from the physical \nchannel that is defined by the original Centra l to the physical channel that is \ndefined by the new Central. In the process of swapping from one physical \nchannel to the next, the hierarchy of ph ysical links and logical transports over \nthe BR/EDR Controller are removed and rebuilt, with t he exception of the APB \nlogical transport that is implied by the topology and is not preserved. After the \nrole switch, the original piconet physi cal channel may cease to exist or may be \ncontinued if the origi nal Central had other Peripherals that are still connected to \nthe channel.\nThe procedure only moves the default ACL logical links and supporting layers \nto the new physical channel.  Any additional logical tran sports are not copied by \nthis procedure, and if requ ired this must be carried out by higher layers. The \nLT_ADDRs of any affected transpor ts will be reassigned on the new physical \nchannel and, therefore, may change.\nIf there are any QoS commit ments on the original logi cal transports, then these \nare not preserved after a ro le switch. These must be renegotiated after the role \nswitch has completed.\n4.2.1.8  Enhanced Data Rate\nEnhanced Data Rate is a method of extending t he capacity and types of \nBluetooth packets for the purposes of  increasing the maximum throughput, \nproviding better support for multip le connections, and lowering power \nconsumption, while the remainder of the architecture is unchanged.\nEnhanced Data Rate may be selected as a mode that oper ates independently \non each logical transport. Once enabled,  the packet type bits in the packet \nheader are interpreted differ ently from their meaning in  Basic Rate mode. This \ndifferent interpretation is clarified in  conjunction with the logical transport \naddress field in the header. The result of this interpretation allows the packet \npayload header and payload to be receiv ed and demodulated a ccording to the \npacket type. Enhanced Data Rate c an be enabled only for the ACL and eSCO \nlogical transports and cannot  be enabled for the SC O and broadcast logical \ntransports.\n4.2.1.9  Connectionless Pe ripheral Broadcast mode\nConnectionless Peripheral Broadcast m ode allows a pico net Central to \ntransmit profile broadcast data to any number of connecte d Peripherals using \nthe BR/EDR adapted picone t physical channel. To enter  this mode, the Central \nreserves a specific logical transport address for the CPB lo gical transport and \nstarts broadcasting dat a using the Connectionle ss Peripheral Broadcast \nphysical link and the synchronization  train procedure.  A single Profile \nBroadcast Data logical link is defined , which carries profile broadcast data", "start_char_idx": 0, "end_char_idx": 3023, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "20d84b55-9fef-4be9-ba93-6625a96061f9": {"__data__": {"id_": "20d84b55-9fef-4be9-ba93-6625a96061f9", "embedding": null, "metadata": {"page_label": "79", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6468dbed-28f5-499b-84ca-916e53350ed5", "node_type": null, "metadata": {"page_label": "79", "file_name": "bluetooth-act.pdf"}, "hash": "551d5ffa3e0a9b3c2526a3fc3acb4f818a702df45b1dc6fb85bb50124236504e"}}, "hash": "551d5ffa3e0a9b3c2526a3fc3acb4f818a702df45b1dc6fb85bb50124236504e", "text": "Communication topology and operation Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 260\nArchitecture\nusing the Connectionless Peripheral Broadc ast logical transport. The profile \nbroadcast data is unframe d and bypasses L2CAP.\nTo receive the Connectionl ess Peripheral Broadcast packets, a device must \nconnect with the Connection less Peripheral Broadcast Transmitter which has \nalready established a CPB logical transport. To connec t, a device follows the \nSynchronization Scan procedure to obt ain the time schedul e of the physical \nlink and then starts receiving t he Connectionless Peripheral Broadcast \npackets. Once connected, Connectionle ss Peripheral Broadc ast receivers can \nreceive profile broadcast data on the dedi cated CPB logical transport and PBD \nlogical link.\n4.2.2  LE procedures\n4.2.2.1  Device filtering procedure\nThe device filtering procedure is a method  for Controllers to reduce the number \nof devices requiring comm unication responses. Since it is not required to \nrespond to requests from every device, it reduces the num ber of transmissions \nan LE Controller is required to make which reduces power consumption. It also \nreduces the communication the Controller would be r equired to make with the \nHost. This results in additional power savings since the Host  does not have to \nbe involved.\nAn advertising or scanning device may em ploy device filteri ng to restrict the \ndevices from which it receives advertising packets, scan requests or connection requests. In LE, some adverti sing packets received  by a scanning \ndevice require that the scanning devi ce send a request to  the adve rtising \ndevice. This advertisement can be ignored if device filtering is used and the \nadvertising device is being filtered. A similar situation occurs with connection \nrequests. Connection requests must be responded to  by advertisers unless a \ndevice filter is used to li mit the devices to which the advertiser is required to \nrespond. Advertisers can also use device f ilters to limit the dev ices in which it \nwill accept a scan reque st or connection request.\nThis device filtering is accomplished th rough the use of a \u201cF ilter Accept List\u201d \nlocated in the LL block of  the Controller. A Filter Accept List enumerates the \nremote devices that are allowed to co mmunicate with the local device. When a \nFilter Accept List is in effect, transmissions from dev ices that are not in the \nFilter Accept List will be  ignored by the LL. Since device filteri ng occurs in the \nLL it can have a significant impact on  power consumption by filtering (or \nignoring) advertising packets, scan requests  or connection requests from being \nsent to the higher layers for handling.\nThe use of device filter ing during certain procedures needs to be evaluated \ncarefully to ensure devices are not un intentionally ignored,  which may cause \ninteroperability problems when attempti ng to establish connections or receive \nadvertising broadcasts.", "start_char_idx": 0, "end_char_idx": 3030, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "e3f01320-752c-4808-958d-7d6bdc06af2e": {"__data__": {"id_": "e3f01320-752c-4808-958d-7d6bdc06af2e", "embedding": null, "metadata": {"page_label": "80", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "fa7c6645-be05-4f87-9ec2-48ab2f1cbe95", "node_type": null, "metadata": {"page_label": "80", "file_name": "bluetooth-act.pdf"}, "hash": "375931d265b2bc6f18313485ddec7ce17c09df22af0353b03fa6d35cb353337c"}}, "hash": "375931d265b2bc6f18313485ddec7ce17c09df22af0353b03fa6d35cb353337c", "text": "Communication topology and operation Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 261\nArchitecture\n4.2.2.2  Advert ising procedure\nAn advertiser uses the advertising procedure to perform unidirectional \nbroadcasts to devices in the area. The unidirectional broadcast occurs without \na connection between the adv ertising device and t he listening devices. The \nadvertising procedure can be used to establish connecti ons with nearby \ninitiating devices or used to provide periodic broadcast of user data to scanning \ndevices listening on the advertisi ng physical channel. The advertising \nprocedure uses the primary advertisi ng physical channel fo r all advertising \nbroadcasts. However, the data ma y be offloaded on to the secondary \nadvertising physical channel in one or more auxiliary packets to reduce both \nthe occupancy of the primary advertisi ng physical channel and the total on-air \ntime and also to allow the data to be longer than the maximum that will fit into a \nsingle packet.\nAdvertising data can be transmitted encrypted or unencrypted. Unencrypted \ndata can be interpreted by any sc anning device. Encrypted data can be \nreceived by any scanning device but c an only be decrypted and authenticated \nby devices that have previously obtai ned the session key used to encrypt the \ndata.\nAn LE device connected in an LE piconet may also adver tise using any type of \nadvertising event. Time spent adver tising while connected needs to be \nbalanced with the connec tion requirements needed to maintain the already \nestablished connection(s).\nAdvertising devices may receive scan req uests from listening devices in order \nto get additional user dat a from the advertising dev ice. Scan responses are \nsent by the advertising device to the device making the scan request.\nAn advertising device may receive connecti on requests from init iator devices. If \nthe advertising device was using a c onnectable advertisi ng event and the \ninitiating device is not being filtered by the device filtering procedure, the \nadvertising device ceases advertisi ng and enters the conn ected mode. The \ndevice can begin adverti sing again after it is  in the connected mode.\nWhen advertising on t he LE Uncoded PHYs, scan requests and scan \nresponses can take plac e on the same PHY chan nel as the original \nadvertisement or can be  offloaded to the secondar y advertising physical \nchannel. In some cases when advertising on the LE Uncoded PHYs, \nconnection request and connec tion responses are of floaded to the secondary \nadvertising physical channel. When adv ertising on the LE  Coded PHY, scan \nrequests, scan responses, connection requests, and connection responses are \nalways offloaded. As with adv ertising data, offloading is  carried out by having \nthe initial advertisement on the primary advertising ph ysical channel point to an \nauxiliary packet on the se condary advertising physical channel. Scan requests \nand scan responses, connection reques ts, and connection responses are \nmade on the same PHY and same physica l channel as the auxiliary packet.", "start_char_idx": 0, "end_char_idx": 3140, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "e89a5c63-dda1-4b56-931e-5fb3f743ba03": {"__data__": {"id_": "e89a5c63-dda1-4b56-931e-5fb3f743ba03", "embedding": null, "metadata": {"page_label": "81", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "f439ecee-0378-4afa-9268-5f41144db7bf", "node_type": null, "metadata": {"page_label": "81", "file_name": "bluetooth-act.pdf"}, "hash": "bc52577dbe5283feefce9493f0955f801e66176b0dc15e607b251d7093b543f1"}}, "hash": "bc52577dbe5283feefce9493f0955f801e66176b0dc15e607b251d7093b543f1", "text": "Communication topology and operation Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 262\nArchitecture\n4.2.2.3  Scanning procedure\nA scanning device uses the scanning pr ocedure to listen fo r unidirectional \nbroadcasts of user data from advertising devices us ing the adverti sing physical \nchannel. A scanning device can reques t additional user data from an \nadvertising device by making a scan reques t. The advertising device responds \nto these requests with additional user data sent to the scanning device over the \nadvertising physical channel.\nThe scanning procedure can be used while connected to other LE devices. \nTime spent scanning while connec ted needs to be balanced with the \nconnection requirements needed to maintain the already established \nconnection with the ot her LE device in each piconet.\nIf the broadcasts are conn ectable advertising events and the scanning device \nis in the initiator mode, it can initiate a connect ion by sending a connection \nrequest on the primary advertising physi cal channel or seco ndary advertising \nphysical channel to the adve rtising device. Once the connection request is sent \non the primary advertisi ng physical channel, the sc anning device ceases the \ninitiator mode scanning for additional  broadcasts and enters the connected \nmode. When the connection request is sent on t he secondary advertising \nphysical channel, the scanning device l eaves the initiator mode, ceasing \nscanning for additional broadcasts, and ent ers the connecte d mode when it \nreceives the connection response. Th e device can use the scanning procedure \nafter it enters the connected mode, allowing it to be the Centra l in more than \none piconet at a time.\n4.2.2.4  Discovering procedure\nBluetooth devices use the advertising  procedure and scanning procedure to \ndiscover nearby devices, or to be disco vered by devices in a given area.\nThe discovery procedure is asymmetrical. A Bluetooth device that tries to find \nother nearby devices is kn own as a discovering devi ce and listens for devices \nadvertising scannable advertising events. Bluetooth devices that are available \nto be found are known as discoverabl e devices and acti vely broadcast \nscannable advertising events  over the advertising broadcast physical channel.\nBoth discovering and discove rable devices may alread y be connected to other \nBluetooth devices. Any time spent inqui ring or occupying the advertising \nbroadcast physical channel needs to  be balanced with  the connection \nrequirements needed to  maintain the already es tablished c onnection with \nthese other LE devices.\nUsing device filtering by the scanning device can prev ent the scanning device \nfrom discovering all the devices in a given area.", "start_char_idx": 0, "end_char_idx": 2792, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "f4820f98-8c6c-4a97-ad52-f544afa37847": {"__data__": {"id_": "f4820f98-8c6c-4a97-ad52-f544afa37847", "embedding": null, "metadata": {"page_label": "82", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0f461362-1320-4bf6-8edc-fba074a7eac9", "node_type": null, "metadata": {"page_label": "82", "file_name": "bluetooth-act.pdf"}, "hash": "cc17b1b06fa94ab22e06197cfebe6e1a5e9a61382d063e3bc02fc724d4bcfca8"}}, "hash": "cc17b1b06fa94ab22e06197cfebe6e1a5e9a61382d063e3bc02fc724d4bcfca8", "text": "Communication topology and operation Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 263\nArchitecture\n4.2.2.5  Connecting procedure\nThe procedure for forming c onnections is asymmetrical  and requires that one \nBluetooth device carries out the adv ertising procedure while the other \nBluetooth device carries out the sc anning procedure. The advertising \nprocedure can be targeted,  so that only one device will respond to the \nadvertising. The scanning device can also target an advertising device by first \ndiscovering that the advertising device is present in a connectable manner, and \nin the given area, and then scanning only  connectable advert ising events from \nthat device using the device filter. After receiving connectable advertising \nevents from the targeted adv ertising device, it can in itiate a connection by \nsending the connection reques t to the targeted adver tising device over the \nprimary advertising ph ysical channel or secondary advertising physical \nchannel.\nTime spent scanning while connec ted needs to be balanced with the \nconnection requirements needed to maintain the already established \nconnection with other LE devices.\n4.2.2.6  Connected mode\nAfter a successful connection procedure,  the devices are physically connected \nto each other within a pico net. This means that ther e is a piconet physical \nchannel to which they are both connected, there is a physical link between the \ndevices, and there are def ault LE-C and LE-U logi cal links. When in the \nconnected mode it is  possible to change the pr operties of the physical and \nlogical links while remain ing connected to the piconet  physical channel, such \nas changing the adaptive frequen cy hopping sequence or changing the \nmaximum length of data packets . It is also possible fo r the device to carry out \nadvertising, scanning or discovery proc edures without needi ng to disconnect \nfrom the original pi conet physical channel.\nAdditional logical links ar e created using the Link Ma nager that exchanges LL \nProtocol messages with the remote Bluetooth device to negotiate the creation \nand settings for these links.  One of these links (LE-C) transports the LL control \nprotocol and is invisible to the layers  above the Link Manag er. The other link \n(LE-U) transports the L2 CAP signaling protocol a nd any multiplexed L2CAP \nbest-effort channels. It is common to refer to a default LE ACL logical transport, \nwhich can be resolved by context, but typi cally refers to the default LE-U logical \nlink.\nThese two logical links s hare a logical transport.\nDuring the time that a Peri pheral is actively connecte d to a piconet there is \nalways a default LE ACL logical tr ansport between the Pe ripheral and the \nCentral. The method of del eting the default LE ACL logical transport is to \ndetach the device from t he piconet physical channel, at which time the entire \nhierarchy of L2CAP channels, logical links, and logi cal transports between the \ndevices is deleted.", "start_char_idx": 0, "end_char_idx": 3040, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "03079138-c4f9-440b-a528-ff7e06d79861": {"__data__": {"id_": "03079138-c4f9-440b-a528-ff7e06d79861", "embedding": null, "metadata": {"page_label": "83", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d35a8d7b-e234-459e-8a4e-885f1e6251d7", "node_type": null, "metadata": {"page_label": "83", "file_name": "bluetooth-act.pdf"}, "hash": "47523f15219d211a4842c3d8974e0c4e0904ccf237c80e5022755b7a8a5262a4"}}, "hash": "8ef78870388c4dee19fa05e28b413095a02f97486c94264f5570927abb4320c9", "text": "Communication topology and operation Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 264\nArchitecture\n4.2.2.6.1   Connection Subrating\nConnection subrating is a m eans of quickly modifying the effective connection \ninterval of an existing LE ACL connection.  It is accomplished by the Central \nand Peripheral skipping most of the underlying connection  events; for example, \nif the subrating factor is set to 7 then only every 7th connection event is used.\nWhen connection subrating is  applied to an existing c onnection, the active duty \ncycle may be quickly reduc ed, saving power, but t he original connection \ninterval can be quickly restored for improved throughp ut when needed. \nSubrated connections re ly on an underlying connecti on interval which is \nunderstood by both C entral and Peripheral and, in so doing, allow reliable and \nimmediate reductions and c hanges to the connection inte rval without waiting \nfor connection updates which rely on an instant seve ral connection events in \nthe future. Devices that have subrated their default LE ACL logical transports \nmay use the absent periods to engage in activity on another logical transport, \nor to enter reduced power mode. An LE subrated connection interval only \naffects the specified LE ACL logica l transport and does not apply to any \nassociated LE CIS logical tr ansports that may be active.\n4.2.2.7  Periodic advertising procedure\nAn advertiser uses the per iodic advertising procedure to  perform unidirectional \nperiodic broadcasts to devices in the ar ea. The unidirectional broadcast occurs \nwithout a connectio n between the advertising devic e and the listening devices. \nThe periodic advertising pr ocedure can be used to syn chronize with nearby \ndevices to provide deterministic periodi c broadcast of user  data to scanning \ndevices listening on the advertisi ng physical channel. The advertising \nprocedure uses the primary and seconda ry advertising physical channel to \nbroadcast control information about the periodic advertising, referr ed to as the \nperiodic advertising synchronization inform ation. The advertiser can also pass \nthe periodic advert ising synchronization informat ion to another connected \ndevice over the LE-C logical link.\nAn LE device synchronized with other LE devices on t he periodic physical \nchannel uses the periodic advertising event. Time s pent periodic advertising \nwhile connected or synchr onized with other LE devices  needs to be balanced \nwith the connection and synchronization requirement s needed to maintain the \nalready established connecti on(s) or synchronizations.\n4.2.2.8  Periodic advertisin g synchronization procedure\nThe procedure for synchronizi ng to periodic advertising consists of two parts: \nobtaining the periodic advertising synchronization info rmation and then \nlistening for the periodic advertisements. The first part may be done using \neither of two methods.\nThe first method requires that one Bluetooth device ca rries out the advertising \nprocedure while the other Bluetooth device carries out  the scanning procedure.", "start_char_idx": 0, "end_char_idx": 3139, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "8775fae5-0691-4ead-acb5-1212d2b9163f": {"__data__": {"id_": "8775fae5-0691-4ead-acb5-1212d2b9163f", "embedding": null, "metadata": {"page_label": "84", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "31a55762-0b76-46e5-a653-b3a61c3a2601", "node_type": null, "metadata": {"page_label": "84", "file_name": "bluetooth-act.pdf"}, "hash": "2dd56aaf542d48b5ca8392040e64e3d674774a3df35dab04e13e9328479a6639"}}, "hash": "2dd56aaf542d48b5ca8392040e64e3d674774a3df35dab04e13e9328479a6639", "text": "Communication topology and operation Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 265\nArchitecture\nThe scanning device can target an adverti sing device by first discovering that \nthe advertising device is pr esent and broadcasting pe riodic advertisements in \nthe given area. The scanning device t hen needs to receive the advertising \nevents containing the periodi c advertising synchronizati on information from the \ntargeted advertising device.\nThe second method requires  that a device that al ready has the periodic \nadvertising synchronization information passes it to  another connected device \nover the LE-C logical link.\nOnce the receiving device has obtained the periodic advertising \nsynchronization information, the second part of the procedur e is for it to listen \ndirectly for those peri odic advertising events; the receiving device is \nsynchronized when it has successful ly received one such event.\nSynchronizing devices may already be adv ertising, scanning, or be connected \nto other Bluetooth devices in a pico net or synchronized to other periodic \nadvertisements. Any time spent synchr onizing to periodic advertising needs to \nbe balanced with the r equirements needed to  maintain already established \nconnections or synchronizations.\n4.2.2.9  Periodic advert ising synchronized mode\nAfter a successful periodic advertising synchronization  procedure, the devices \nare physically synchronized to  each other. This means that there is a periodic \nphysical channel to which they are bo th synchronized, there is a periodic \nphysical link between the devices, and there is an ADVB-U and an ADVB-C \nlogical link. It is also poss ible for the device to ca rry out advertising, scanning, \nor discovery procedures without needing to disconnect from the LE periodic \nphysical channel.\nA Link Layer that is listening to periodic advertising may report the data in the \nperiodic advertisements to the Host. When  it is not reporti ng the data to the \nHost, the Link Layer does not need to listen to as many events to maintain \nsynchronization, thereby pote ntially providing more ti me for other procedures \nor reducing power consumption.\n4.2.3  [This secti on is no longer used]", "start_char_idx": 0, "end_char_idx": 2263, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "b930a6c9-fa51-4b26-b03c-d9a1901dc266": {"__data__": {"id_": "b930a6c9-fa51-4b26-b03c-d9a1901dc266", "embedding": null, "metadata": {"page_label": "85", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b2155022-da43-48ea-a1dd-62c4e9196a62", "node_type": null, "metadata": {"page_label": "85", "file_name": "bluetooth-act.pdf"}, "hash": "27a7e8747d44ce5343d29df376f9ecdee08b6894610bf29f6c32bbb5099200cf"}}, "hash": "27a7e8747d44ce5343d29df376f9ecdee08b6894610bf29f6c32bbb5099200cf", "text": "Security overview Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 266\nArchitecture\n5  SECURITY OVERVIEW\n5.1   SECURITY ARCHITECTURE\nThe Bluetooth security model includes five distinct secu rity features: pairing, \nbonding, device authentication, enc ryption and message integrity. \n\u2022 Pairing: the process for creating one or more shared secret keys\n\u2022 Bonding: the act of st oring the keys created dur ing pairing for use in \nsubsequent connections in order to  form a trusted device pair\n\u2022 Device authentication: veri fication that the two devices have the same keys\n\u2022 Encryption: message confidentiality\n\u2022 Message integrity: protec ts against mess age forgeries\nThe Bluetooth Core security architecture  has evolved over time and therefore \nthere are several security mechanisms.\nBR/EDR Legacy Pairing util izes the E21 or E22 algor ithms based on SAFER+. \nDevice authentication is bas ed on the E1 algorithm, wh ich is also based on \nSAFER+. Encryption utiliz es the E0 algorithm der ived from the Massey-\nRueppel algorithm. There is no provision for cryptographic message integrity. \nWhile the CRC provides some integrity protection, it is not considered to \nprovide cryptographic integrit y as it can be  easily forged.\nSecure Simple Pairing utilizes FI PS-approved algorithms  (SHA-256, HMAC-\nSHA-256 and the P-192 elliptic curve) and four association models: Just \nWorks, Numeric Comparison, Pa sskey Entry and Out-Of-Band (see Section \n5.2). Device authentication and encrypt ion are the same as BR/EDR Legacy \nPairing.\nLE Legacy Pairing uses AES-CCM en cryption and four association models \nsimilar to, though not the same  as, those in Secure Si mple Pairing. It also \nprovides signed data a nd a privacy feature.\nSecure Connections on the BR/EDR physical transport upgrades Secure \nSimple Pairing to utilize the P-256 el liptic curve and devic e authentication to \nuse FIPS-approved algorithms (H MAC-SHA-256 and AES-CTR). Secure \nConnections also adds mess age integrity (AES-CCM).\nSecure Connections on the LE physica l transport upgrades LE Legacy Pairing \nto utilize FIPS-app roved algorithms (AES-CMAC and P-256 elliptic curve) and \nadapts the Numeric Comparison  association model of Se cure Simple Pairing to \nbe used on the Bluetoot h LE physical transpor t. It also include s provisions for a \nkey generated using Secure Connections on eith er physical transport to \npreclude the need for the us er to pair a second time  on the other physical \ntransport.", "start_char_idx": 0, "end_char_idx": 2539, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "9b47ed51-8772-48b1-b816-c1589beec19c": {"__data__": {"id_": "9b47ed51-8772-48b1-b816-c1589beec19c", "embedding": null, "metadata": {"page_label": "86", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "229747fc-255c-4bcc-806f-bc0fd0892653", "node_type": null, "metadata": {"page_label": "86", "file_name": "bluetooth-act.pdf"}, "hash": "d93d9ec345db8568014d5aaeb4181e5c2b53bdff1f515d8649a438b29bdbc874"}}, "hash": "d93d9ec345db8568014d5aaeb4181e5c2b53bdff1f515d8649a438b29bdbc874", "text": "Security overview Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 267\nArchitecture\nThe security key hierarchy for BR/EDR is shown in Figure 5.1 . The key \nhierarchy is different depending on whet her a physical link is using Secure \nConnections or legacy security  procedures and algorithms.\nFigure 5.1:  BR/EDR key hierarchy\nThe security key hierarchy for LE is shown in Figure 5.2 . The key hierarchy is \ndifferent depending on whether a physical link is using LE Secure Connections \nor LE legacy pairing pr ocedures and algorithms.Central Ver ifiesPer ipher al  \nVerifiesClaimant Verifies\nUsed by LE", "start_char_idx": 0, "end_char_idx": 667, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "878f9d29-9262-49d8-9fac-acaa01151690": {"__data__": {"id_": "878f9d29-9262-49d8-9fac-acaa01151690", "embedding": null, "metadata": {"page_label": "87", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e386fff7-1c92-47de-a726-0a061ec213c1", "node_type": null, "metadata": {"page_label": "87", "file_name": "bluetooth-act.pdf"}, "hash": "b21077645814f9b73f26f71c5e6a03306cd4b2c8ede946425bf8e2ac3b30d595"}}, "hash": "b21077645814f9b73f26f71c5e6a03306cd4b2c8ede946425bf8e2ac3b30d595", "text": "Security overview Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 268\nArchitecture\nFigure 5.2:  LE key hierarchy\nThe 5.2 version of the Core  Specification adds a new LE security mode that \nenables transmission and reception of encrypted isochronous data over the \nBroadcast Isochronous Stream  (BIS) logical transport.\n5.2   BR/EDR SECURE SIMPLE PAIRING\nThe primary goal of Secure  Simple Pairing is to si mplify the pairing procedure \nfor the user. Secondary goal s are to maintain or im prove the security in \nBluetooth wireless technology. Since high levels of security and ease-of-use \nare often at opposite ends of  the spectrum in many technologies and products, \nmuch care has been taken to  maximize se curity while minimizing complexity \nfrom the end user's  point of view.\n5.2.1  Security goals\nSecure Simple Pairing ha s two security goals: prot ection against passive \neavesdropping and protec tion against man-in-the- middle (MITM) attacks \n(active eavesdropping). It is  a goal of Secure Simple  Pairing to exceed the \nmaximum security level provided by th e use of a 16 charac ter, alphanumeric, \ncase-sensitive PIN with BR/EDR Legacy Pairing, whic h often used a 4-digit \nPIN or a fixed PIN of commonly known val ues significantly limiting the security \non the link.BR/EDR Link KeyBR/EDR \nLink Key\nStored\nLong Term KeyLTK from \nLE Legacy \nPairingLE Legacy Pairing\ns1(AES-128)LP_RAND_I LP_R AN D_R\nLE STK\n- legacyBR/EDR Secure \nConnectionsBR/EDR Secure\nConnections Pairing\nLTKLE Secure\nConnections Pairing\nf5(AES-CMAC-128)DHKeyBD_ADDR_C\nLE LTK\nh6(AES-CMAC-128) h7(AES-CMAC-128)SALT SALT\nILKh7(AES-CMAC-128)\nh6(AES-CMAC-128)\nLE key distribution IRK, CSRKh6(AES-CMAC-128)h6(AES-CMAC-128)\u201ctmp2\u201d\n\u201cbrle\u201dTK\n\u201ctmp1\u201d\n\u201clebr\u201dNF NS BD_ADDR_P\nBR/EDR Link Key\nLTK, EDIV, RAND, \nIRK, CSRKLE key\ndistribution:\nILTK", "start_char_idx": 0, "end_char_idx": 1879, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "340d923a-feb4-4ddb-a2ff-f1244ba17226": {"__data__": {"id_": "340d923a-feb4-4ddb-a2ff-f1244ba17226", "embedding": null, "metadata": {"page_label": "88", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6b6d189d-8bbe-4bd3-b394-77dbd6e60828", "node_type": null, "metadata": {"page_label": "88", "file_name": "bluetooth-act.pdf"}, "hash": "bac7a8fa3256587586619f15dddfc4201608248490ffccc2250db9ee92a4315f"}}, "hash": "ccfba3066ac908190bc61692a63cefec707446b74d03c2818ac00a39f987a11e", "text": "Security overview Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 269\nArchitecture\n5.2.2  Passive ea vesdropping protection\nA strong link key coupled wi th a strong encryption algor ithm is necessary to \ngive the user protection against passi ve eavesdropping. The strength of the \nlink key is based on the amount of entropy (or r andomness) in its generation \nprocess which would not be known by an  attacker. Using legacy pairing, the \nonly source of entropy is the PIN which, in many use cases, is typically four \ndigits either selected by th e user or fixed for a given product. Therefore, if the \npairing procedure and one authentication exchange is  recorded one can run an \nexhaustive search to find t he PIN in a very short amount  of time on commonly \navailable computing hardwa re. With Secure Simple Pairing, the recording \nattack becomes much harder as the attacker must hav e solved a hard problem \nin public key cryptography in order to derive the link key from the recorded \ninformation. This protecti on is independent of the lengt h of the passkey or other \nnumeric values that the user must handl e. Secure Simple Pairing gives the \nsame resistance agains t the recording and pa ssive eavesdropping attacks \neven when the user is no t required to do anything.\nSecure Simple Pairing us es Elliptic Curve Diffie  Hellman (ECDH) public key \ncryptography as a means to thwart  passive eavesdropping attacks. ECDH \nprovides a very high degree of strengt h against passive eavesdropping attacks \nbut it may be subject to MITM attacks,  which however, are much harder to \nperform in practice than the passi ve eavesdropping attack (see Section 5.2.3 ).\nUsing BR/EDR Legacy Pairing with a 16 numeric digit PIN achieves about 53 \nbits of entropy whereas a 16 character, alphanumeric, case sensitive PIN yields \nabout 95 bits of entropy w hen the entire 62 character set is used ([0, \u2026 9, 'A', \u2026 \n'Z', 'a', \u2026 'z']). For devices that do not support the Secure Connections feature, \nSecure Simple Pairing ha s approximately 96 bits of  entropy using the FIPS \napproved P-192 elliptic curv e which is at least as good as the entropy in BR/EDR \nLegacy Pairing using a 16 character, al phanumeric, case sensitive PIN. For \ndevices that do support the Secure Connecti ons feature, Secure Simple Pairing \nhas approximately 128 bits of entropy  using the FIPS-appr oved P-256 elliptic \ncurve.\n5.2.3  Man-in-the-middle protection\nA man-in-the-middle (MITM ) attack occurs when a us er wants to connect two \ndevices but instead of con necting directly with each  other they unknowingly \nconnect to a third (attacking)  device that plays the role  of the device they are \nattempting to pair with. The third dev ice then relays information between the \ntwo devices giving the illusi on that they are directly connected. The attacking \ndevice may even eavesdrop on communi cation between the two devices \n(known as active eavesdropping) and is abl e to insert and mo dify information \non the connection. In this  type of attack, all of the information exchanged \nbetween the two devices are compromi sed and the attacker may inject \ncommands and information in to each of the devices thus potentially damaging \nthe function of the devices. Devices falling victim to the attack are capable of \ncommunicating only when the attacker is present. If t he attacker is not active or", "start_char_idx": 0, "end_char_idx": 3435, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "1a136364-2ef4-42b6-9293-42f0da2a76b0": {"__data__": {"id_": "1a136364-2ef4-42b6-9293-42f0da2a76b0", "embedding": null, "metadata": {"page_label": "89", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "6de8040c-b01e-44d1-9271-24f65385fc1c", "node_type": null, "metadata": {"page_label": "89", "file_name": "bluetooth-act.pdf"}, "hash": "f657729e2de81ec3380db489b0f3ea2caee0f44fe3a5fc4934ed9ae6d99c24c8"}}, "hash": "bccd59138dfdde0a0bf93042fe1c5ba89a5b7a84b81c21dbe9ef92aaa77f1026", "text": "Security overview Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 270\nArchitecture\nout range, the two victim devices will not be able to communicate directly with \neach other and the user  will notice it.\nTo prevent MITM attacks, Secure Simple Pairing of fers two user assisted \nnumeric methods: numerical comparison or passkey entry. If Secure Simple \nPairing would use 16 decimal digit number s, then the usability would be the \nsame as using legacy pairing  with 16 decimal digit PIN.  The chance for a MITM \nto succeed inserting its own link keys in this case is a 1 in 1016 = 253 pairing \ninstances, which is an unn ecessarily low probability. \nSecure Simple Pairing prot ects the user from MITM  attacks with a goal of \noffering a 1 in 1,000,000 chance that a MI TM could mount a successful attack. \nThe strength of the MITM protections wa s selected to minimi ze the user impact \nby using a six digit number for nume rical comparison and Passkey entry. This \nlevel of MITM protection was selected since, in most cases, users can be \nalerted to the potential presence of  a MITM attacker when the connection \nprocess fails as a result of a failed MI TM attack. While most  users feel that \nprovided that they have not compromi sed their passkey, a 4-digit key is \nsufficient for authentication (i.e. bank card PIN codes),  the use of six digits \nallows Secure Simple Pa iring to be FIPS compliant  and this was deemed to \nhave little perceiv able usability impact.\n5.2.4  Association models\nSecure Simple Pairing uses four asso ciation models refe rred to as Numeric \nComparison, Just Works, Out Of Band,  and Passkey Entry. Each of these \nassociation models are descr ibed in more detail in the following sections.\nThe association model used is determinis tic based on the I/O capabilities of the \ntwo devices.\n5.2.4.1  Numeric Comparison\nThe Numeric Comparison a ssociation model is desi gned for scenarios where \nboth devices are capable of displaying a six digit number and both are capable \nof having the user enter \"yes\" or \"no\". A good example of this  model is the cell \nphone / PC scenario.\nThe user is shown a six digit number (from \"000000\" to \"999999\") on both \ndisplays and then asked whet her the numbers are the same  on both devices. If \n\"yes\" is entered on both devic es, the pairing is successful.\nThe numeric comparison serv es two purposes. First, since many devices do \nnot have unique names, it pr ovides confirmation to t he user that the correct \ndevices are connected with each other . Second, the numer ic comparison \nprovides protection agains t MITM attacks (see Section 5.2.3 ).\nThere is a significant difference from  a cryptographic poin t of view between \nNumeric Comparison and the PIN en try model used by BR/EDR Legacy", "start_char_idx": 0, "end_char_idx": 2824, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "c6ccd485-5ee0-4160-87bb-f8b86d0e1f13": {"__data__": {"id_": "c6ccd485-5ee0-4160-87bb-f8b86d0e1f13", "embedding": null, "metadata": {"page_label": "90", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "c2cb8f24-3914-43a8-bcd4-5a1b165e5fe8", "node_type": null, "metadata": {"page_label": "90", "file_name": "bluetooth-act.pdf"}, "hash": "d312f720eee7fe192ae228550457383d78971246ba4aad233628b7e8eb51945c"}}, "hash": "d312f720eee7fe192ae228550457383d78971246ba4aad233628b7e8eb51945c", "text": "Security overview Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 271\nArchitecture\nPairing. In the Numeric Comparison asso ciation model, the si x digit number is \nan artifact of the security algorithm and no t an input to it, as is the case in the \nPIN entry model. Knowing th e displayed number is of no benefit in decrypting \nthe encoded data exchanged between the two devices.\n5.2.4.2  Just Works\nThe Just Works association model is pr imarily designed for scenarios where at \nleast one of the devices does not have a display c apable of displaying a six \ndigit number nor does it have  a keyboard capable of ente ring six decimal digits. \nA good example of this model is the cell phone/mono headset scenario where \nmost headsets do not have a display.\nThe Just Works associatio n model uses the Numeric Comparison protocol but \nthe user is never shown a number and the application ma y simply ask the user \nto accept the connection (exact implem entation is up to the manufacturer).\nThe Just Works associatio n model provides the sa me protection as the \nNumeric Comparison asso ciation model against passive eavesdropping but \noffers no protection against the MITM attack.\nWhen compared against today's  experience of a headset  with a fixed PIN, the \nsecurity level of the Just  Works association model is  considerably higher since \na high degree of protection against passi ve eavesdropping is realized.\n5.2.4.3  Out of Band\nThe Out of Band (OOB) asso ciation model is primar ily designed for scenarios \nwhere an Out of Band mechan ism is used to both disco ver the devices as well \nas to exchange or transfer cryptographic numbers used in the pairing process. \nIn order to be effective fr om a security point of vi ew, the Out of Band channel \nshould provide different pr operties in terms of se curity compared to the \nBluetooth radio channel. The Out of Band channel should be re sistant to MITM \nattacks. If it is not, security may be compromised during authentication.\nThe user's experience differs a bit depen ding on the Out of Band mechanism. \nAs an example, with a N ear Field Communication (N FC) solution, the user(s) \nwill initially touch the two devices toget her, and is given the option to pair the \nfirst device with the other device. If \"ye s\" is entered, the pa iring is successful. \nThis is a single touch ex perience where the exchanged information is used in \nboth devices. The information exchanged includes discovery information (such \nas the Bluetooth Device Address) as well  as cryptographic in formation. One of \nthe devices will use a Bluetooth Device Address to establish a connection with \nthe other device. The re st of the exchanged info rmation is used during \nauthentication.\nThe OOB mechanism may be implemented as either read only or read/write. If \none side is read only,  a one-way authentication is per formed. If both sides are \nread/write, a two-way auth entication is performed.", "start_char_idx": 0, "end_char_idx": 2994, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "192d90b9-9ce6-4830-9b5f-42c0c7c09f39": {"__data__": {"id_": "192d90b9-9ce6-4830-9b5f-42c0c7c09f39", "embedding": null, "metadata": {"page_label": "91", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "2e81cd8f-9580-46bb-bf6b-ea69eacaabc4", "node_type": null, "metadata": {"page_label": "91", "file_name": "bluetooth-act.pdf"}, "hash": "4d5316148bcd7f749a7d95d69c9b40e23ee383521c5b2c33a987b489a6673e37"}}, "hash": "4d5316148bcd7f749a7d95d69c9b40e23ee383521c5b2c33a987b489a6673e37", "text": "Security overview Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 272\nArchitecture\nThe OOB protocol is selected only when the pairing pr ocess has been \nactivated by previous OOB exchange of information and one (or both) of the \ndevice(s) gives OOB as the IO capabilitie s. The protocol uses the information \nwhich has been exchanged and simply asks the user to confirm connection.\nThe OOB association model suppor ts any OOB mechanism where \ncryptographic information and the Bluetooth Device Address can be \nexchanged. The OOB association model doe s not support a solution where the \nuser has activated a Bluetooth connect ion and would like  to use OOB for \nauthentication only.\n5.2.4.4  Passkey Entry\nThe Passkey Entry association model is primarily designed for the scenario \nwhere one device has  input capability but does not have the capability to \ndisplay six digits and the other devic e has output capabilities. A good example \nof this model is the PC and keyboard scenario.\nThe user is shown a six digit number  (from \"000000\" to  \"999999\") on the \ndevice with a display, and is then a sked to enter the num ber on the other \ndevice. If the value enter ed on the second de vice is correct, the pairing is \nsuccessful.\nThere is a significant difference from  a cryptographic poin t of view between \nPasskey Entry and the PIN entry model used by BR/EDR Legacy  Pairing. In \nthe Passkey Entry associati on model, the six digit nu mber is independent of \nthe security algorithm and not an input to it, as is the case  in the PIN entry \nmodel. Knowing the entered  number is of no benefit in decrypting the encoded \ndata exchanged between the two devices.\n5.2.4.5  Associat ion model overview\nThe following diagram shows Secure Simple Pairing from  the point of view of \nthe technology used for discovery and then the different association \npossibilities.", "start_char_idx": 0, "end_char_idx": 1928, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "6e3adf8f-03c3-4263-8678-595590555bea": {"__data__": {"id_": "6e3adf8f-03c3-4263-8678-595590555bea", "embedding": null, "metadata": {"page_label": "92", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e266554f-2c54-4365-be7a-bf7b7e8ba8cc", "node_type": null, "metadata": {"page_label": "92", "file_name": "bluetooth-act.pdf"}, "hash": "c5f25e2a831136b0ee4f6180cc9e0cb6138bc52d416f55d9b43f3927d0a15ad6"}}, "hash": "c5f25e2a831136b0ee4f6180cc9e0cb6138bc52d416f55d9b43f3927d0a15ad6", "text": "Security overview Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 273\nArchitecture\n \nFigure 5.3:  Secure Simple Pairing association models\n5.3   SECURE CONNE CTIONS ONLY MODE\nWhen a device requires that only FIPS- approved algorithms are used on the \nBR/EDR or LE physical transport, it should enter Secure Connections Only \nMode. Secure Connections Only Mode is sometimes called a \"FIPS Mode\". \nThis mode should be used when it is more impor tant for a device to have high \nsecurity than it is for it to maintain backwards compatibility with devices that do \nnot support Secure Connecti ons. The Host will enforce  that the P-256 elliptic \ncurve is used during pairi ng and that, on t he BR/EDR physical transport, the \nsecure authentication sequences are used and AES-CCM is used for \nencryption.\nIf a BR/EDR/LE device is configured in Secure Connections  Only Mode, then \nboth the BR/EDR and the LE transports will be in Se cure Connections Only \nMode.\n5.4   LE SECURITY\nLE Legacy Pairing has some differences in security aspect s compared to BR/\nEDR security features such as Secure Simple Pairing. The association models \nare similar to BR/EDR Secure Simple Pa iring from the user perspective and \nhave the same names but have differenc es in the quality of  the protection \nprovided.", "start_char_idx": 0, "end_char_idx": 1354, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "99421063-a5a2-4d26-9c8a-e23ee170a2b3": {"__data__": {"id_": "99421063-a5a2-4d26-9c8a-e23ee170a2b3", "embedding": null, "metadata": {"page_label": "93", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "7f700ecf-729d-4882-a1da-cc35db20d881", "node_type": null, "metadata": {"page_label": "93", "file_name": "bluetooth-act.pdf"}, "hash": "9abc8dee983e44f541bacef3a8aa4adc08008fc8c7af3fccd70203f287fd6ba7"}}, "hash": "f449a188ab8e3c53b5aea3ae23b7328af7597846987da7b104fa5f1dd0469f1f", "text": "Security overview Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 274\nArchitecture\n5.4.1  Association models\nBluetooth LE uses four asso ciation models referred to as Just Works, Numeric \nComparison, Out of Band and Passkey Entr y. LE legacy pairing does not have \nan equivalent of Numeric Comparison.\nIn LE legacy pairing, eac h of these association m odels is similar to BR/EDR \nSecure Simple Pairing with  the following exceptions.\n\u2022 Just Works and Passkey Entry do not pr ovide any passive eavesdropping \nprotection. This is because  Secure Simple Pairing uses Elliptic Curve Diffie-\nHellman and LE l egacy pairing does not.\nIn LE Secure Connections pairing, the four association mode ls are functionally \nequivalent to BR/EDR  Secure Connections.\nThe use of each associati on model is based on the I/ O capabilities of the \ndevices.\n5.4.2  Key generation\nKey generation in Bluetoot h LE is performed by th e Host on each LE device \nindependent of any other LE device. By performing key generation in the Host, \nthe key generation algorithm s can be upgraded without th e need to change the \nController.\nNote: Key generation in BR/EDR is  performed in the Controller.\nBluetooth LE uses multiple keys, each for a specific purpose, as follows:\n\u2022 Confidentiality of data and device authentication\n\u2022 Authentication of  unencrypted data\n\u2022 Device Identity\nIn LE, the key used to provide confidentiality and  authentication is generated \nby combining contributions fr om each device during pairing.\n5.4.3  Encryption\nEncryption in Bluetooth LE uses AES- CCM cryptography. Like BR/EDR, in LE \nencryption is perform ed in the Controller.\n5.4.4  Signed Data\nBluetooth LE supports the ability to send authenticated data over an \nunencrypted ATT bearer between  two devices with a trus ted relationship. This \nis accomplished by signing the data wi th a Connection Signature Resolving \nKey (CSRK). The sending device places a signature after t he Data PDU. The \nreceiving device verifies the signature and if the signature is verified the Data", "start_char_idx": 0, "end_char_idx": 2100, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "1ca65e20-e684-4c82-8af4-303f8ced94c0": {"__data__": {"id_": "1ca65e20-e684-4c82-8af4-303f8ced94c0", "embedding": null, "metadata": {"page_label": "94", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "809069f3-1a44-42ff-90cd-80bb7a6375ae", "node_type": null, "metadata": {"page_label": "94", "file_name": "bluetooth-act.pdf"}, "hash": "1aec5c4da1f22af5ad0b73ed9a802e83866a37df9cdd704053e3667fdce84e60"}}, "hash": "1aec5c4da1f22af5ad0b73ed9a802e83866a37df9cdd704053e3667fdce84e60", "text": "Security overview Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 275\nArchitecture\nPDU is assumed to come fr om the trusted source. T he signature is composed \nof a Message Authenticatio n Code generated by the signing algorithm and a \ncounter. The counter is used to prot ect against a replay attack and is \nincremented on each signed  Data PDU sent.\n5.4.5  Privacy feature\nBluetooth LE supports a feat ure that reduces the abili ty to track a LE device \nover a period of time by changing the Bl uetooth Device Addr ess on a frequent \nbasis.\nIn order for a device usi ng the privacy feature to re connect to known devices, \nthe device address, referred to as the pr ivate address, must be resolvable by \nthe other device. The priv ate address is generated us ing the devic e\u2019s identity \nresolving key (IRK) exchanged during the bondi ng procedure.\nThe term \u201cresolution\u201d means a proce ss used by a device to calculate the \ndevice Identity Address from the rece ived private address and the IRK, while \nthe state \u201cresolved\u201d is the successful resu lt of a resolution.\nThere are two variants of the privacy feature. In the first variant, private \naddresses are resolved and generated by the Host. In  the second variant, \nprivate addresses are resolved and gene rated by the C ontroller without \ninvolving the Host after t he Host provides the Cont roller device identity \ninformation. In addition, the second variant may in volve the Host when the \nresolving list in the Contro ller cannot store all the dev ice identity resolving keys \nnecessary for bonded devices.\nThere are two modes of privacy: dev ice privacy mode and network privacy \nmode. A device in device privacy mode is only concerned abo ut the privacy of \nthe device and will accept advertising packets from p eer devices that contain \ntheir Identity Address as well  as ones that contain a pr ivate address, even if the \npeer device has distributed its IRK in the past. In network privacy mode, a \ndevice will only accept advertising packe ts from peer devices that contain \nprivate addresses. By def ault, network privacy m ode is used when private \naddresses are resolved and gener ated by the Controller.\nThe Host maintains a resolving list by  adding and removi ng device identities. \nThe Host may provide the C ontroller with a complete reso lving list or a subset \nof the resolving list. A dev ice identity consists of th e peer\u2019s Identity Address \nand a local and peer\u2019s IRK pair.\nWhen the Controller perfo rms address resolution and t he Host needs to refer to \na peer device that is included in the resolving list, it  uses the peer\u2019s device \nIdentity Address. Likewise, a ll incoming events from t he Controller to the Host \nwill use the peer\u2019s device id entity, provided that the pe er\u2019s device address has \nbeen resolved. If the Cont roller cannot resolve the peer\u2019s device Identity \nAddress in an advertisement, it  may pass the event  to the Host fo r resolution in \nthe Host.", "start_char_idx": 0, "end_char_idx": 3018, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "d9999133-5816-4c80-b4be-38d4a4bcd3b8": {"__data__": {"id_": "d9999133-5816-4c80-b4be-38d4a4bcd3b8", "embedding": null, "metadata": {"page_label": "95", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "30e5f74c-7146-4d53-96ff-c7c35b39886b", "node_type": null, "metadata": {"page_label": "95", "file_name": "bluetooth-act.pdf"}, "hash": "e046e9a2f836b3777a4181901b8b9a3149c8016a8e2188f08adff88e589d26ab"}}, "hash": "e046e9a2f836b3777a4181901b8b9a3149c8016a8e2188f08adff88e589d26ab", "text": "Security overview Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 276\nArchitecture\nDevice filtering becomes possible when address resolution is  performed in the \nController because the peer \u2019s device Identity Address can be resolved prior to \nchecking whether it is in the Filter Accept List.\nFigure 5.4  shows a logical representation of the relationship between the \nController resolving list and the Contro ller Filter Accept List. Actual \nimplementations of the resolv ing list and Filter Accept  List are not required to \nfollow this model. The resolving list may be independent of the Filter Accept \nList.\nFigure 5.4:  Logical representation of the resolving list and Filter Accept List\nNote: Not all devices in t he Filter Accept List ar e device Identity Addresses.\n5.4.6  Encrypted Advertising Data\nThe privacy feature described in Section 5.4.5  allows the Bluetooth Device \nAddress to be changed peri odically while still allowi ng the fingerprinting of \ndevices based on the contents of their adver tising data. It is possible to encrypt \nadvertising data by encapsulating the normal advertisi ng data within an \nEncrypted Data data type using a pre-shared session key and a nonce. \nBecause the encrypted advertising data nonce is  changed whenever the \nprivate address is changed, the encrypt ed data before and af ter the change is \nalso different. This approach prevents t he tracking of device s based solely on \nthe private addre ss and advertising data.\nThe encrypted advertising data pre-shar ed session key is communicated only \nto peer devices that are aut horized to receive such in formation. Only devices \nthat have the key material can dec rypt and authenticate messages and track \nthe advertising device.\n5.5   [THIS SECTION IS NO LONGER USED]Local IRKPeer IRK Peer Device Identity Address Local IRK\nPeer IRK Peer Device Identity Address\nLocal IRK Peer IRK Peer Device Identity Address\nLocal IRK Peer IRK Peer Device Identity AddressDevice Identity Address\nDevice Identity Address\nDevice Identity Address\nDevice Identity Address\nDevice Identity AddressResolving ListFilter Accept List\nAddress Type\nAddress Type\nAddress Type\nAddress TypeAddress Type\nAddress Type\nAddress Type\nAddress Type\nAddress Type", "start_char_idx": 0, "end_char_idx": 2292, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "210d717b-50df-4856-87a0-c5d8cff50bf4": {"__data__": {"id_": "210d717b-50df-4856-87a0-c5d8cff50bf4", "embedding": null, "metadata": {"page_label": "96", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "afae9ee6-66d9-4863-8198-bdd6a0efb6ab", "node_type": null, "metadata": {"page_label": "96", "file_name": "bluetooth-act.pdf"}, "hash": "321e675f7281d03e8c3789f21b0ea38a5c8bfa54fb4e6f8aad9ba4337ca3ad2a"}}, "hash": "321e675f7281d03e8c3789f21b0ea38a5c8bfa54fb4e6f8aad9ba4337ca3ad2a", "text": "Security overview Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 277\nArchitecture\n5.6   KEY GENERATION BETWEE N BR/EDR AND LE PHYSICAL \nTRANSPORTS\nWhen two BR/EDR/LE devices suppor t Secure Connec tions over both \ntransports, keys for both tr ansports may be generated du ring a single pairing \nprocedure. The ability to convert keys fr om one transport to the other prevents \nthe need to pair twic e, thus enabling a better user experience.\nThe link key for BR/EDR generated duri ng Phase 4 of Secure  Simple Pairing \non the BR/EDR physical tr ansport may be converted to  a Long Term Key (LTK) \nfor use on the LE transport. Similarly,  an LTK generated during Phase 2 of \npairing on the LE physical transport ma y be converted to t he BR/EDR Link Key \nfor use on the BR/EDR physical transport.", "start_char_idx": 0, "end_char_idx": 861, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "91282c2c-4607-4fc9-8ab4-6bf74e6c0b4f": {"__data__": {"id_": "91282c2c-4607-4fc9-8ab4-6bf74e6c0b4f", "embedding": null, "metadata": {"page_label": "97", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9a62554e-0cfd-4f9d-ac67-ccfbdfda2f87", "node_type": null, "metadata": {"page_label": "97", "file_name": "bluetooth-act.pdf"}, "hash": "ccc0ee853416765f53ecda3daf9d3014e0934049d79981766c896caccf5b47eb"}}, "hash": "ccc0ee853416765f53ecda3daf9d3014e0934049d79981766c896caccf5b47eb", "text": "Bluetooth application architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 278\nArchitecture\n6  BLUETOOTH APPLICATION ARCHITECTURE\n6.1   BLUETOOTH PROFILES\nApplication interoperabil ity in the Bluetooth syst em is accomplished by \nBluetooth profiles. Bluetooth profiles def ine the required func tions and features \nof each layer in the Bluet ooth system from the PH Y to L2CAP and any other \nprotocols outside of this specificatio n. The profile defin es the vertical \ninteractions between the layers as well as the peer -to-peer interactions of \nspecific layers between devices.\nFigure 6.1:  Bluetooth profiles\nIn addition, application beha viors and data formats ar e also defined by the \nprofile. When two devices comply with all the requi rements of a Bluetooth \nprofile, interoperability of an application is enabled.\nAll profiles describe service discovery requirements necessary  for devices to \nconnect, find availa ble application services and connection information \nnecessary for making applic ation level connections.\n6.2   GENERIC ACCESS PROFILE\nThe Bluetooth system defin es a base profile which all Bluetooth devices \nimplement. This profile is  the Generic Access Profil e (GAP), which defines the \nbasic requirements of a Bluetooth device.  For instance, for BR/EDR, it defines \na Bluetooth device to incl ude the Radio, Baseband, Li nk Manager, L2CAP, and \nthe Service Discovery protocol functionality ; for LE, it defi nes the Physical L2CAP\nLink Manager\nBaseband\nRadio (PHY)GAPBluetooth ProfilesBluetooth Protocol Layers\nProfile #1\nProfile #2\nProfile #3", "start_char_idx": 0, "end_char_idx": 1646, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "4818d594-2715-4c5c-8c20-5d23603254d9": {"__data__": {"id_": "4818d594-2715-4c5c-8c20-5d23603254d9", "embedding": null, "metadata": {"page_label": "98", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8b430829-84c2-47b2-850b-83768e6763c8", "node_type": null, "metadata": {"page_label": "98", "file_name": "bluetooth-act.pdf"}, "hash": "aefe0a85361eab7e36a8eceb337f1159684b2b21f12053c489ec3cfc84603925"}}, "hash": "aefe0a85361eab7e36a8eceb337f1159684b2b21f12053c489ec3cfc84603925", "text": "Bluetooth application architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 279\nArchitecture\nLayer, Link Layer, L2CAP, Security M anager, Attribute Protocol and Generic \nAttribute Profile. This ties  all the various layers to gether to form the basic \nrequirements for a Bluetooth device. It  also describes the behaviors and \nmethods for device discovery, c onnection establishment, security, \nauthentication, association m odels and service discovery.\nIn BR/EDR, GAP defines a single role wi th functionality that may be present in \neach device. This functionality includes  how devices discovery each other, \nestablish connections and describes secu rity association models used for \nauthentication. In BR/EDR this functionality may be pr esent in both devices. It \nmay be necessary for a device to implem ent both the initia ting and accepting \nfunctionality if the device wants to discover or estab lish connections with all \ndevices. A device may only include eit her the initiating or the accepting \nfunctionality but it requires the remote device to  support the complimentary \nfunctionality to discovery or establish connections with t he device. For BR/\nEDR, the Controller is required to s upport all the functional ity, however the \nHost may limit this functionality bas ed on the other prof iles or use cases \nsupported by the device.\nIn LE, GAP defines four specific roles:  Broadcaster, Observer, Peripheral, and \nCentral. A device may support multip le LE GAP roles provided that the \nunderlying Controller suppo rts those roles or role combinations. Each role \nspecifies the requirements for the underlying Contro ller. This allows for \nControllers to be optimiz ed for specific use cases.\nThe Broadcaster role is optimized fo r transmitter only applications. Devices \nsupporting the Broadcaster role use advertising to broadcast data. The \nBroadcaster role does not support connecti ons. The Observer role is optimized \nfor receiver only applications. Devices supporting the Observer role are the \ncomplementary device for a Broadcas ter and receives broadcast data \ncontained in advertisements.  The Observer role does  not support connections. \nThe Peripheral role is optimized for de vices that support a single connection \nand are less complex than C entrals; it uses the Link  Layer Peripheral role \nwithin the connection. T he Central role supports multiple connections and is \nthe initiator for all connectio ns with devices in the Peri pheral role; it uses the \nLink Layer Central role within the connection. Devi ces supporting the Central \nrole generally support more complex fu nctions compared to the other LE GAP \nroles.\n6.3   PROFILE HIERARCHY\nSince all Bluetooth devices are required to implement GAP,  any additional \nprofiles implemented by  a Bluetooth device becom e supersets of GAP. \nDepending on the complexity of an applicati on or the ability to reuse common \nrequirements of functio nality of the Bluetooth system between many \napplications, additional gen eric profiles can be cr eated that depend on GAP or \nother generic profiles, as well  as enabling other profiles . A top level profile that \ndescribes application interoperability  is called an A pplication Profile.", "start_char_idx": 0, "end_char_idx": 3287, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "7d85c16e-6b18-4118-8ee3-b719c5805116": {"__data__": {"id_": "7d85c16e-6b18-4118-8ee3-b719c5805116", "embedding": null, "metadata": {"page_label": "99", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ae31376d-ea2a-4cfe-b41a-2f6cf7d0a0f5", "node_type": null, "metadata": {"page_label": "99", "file_name": "bluetooth-act.pdf"}, "hash": "6722505e4c645415388d280d411b6493a47024095049b1de180c106d28ce74af"}}, "hash": "6722505e4c645415388d280d411b6493a47024095049b1de180c106d28ce74af", "text": "Bluetooth application architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 280\nArchitecture\nFigure 6.2:  Profile hierarchy\nApplication profiles contain by referenc e GAP and any other ge neric profile that \ndescribes a set of common requ irements of the Bluetooth system.\n6.4   GENERIC ATTRIBUTE ARCHITECTURE\n6.4.1  Attribute Protocol\nTo allow devices to read  and write small data val ues held on a server, an \nAttribute Protocol (ATT) is defined. Each stored va lue, typically only a few \noctets, is known as an attribute. This pr otocol allows each at tribute to be self-\nidentifying using UUIDs to i dentify the type of data. These UUIDs ca n be well-\nknown assigned numbers defined in the Assigned Numbers document and \nassociated specifications, or  a vendor assigned 128-bit UUID.\nAttribute Protocol messages are sent ov er L2CAP channels, known as the ATT \nbearers.\nAttribute Protocol defines two roles: Client and Server. A device can be both an \nATT Client and an ATT Server at the sa me time. Attribute Protocol messages \non a single ATT bearer allow a single transaction in each direction to be \noutstanding at a time. When a response  to a message is received, the next \ntransaction can be initiated. When mult iple ATT bearers are created, each ATT \nbearer has a separate transaction model and therefore multiple ATT \ntransactions can be outstanding at the same time, one per bearer. This can be \nused to allow multiple higher laye r specifications to send messages \nconcurrently.\nThe ATT Server stores the attributes and accepts Attr ibute Protocol requests, \ncommands and confirmations  from the ATT Client. The ATT Server sends \nresponses to reque sts and, when confi gured by a higher layer, sends \nindications and notifi cations asynchronous ly to the ATT Client when specified \nevents occur on the ATT Server.Application Profile #1\nGeneric Profile #1\nGeneric Access\nProfile", "start_char_idx": 0, "end_char_idx": 1966, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "bf7a093c-888d-4813-acee-aba1536b44a3": {"__data__": {"id_": "bf7a093c-888d-4813-acee-aba1536b44a3", "embedding": null, "metadata": {"page_label": "100", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "765d5a12-3897-4e8a-a23e-ab508ac85deb", "node_type": null, "metadata": {"page_label": "100", "file_name": "bluetooth-act.pdf"}, "hash": "d397a5038d1f61ad479d407d78fecc6cd4157c9c0dead00d3e6d1769c5ca1d42"}}, "hash": "d397a5038d1f61ad479d407d78fecc6cd4157c9c0dead00d3e6d1769c5ca1d42", "text": "Bluetooth application architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 281\nArchitecture\n6.4.2  Generic Attribute Profile\nGeneric Attribute Profile (GATT) is built  on top of the Attrib ute Protocol (ATT) \nand establishes common oper ations and a framework fo r the data transported \nand stored by the At tribute Protocol. GATT defi nes two roles: Server and \nClient. A GATT Client or Se rver is an ATT Client or Server respectively that \nconforms to the requiremen ts in GATT. The GATT roles are not necessarily tied \nto specific GAP roles but may be specified by higher layer profiles. GATT and \nATT are not transport sp ecific and can be used  in both BR/EDR and LE. \nHowever, GATT and ATT are mandatory to implement in LE since it is used for \ndiscovering services.\nGATT also specifies the format of  data contained on the GATT Server. \nAttributes, as transported by  the Attribute Protocol, are formatted as Services  \nand Characteristics. Services may cont ain a collection of characteristics. \nCharacteristics contain a single va lue and any number of descriptors \ndescribing the characteristic value.\nWith the defined structure of services , characteristics and characteristic \ndescriptors a GATT Client that  is not specific to a prof ile can still traverse the \nGATT Server and display characteristic va lues to the user. The characteristic \ndescriptors can be used to display descript ions of the characteristic values that \nmay make the value under standable by the user.\n6.5   GATT-BASED PROFILE HIERARCHY\nThe GATT Profile specifies the struct ure in which profile  data is exchanged. \nThis structure defines basic elements su ch as services and characteristics, \nused in a profile.\nThe top level of the hierarch y is a profile. A profile is  composed of one or more \nservices necessary to fulfill a us e case. A service is composed of \ncharacteristics or references to other se rvices. Each characteristic contains a \nvalue and may contain optional informat ion about the value. The service and \ncharacteristic and the co mponents of the c haracteristic (i .e., value and \ndescriptors) contain the profile data and are all stored in A ttributes on the \nserver.", "start_char_idx": 0, "end_char_idx": 2250, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "342808db-825e-4a93-a6c9-cd5e30b7fca0": {"__data__": {"id_": "342808db-825e-4a93-a6c9-cd5e30b7fca0", "embedding": null, "metadata": {"page_label": "101", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "41a125e4-3a5d-4f24-85c6-593541001179", "node_type": null, "metadata": {"page_label": "101", "file_name": "bluetooth-act.pdf"}, "hash": "009377d123c2d08ccffa059496da7cb40f99c1e1ade286f36f3bff0d03553c27"}}, "hash": "009377d123c2d08ccffa059496da7cb40f99c1e1ade286f36f3bff0d03553c27", "text": "Bluetooth application architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 282\nArchitecture\nFigure 6.3:  GATT-Based Profile hierarchy\n6.5.1  Service\nA service is a collection of data and associated be haviors to accomplish a \nparticular function or featur e of a device or portions of a device. A service may \ninclude other primary or se condary services and/or a se t of characteristics that \nmake up the service.\nThere are two types of services: primary and secondary. A primary service is a \nservice that provides f unctionality of a device that  can be used on its own. A \nsecondary service is a servic e that provides additional functionalit y of a device \nin association with a primary service and  is included from at  least one primary \nservice on the device.\nTo maintain backward compat ibility with earlier client s, later revisions of a \nservice definition can only add new  included services or optional \ncharacteristics. Later revi sions of a service definiti on are also forbidden from \nchanging behaviors from previous revision of the service definition.\nServices may be used in one or more profiles to fulf ill a particular use case.3URILOH\n6HUYLFH\n&KDUDFWHULVWLF\n9DOXH\n'HVFULSWRU'HVFULSWRU3URSHUWLHV,QFOXGH\n&KDUDFWHULVWLF\n9DOXH\n'HVFULSWRU'HVFULSWRU3URSHUWLHV,QFOXGH6HUYLFH\n&KDUDFWHULVWLF\n9DOXH\n'HVFULSWRU'HVFULSWRU3URSHUWLHV,QFOXGH\n&KDUDFWHULVWLF\n9DOXH\n'HVFULSWRU'HVFULSWRU3URSHUWLHV,QFOXGH", "start_char_idx": 0, "end_char_idx": 1480, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "2db691ac-fbad-46f7-aca1-5399d6a20aea": {"__data__": {"id_": "2db691ac-fbad-46f7-aca1-5399d6a20aea", "embedding": null, "metadata": {"page_label": "102", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "31160153-fbb4-4ebb-9e04-6e496caa3451", "node_type": null, "metadata": {"page_label": "102", "file_name": "bluetooth-act.pdf"}, "hash": "6f2fe88c23f97a47708cdb933bfa7e1e52527cdd9e5375d13b50565839574123"}}, "hash": "6f2fe88c23f97a47708cdb933bfa7e1e52527cdd9e5375d13b50565839574123", "text": "Bluetooth application architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 283\nArchitecture\n6.5.2  Included services\nAn included service is a method to incor porate another service definition on the \nserver as part of the service including it. When a service includes another \nservice, the entire inclu ded service becomes part of the new service including \nany nested included services  and characteristics. T he included service still \nexists as an independent serv ice. There are no limits to the depth of nesting.\n6.5.3  Characteristic\nA characteristic is a value used in  a service along wi th properties and \nconfiguration informati on about how the value is accessed and information \nabout how the value is di splayed or represented. A characteristic definition \ncontains a characteristic declaration, characteristic proper ties, and a value. It \nmay also contain descriptors that descri be the value or permi t configuration of \nthe server with respect to the characteristic value.\n6.6   MESH-BASED  MODEL HIERARCHY\nThe Mesh Profile1 specifies the stru cture within which data is exchanged by \ndevices in a mesh network. This structure defines basic  building blocks such as \nmodels and properties.\nThe top level of the hierarchy is a model , which is either a client model or a \nserver model. A clie nt model can send messages to a server model and the \nserver model can us e other messages to respond to  the client model. Models \nenable devices to send standardized messages, using standardized data \nformats, to other device s that they have had no previous relationship with.\n6.6.1  Model\nA model is a collection of properties, states, messages, and associated \nbehaviors that accomplishes a particula r device function. A model defines and \nexposes states along with any asso ciated behavior. It also defines the \nmessages that are used to communica te between models wit hin devices in a \nmesh network. Messages are defined glo bally and are not model-specific. \nModels are immutable meani ng that features cannot  be added to or removed \nfrom a model definition. T herefore, the only way to add features to a model is \nby defining a new model that  extends an existing model  by defining new states, \nmessages, and behaviors. These new stat es and behaviors are linked to the \nexisting model using state binding. This ensures backwards and forwards \ncompatibility by allowing newer devices to access the newer features of the \nextended model, and olde r devices to access the base  features of an existing \nmodel.\n1. The Mesh Profile specif ication is available at https://www.bluetooth.com/specifications .", "start_char_idx": 0, "end_char_idx": 2696, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "6cf4f4cb-3508-408d-be66-5b32e528c3be": {"__data__": {"id_": "6cf4f4cb-3508-408d-be66-5b32e528c3be", "embedding": null, "metadata": {"page_label": "103", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ffa3bc08-7977-4519-b6d6-ad167b598973", "node_type": null, "metadata": {"page_label": "103", "file_name": "bluetooth-act.pdf"}, "hash": "5bbefef5b5f222ca27487a41ac130e3ccab70837edecfbdcd7acb32008c4d7b0"}}, "hash": "5bbefef5b5f222ca27487a41ac130e3ccab70837edecfbdcd7acb32008c4d7b0", "text": "Bluetooth application architecture Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 284\nArchitecture\n6.6.2  Properties\nA property adds context to a defined char acteristic. When sending data into a \nmesh network, it is very useful to label  data with the meani ng, or context, of \nthat data. This allows a device that rece ives a property to interpret that data \nwithout having to negotiate the context befo rehand. For example, a \ntemperature characteristic can be giv en a context about how  or when that \ntemperature was measured such as  \u201coutside temperature\u201d, \u201cindoor \ntemperature\u201d, or \u201coil temperature\u201d.\nProperties are defi ned globally and are no t model-specific.", "start_char_idx": 0, "end_char_idx": 735, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "f22ed49d-61ec-4dfd-85a0-98d1cbe17efc": {"__data__": {"id_": "f22ed49d-61ec-4dfd-85a0-98d1cbe17efc", "embedding": null, "metadata": {"page_label": "104", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "ccd7df73-5ee3-41f8-a057-ab243a385055", "node_type": null, "metadata": {"page_label": "104", "file_name": "bluetooth-act.pdf"}, "hash": "9e2c43552487f3bd973eba5e71163b12d218864041022a4ddabaa4f9f5d40f39"}}, "hash": "9e2c43552487f3bd973eba5e71163b12d218864041022a4ddabaa4f9f5d40f39", "text": "Coexistence and collocation Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 285\nArchitecture\n7  COEXISTENCE AND COLLOCATION\nBluetooth devices operate in the unlicensed 2.4 GHz Industrial, Scientific and \nMedical (ISM) band. Many other technologies util ize the ISM band, including \nwireless LAN, cordless phones, and micr owave ovens. The ISM band is also \nclose enough to other frequen cy bands that Bluetooth devices may be an \ninterferer of or a vict im of other technologies.\nRadios may be coll ocated or non-collocated. The term \"collocated\" is a loose \none - in this specification, collocated radios are assumed to be in the same \nproduct (a Multi-Radio Terminal or MRT) and may have mechanisms to \ncoordinate their activity in order to mitigate interference.\nDetermining the amount  of expected isolation betw een radios is important for \nchoosing an appropriate coexis tence mechanism. With sufficient isolation, \nfrequency division duplexing (F DD) techniques are the mo st efficient. With \ninsufficient isolation or a shared antenna, time divisi on duplexing (TDD) \ntechniques need to be used. In many ca ses, a combination of FDD and TDD \ntechniques are required to  achieve acceptable le vels of performance.\nThis specification supports a variety of features that help mitigate interference \nto other devices and to mini mize interference from ot her devices. Broadly, the \ntypes of solutions fall into  the following categories: \nType Description\nFrequency division Simultaneous use of multiple radios enabled by filters and/or isolation\nTime division One radio may transmit or receive at a time through scheduling or pri-\noritization\nTime alignment Activities of the collocated radios are aligned in the time domain to \noptimize performances by avoiding conflicting activities. E.g. Trans-\nmissions of multiple radios may o ccur simultaneously, multiple recep-\ntions may occur simultaneously, but it is not possible to transmit and \nreceive simultaneously\nHybrid frequency and time division Use of frequency division, time a lignment, and time division tech-\nniques depending on the relative frequencies in use by the radios, fil-ters and isolation\nTable 7.1:  Interfer ence mitigation types", "start_char_idx": 0, "end_char_idx": 2270, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "ea11600a-c982-4d96-b131-3120e0ec1462": {"__data__": {"id_": "ea11600a-c982-4d96-b131-3120e0ec1462", "embedding": null, "metadata": {"page_label": "105", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "83a2a83d-ad6b-4545-b112-781ae7751741", "node_type": null, "metadata": {"page_label": "105", "file_name": "bluetooth-act.pdf"}, "hash": "b8c58ea64c44acb3974cd2be17f3aa23d7ebfc06af0105c93ac3dc759f84adbf"}}, "hash": "b8c58ea64c44acb3974cd2be17f3aa23d7ebfc06af0105c93ac3dc759f84adbf", "text": "Coexistence and collocation Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 286\nArchitecture\n7.1   CORE FEATURES SU PPORTING COEXISTENCE AND \nCOLLOCATION\nThere are features in the s pecification to specifically  target the reduction of \ninterference from collocat ed or non-collocated devices. \n7.2   ADAPTIVE FREQUENCY HOPPING\nAdaptive Frequency Hopping (A FH) allows Bluetooth devic es to improve their \nimmunity to interference from and avoi d causing interference to other devices \nin the 2.4 GHz ISM band. The basic prin ciple is that Bluetooth channels are \nclassified into two catego ries, used and unused, where used channels are part \nof the hopping sequence and unused channel s are replaced in the hopping \nsequence by used channels in a pseudo -random way. This classification \nmechanism allows for the Bluetooth device to use either all or fewer than the \n79 channels available. The minimum number of channels  allowed by the \nBluetooth specification is 20.\nThe specification defi nes the aspects of AFH necessary to ensure \ninteroperability, includi ng the hopping kernel, Ba seband behavior, Link FeatureVersion\nIntroduced Description\nAdaptive Frequency Hopping 1.2 Allows devices to reduce the number of channels used in a piconet in order to avoid interferers\nHCI Set Host Channel Classification 1.2 Allows a Host to inform the local Bluetooth Control-ler of the channels that are occupied by a collo-\ncated technology\nEnhanced SCO (eSCO) 1.2 Added retransmissions to SCO for the purpose of combating interference\nMWS Coexistence Signaling CSA3 Provides a standardized interface between collo-cated radios for communicating information neces-sary to enable some coexistence techniques\nPiconet Clock Adjust 4.1 Allows a Bluetooth device to align the piconet clock \nwith an external technology, e.g. Long Term Evolu-tion (LTE)\nTrain Nudging 4.1 Provides a mechanism to improve the success rate of page and inquiry when the slots to receive the respective responses are periodically not available\nGeneralized Interlaced Scanning 4.1 Provides a mechanism to improve the success rate of page scan and inquiry scan when some slots are periodically not available for scanning\nSlot Availability Mask 5.0 Provides a mechanism for two Bluetooth devices to indicate to each other the availabilit y of their time \nslots\nTable 7.2:  Interference mitigation features", "start_char_idx": 0, "end_char_idx": 2434, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "f8ef79c1-5a0c-4334-aa89-7f3477b0b4a4": {"__data__": {"id_": "f8ef79c1-5a0c-4334-aa89-7f3477b0b4a4", "embedding": null, "metadata": {"page_label": "106", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "500ea70c-2817-4e7b-bc46-579605c68040", "node_type": null, "metadata": {"page_label": "106", "file_name": "bluetooth-act.pdf"}, "hash": "697d029ee065848a5587578ba41c0b118cb310ebe1ecf6f2a6d30b5b18402c7a"}}, "hash": "697d029ee065848a5587578ba41c0b118cb310ebe1ecf6f2a6d30b5b18402c7a", "text": "Coexistence and collocation Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 287\nArchitecture\nManager Protocol (LMP) commands, and Host Contro ller interface (HCI) \ncommands and events requi red to change and conf igure hopping sequences. \nThe Bluetooth Specificatio n also defines a mechani sm that allows for a \nPeripheral to report channe l classification inform ation to the Central.\nAdaptive Frequency Hopping utilizes metr ics obtained through many sources. \nThese metrics are analyzed and then the resulting Channel_Map is used by \nthe adaptive frequency hopping  kernel. The metrics ma y come from over-the-\nair measurements, data suppli ed by the Host (via the \nHCI_Set_AFH_Host_Channel_Classifica tion command), or reports by the \nPeripheral or from other hardware coexis tence interfaces.\nWhile AFH is a critical element in coexistence, it is not enough in some \ncircumstances.\n7.3   COEXISTENCE BETWEE N BLUETOOTH DEVICES AND \nWIRELESS LAN DEVICES\nCoexistence between Bluetoot h and Wireless LAN has traditionally been a \ncombination of Adaptive Frequency Hopping (AFH) and proprietary techniques \nto prioritize traffic bet ween the two protocols. T he specification does not \nspecify signaling between the Bluetooth Controller and a Wireless LAN device.\n7.4   MOBILE WIRELESS STANDARDS (MWS) COEXISTENCE\nSignificant interference can be present between the Bluetooth radio and a \ncollocated MWS radio operating in frequ ency bands adjacent  to the 2.4 GHz \nISM band. This interference can preven t one radio from re ceiving while the \nother radio is transmitting.\nThe \u201cFilter reco mmendations for Coexistenc e with LTE and WiMAX\u201d \nwhitepaper1 describes filter specifications that, in some cases, can reduce \ncollocated interference to an acceptable level. The specification includes \ncomplementary solutions to traditional filteri ng including features for Bluetooth \nControllers and Hosts as well as  signaling and me ssaging mechanisms \nbetween collocated MWS and Bluetooth radios. Figure 7.1  illustrates the \ngeneral architecture model  for these mechanisms. Th is architecture assumes \nseparate antennas with limited isolation.\n1. https://www.bluetooth.com/develop -with-bluetooth/bu ild/white-papers", "start_char_idx": 0, "end_char_idx": 2281, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "95262db2-adf9-45e9-b757-5c6caa50502e": {"__data__": {"id_": "95262db2-adf9-45e9-b757-5c6caa50502e", "embedding": null, "metadata": {"page_label": "107", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "8962aa57-8e79-4c3d-9f7b-76d7d78adc91", "node_type": null, "metadata": {"page_label": "107", "file_name": "bluetooth-act.pdf"}, "hash": "bdbec63a459cabfb4370d70459c958d4e276fde1a205f367d8808ef7dd0dc9b9"}}, "hash": "bdbec63a459cabfb4370d70459c958d4e276fde1a205f367d8808ef7dd0dc9b9", "text": "Coexistence and collocation Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 288\nArchitecture\nFigure 7.1:  MWS coexistence architecture\nTwo types of solutions have been consid ered. In the first solution, both \nBluetooth transmissions (TX)  and receptions (RX)  are constrained by \ncollocated MWS activities. Solutions of this type ar e called Pure TDM (Time \nDivision Multiplexed) Mode. In the seco nd solution, only Bl uetooth receptions \nare affected by collocated MWS transm issions and Bluetoot h transmissions do \nnot impact the operation of the collocat ed MWS. Solutions of this type are \ncalled Hybrid Mode and are ac hieved, for example, by using steep roll-off Band \nSelect Filters (BSFs) for the ISM band in the Bluetooth tr ansceiver. Hybrid \nMode applies where the Bluetooth transmission\u2019 s effect on MWS is sufficiently \nreduced via filtering that  the Bluetooth device c an transmit during the MWS \ndownlink time. This requires a fr equency guard band be tween the Bluetooth \nand MWS operational frequen cy ranges as well as constraints on both the \nBluetooth BSF and the MWS BSF. The requi rement for a time domain solution \nstill remains, but only to protect Bluetooth reception.\nThese solutions are facilitated by an MWS coexistence si gnaling mechanism \n(see [Vol 7] Part A ) and multiple transport layers (see [Vol 7] Part B  and [Vol 7] \nPart C ).\nMWS technologies operat e in licensed bands and use centralized scheduling \nto support Wide Area Network services. An MWS radio synchronizes both time \nand frequency with a network Base Station. The Base Station determines \nwhich MWS radio will transmit or rece ive and when. MWS radios have no \ncontrol over when to tr ansmit or receive. When Bluetooth transmissions \ninterfere with MWS rec eptions in the MRT, th e MWS radio can be rendered \nunusable if the Bluetooth radio transmits freely. Figure 7.2  shows how \nBluetooth activity can interfere with every MWS reception opportunity and \nsimilarly how MWS transmissi ons can interfere with Bluetooth reception. In the \nexample shown in Figure 7.2  the Bluetooth device in the MRT is operating as \nthe Central of a piconet. Blocks mark ed with a \u201cC\u201d are si ngle slot Central \ntransmissions and those marked with a \u201cP\u201d are single sl ot Peripheral \ntransmissions. The times at which reception by  the MWS device may be \ncorrupted by Bluetooth transmissi ons are marked with a red shade.Host\nBluetoothBluetooth\nControllerMWS\nDeviceBase \nStationCoex Signaling\nCo-located InterferenceMulti-Radio Terminal (MRT)", "start_char_idx": 0, "end_char_idx": 2592, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "f4146fef-8094-4b46-8ecd-7df856643da1": {"__data__": {"id_": "f4146fef-8094-4b46-8ecd-7df856643da1", "embedding": null, "metadata": {"page_label": "108", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "0a8d9220-535e-4528-862c-d9fd03822721", "node_type": null, "metadata": {"page_label": "108", "file_name": "bluetooth-act.pdf"}, "hash": "075e2589415370bcb84a038bd609dfa2849e9cbd3af81f426f33d9afd77dc366"}}, "hash": "075e2589415370bcb84a038bd609dfa2849e9cbd3af81f426f33d9afd77dc366", "text": "Coexistence and collocation Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 289\nArchitecture\nFigure 7.2:  MWS receptions interfered with by uncontrolled Bluetooth transmissions\nEven with the best relative  timing relationship (wh en the Bluetooth slot \nboundary is aligned with t he MWS frame boundar y), the Bluetooth radio in the \nMRT suffers reduced transmission and re ception opportunities due to time \nmultiplexing with the collocated MWS radi o. The Bluetooth radio only gets one \ntransmission/recept ion opportunity every MWS frame, as shown in Figure 7.3 . \nFigure 7.3:  Bluetooth radio has reduced transmission/receiving opportunities\nConsequently, three out of fo ur (for 5 ms MWS frames ) or seven out of eight \n(for 10 ms MWS frames) sl ot pairs of Bluetooth c an be punctured by MWS \nactivities. Furthermore, since Bluetooth  inquiry and paging use a sequence of \n16 channels at a time, when the Bluetooth radio in  the MRT is performing \ninquiry or paging the channel  sequence will repeat every 5 ms resulting in the \nsame channels being repeatedly punctured by  the collocated MWS activities, \nsee Figure 7.4 . As a result, there is a high pr obability that the remote scanning \ndevice will not be able to receive the page  or inquiry IDs within the current \ntimeout.\nWhen the inquiry or paging channel sequence gets repeatedly punctured, Train \nNudging can be used to add an additional offset to the clock bits in order to \nshift the channel sequence.C P C POne MWS Frame (5ms) \nC P C PC PMWS\nC P P C C P CExample where \nBluetooth is \nCentral and is not aligned with MWS \nframe boundary C PDownlink\n Uplink Downlink Downlink Uplink\nP\nC POne MWS Frame (5ms) \nPMWS\nP C C P C PBluetooth slot \nboundary is \naligned with MWS \nframe boundary C PUplink Downlink Uplink Downlink Downlink\nCP CP CPCP", "start_char_idx": 0, "end_char_idx": 1873, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "cbe82225-bf09-401f-b336-3f1533701d70": {"__data__": {"id_": "cbe82225-bf09-401f-b336-3f1533701d70", "embedding": null, "metadata": {"page_label": "109", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "9038eebc-b4d9-4266-8003-004d1963c107", "node_type": null, "metadata": {"page_label": "109", "file_name": "bluetooth-act.pdf"}, "hash": "cced8a8e15d87ced70a25b52aa0cbe59d3bdf927a9884db5a39a8740220dd404"}}, "hash": "cced8a8e15d87ced70a25b52aa0cbe59d3bdf927a9884db5a39a8740220dd404", "text": "Coexistence and collocation Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 290\nArchitecture\nFigure 7.4:  Bluetooth radio can suffer inquiry/page failures\nAs MWS transmissions interf ere with Bluetooth recepti ons in the MRT, up to \n50% of the transmitted IDs from the re mote inquiry/page device will not be \nreceived by the Bluetooth r adio in the MRT performing  scanning, as shown in \nFigure 7.5 .\nBased on the pattern of slots that are not available for sc anning, Generalized \nInterlaced Scanning can be used to t une the phase of t he second scan during \na back-to-back scan.\nFigure 7.5:  Bluetooth radio can suffer inquiry scan/page scan failures\n7.5   SYNCHRONIZING BLUE TOOTH WITH AN EXTERNAL \nTIMING SOURCE\nThis section provides an example to  illustrate the synch ronization of the \nBluetooth CLK with an MWS syst em so that the Bluetooth slots line up with the \nDownlink and Uplink times of the MWS system. The external frame in this \nexample is LTE TDD Frame Confi guration #1 and special subframe \nconfiguration #1; however the same mechanisms can be used for any external \nTDD/TDMA protocol. The example shows a time span of 10 ms.\n[Vol 7] Part A  defines the timing of the MWS frame as a fi xed offset from the \nFRAME_SYNC signal in the coexistenc e signaling. This is shown in Figure 7.6  \nas FS. FS can be defined by  the Host as any specif ic offset within the MWS FAILEDBluetooth\n&E17R$/\nMWS FAILED FAILED SUCCESSMWS Frame Duration (5 ms)\nBluetooth \nTransmit DisallowedBluetooth \nTransmit DisallowedBluetooth \nReception CorruptedT\nXT\nXR\nXR\nXR\nXR\nXR\nXR\nXR\nXR\nXT\nXT\nXT\nXT\nXT\nXT\nXT\nXT\nX\nUplink Downlink Downlink...\nSUCCESS SUCCESSMWS Frame Duration (5 ms)\nT\nXT\nXT\nXT\nXT\nXT\nXT\nXT\nXT\nXT\nXT\nXT\nXR\nXR\nXR\nXR\nXR\nXR\nXR\nXR\nXR\nXR\nX\nCentral\nPeripheral \n(MRT)\nMWS\nFAILED FAILED SUCCESSUplink Downlinkpage scan\nDownlinkpage scan", "start_char_idx": 0, "end_char_idx": 1899, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "0bccc458-618d-4397-986a-8c91b270685b": {"__data__": {"id_": "0bccc458-618d-4397-986a-8c91b270685b", "embedding": null, "metadata": {"page_label": "110", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "b2b3921e-a310-4302-8229-552b0b8c93d9", "node_type": null, "metadata": {"page_label": "110", "file_name": "bluetooth-act.pdf"}, "hash": "f94664cbddfc8949df949f63c7485611a93519492d26beaa490e854da6a33483"}}, "hash": "f94664cbddfc8949df949f63c7485611a93519492d26beaa490e854da6a33483", "text": "Coexistence and collocation Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 291\nArchitecture\nframe. For a picone t Central, the most  useful position fo r FS is the boundary \nbetween the uplink and the fo llowing downlink. This is because the Central \nneeds to transmit in a Ce ntral slot during the uplin k and then receive in the \nfollowing Peripheral slot during the downlink. Putti ng FS at this boundary \nallows the Central to  easily align its Bluetooth cl ock to put it between these \nslots. The situation is re versed in a Periph eral: FS is most useful on the \nboundary between the downlink and the following uplink.\nThe HCI command HCI_Set_Exte rnal_Frame_Configuration ( [Vol 4] Part E, \nSection 7.3.81 ) is used to descri be the MWS frame timing.  This knowledge, \ntogether with FS, allows th e Bluetooth Controller to align the Bluetooth clock \nwith the MWS frame timing so  as to minimize the effect  of mutual interference. \nThis is illustrated in Figure 7.6 . The red ovals show sl ot pairs where both MWS \nand Bluetooth transmit and  receive simultaneously and so  do not interfere with \neach other. The MWS frame structure in cludes a downlink por tion (\u201cD\u201d), an \nuplink portion (\u201cU\u201d), and a s pecial portion (\u201cS\u201d) that includes a downlink and \nuplink portion separated by a guard period (\u201cGP\u201d).\nFigure 7.6:  Alignment of MWS frame timing and Bluetooth clock\nNote: In LTE, if the implementation does not have access to the exact LTE \ntiming it can assume that  the downlink-to- uplink boundary is t he middle of the \nGP in a special LTE subframe.\n7.6   PICONET CLOCK ADJUSTMENT\nAs discussed in the previous section,  aligning the MWS a nd Bluetooth clocks \ncorrectly greatly improves  throughput on bot h technologies. The Central has \ntwo mechanisms at its disposal  to mitigate misalignments.\nCoarse Clock Adjustments can be used to  move the Bluetooth CLK using the \nLMP_CLK_ADJ PDU. The clk _adj_us parameter is used to  align the slots with \nthe MWS alignment  point indicated by t he FRAME_SYNC signal. The \nclk_adj_slots parameter can be used to move the CLK several slots forward in \ntime. This can be useful to align e.g.  eSCO. Coarse Clock Adjustment is \nexpected to be used only rarely, for instance at MW S connection or when the \nMWS frame timing changes due to roami ng. Coarse Clock Adjustment can \nonly be used when all Peripherals in the piconet support it.\nThe other option for the Central is to use Clock Dragging. This is a method of \nslowly adjusting the phase of the clock backward or  forward by making the DSUUDDSUUDFS\n3&3&3&3&3&3&3&3&\n&3&3&3&3&3&3&3&3Middle of GP\nCollocated \n&HQWUDO\nCollocated \n3HULSKHUDO", "start_char_idx": 0, "end_char_idx": 2715, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "7b05345f-b636-426b-9240-2daf9726d687": {"__data__": {"id_": "7b05345f-b636-426b-9240-2daf9726d687", "embedding": null, "metadata": {"page_label": "111", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "da4d4de2-51bd-43e0-9ba6-02ea4caa27ab", "node_type": null, "metadata": {"page_label": "111", "file_name": "bluetooth-act.pdf"}, "hash": "cb01e3d4328735bda6ddc803d8b799b10cb893ed06422934a53035dbdd9f6910"}}, "hash": "cb01e3d4328735bda6ddc803d8b799b10cb893ed06422934a53035dbdd9f6910", "text": "Coexistence and collocation Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 292\nArchitecture\nslots a few \u00b5s shorter or longer, resp ectively, until the desired CLK phase has \nbeen achieved. It should be noted that this is a very slow  rate of adjustment, as \nit is designed to allow a legacy device to track the change, and therefore the \nrequirements of [Vol 2] Part B, Section 1.1  mean that Clock Dragging must not \nbe done at a faster rate than the maximum nat ural drift between devices. For \nthis reason its main use is to facilita te small corrections over time if a \nmisalignment with the MWS system is detect ed. If any device is connected that \ndoes not support Coarse Cl ock Adjustment, slowly mo ving the Peripheral using \nClock Dragging is the only option.\nIt is recommended to let t he collocated device be the Central, when possible, \nas it can react much fast er to correct mi salignments. If a Peripheral is the \ncollocated device, doing a role switch  to make it Central may be worth \nconsidering. Alternatively a Peripheral  can send a Picone t Clock Adjustment \nRequest LMP packet to the C entral. The Central then has  the option to perform \na Coarse Clock Adjustme nt, Clock Dragging, or to reject the request.\n7.7   SLOT AVAILABILITY MASK (SAM)\nSlot Availability Mask (SAM) allows two Bluetooth devices  to indicate to each \nother time slots that are available for transmission and reception. The SAM slot \nmap specifies the av ailability or other wise of Bluetooth slot s. A slot could be \nunavailable because of exter nal conditions (e.g., MWS c oexistence) or internal \nconditions (e.g., scatternet commi tments). SAM does not impose new \nmandatory rules for the scheduling of BR/EDR time  slots. Instead, it merely \nprovides information whic h allows Controllers to refine their scheduling of \nBluetooth slots to improve performance.\nSAM slot maps are calcul ated by the Controller it self based on its scheduling \nrequirements. There are no HCI comman ds defined specifically for SAM, \nmerely LMP sequences that enable devic es to exchange m aps and indicate \nthe map in use. The HC I commands HCI_Set_Exter nal_Frame_Configuration \n(see [Vol 4] Part E,  Section 7.3.81 ) and HCI_Set_MWS_PATTERN_-\nConfiguration (see [Vol 4] Part E,  Section 7.3.85 ) and real-time signals (e.g., \nMWS_PATTERN_Index or FR AME_SYNC) provided by the Coexistence Logi-\ncal Interface (see [Vol 7] Part A ) contain information co ncerning the appropriate \nSAM_Index and SAM anchor point to us e for MWS coexistence; these may \ntherefore trigger these LMP sequences.\nA Controller may choose to perform a Piconet Clock Adjustment before \ninitiating an LMP_SAM_SWITCH sequence so as to increase the number of \nslot pairs available per MWS frame.", "start_char_idx": 0, "end_char_idx": 2813, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "614ea8a3-ae81-4924-9492-4e4fe4bfe8fa": {"__data__": {"id_": "614ea8a3-ae81-4924-9492-4e4fe4bfe8fa", "embedding": null, "metadata": {"page_label": "112", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "d58051b5-b0b4-4172-997f-033e64e159e3", "node_type": null, "metadata": {"page_label": "112", "file_name": "bluetooth-act.pdf"}, "hash": "29759d5896474ad7c5842d86a509e1795debb92ab0c88b9aa173483f4c434eca"}}, "hash": "29759d5896474ad7c5842d86a509e1795debb92ab0c88b9aa173483f4c434eca", "text": "Direction finding using Bluetooth Low Energy Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 293\nArchitecture\n8  DIRECTION FINDING USING BLUETOOTH LOW \nENERGY\nAn LE device can make its direction avai lable for a peer devi ce by transmitting \ndirection finding enabled packets. Using direction information from several \ntransmitters and profile-level information giving their locations, an LE radio can \ncalculate its own position.\nThis feature is support ed over the LE Uncoded PH Ys, but not over the LE \nCoded PHY.\n8.1   ANGLE OF ARRIVAL (AOA) METHOD\nAn LE device can make its direction availabl e to a peer device by transmitting \ndirection finding enabled packe ts using a single antenna.\nThe peer device, consisting of an RF  switch and antenn a array, switches \nantennae while receiving par t of those packets and c aptures IQ samples. The \nIQ samples can be used to calculate the phase difference in the radio signal \nreceived using different el ements of the antenna array,  which in turn can be \nused to estimate the angle of arrival (AoA).\nFigure 8.1:  Angle of Arrival methodRF\nSwitch\nLE Receiver\nAoA EstimationLE TransmitterAoA", "start_char_idx": 0, "end_char_idx": 1204, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "8f9dc688-7207-4963-90c8-728860bee174": {"__data__": {"id_": "8f9dc688-7207-4963-90c8-728860bee174", "embedding": null, "metadata": {"page_label": "113", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "e9760275-71ef-4431-a6ca-1ffb9b43e485", "node_type": null, "metadata": {"page_label": "113", "file_name": "bluetooth-act.pdf"}, "hash": "5ccf2049f1dc136e740fa02bc46185072c9ab4c8194feaef120f32c2c359ee8a"}}, "hash": "5ccf2049f1dc136e740fa02bc46185072c9ab4c8194feaef120f32c2c359ee8a", "text": "Direction finding using Bluetooth Low Energy Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 294\nArchitecture\nConsider a receiver devic e with an antenna array cons isting of two antennae, \nseparated by distance d. The transmitter device us es a single antenna to \ntransmit a signal. As shown in Figure 8.2 , a perpendicular line can be drawn \nfrom an incoming signal  wave front extending to the furthest antenna (antenna \n2) at the point of inters ection to the closest antenna (antenna 1). The adjacent \nside of that right tr iangle represents the pat h difference relative to the angle of \nincidence of that wave  front between bot h antennae. The phase difference, \u03c8, \nin the signal arriving at the two antennae is then\n\u03c8 = (2\u03c0d cos(\u03b8))/\u03bb\nwhere \u03bb is the wavelengt h of the signal and \u03b8 is the angle of arrival (measured \nfrom a line connecti ng the two antennae in the receiver), and so\n\u03b8 = arccos(( \u03c8\u03bb)/(2\u03c0d))\nNote: The distance d is prof ile-level information that is  used by the receiving \ndevice to calculate the angle of arrival.\nFigure 8.2:  Measuring the angle of arrival\n8.2   ANGLE OF DEPARTURE (AOD) METHOD\nA device consisting of an RF switch  and antenna array can make its angle of \ndeparture (AoD) detectable by transmi tting direction fi nding enabled packets, \nswitching antennae dur ing transmission.\nThe peer device receives those packe ts using a single antenna and captures \nIQ samples during part of those packets. Determination of the direction is \nbased on the different pr opagation delays of the LE radio si gnal between the \ntransmitting elements of t he antenna array and a receivin g single antenna. The \npropagation delays are dete ctable with IQ measurem ents. Any receiving LE \nradio with a single antenna that suppor ts the AoD feature can capture IQ \nsamples and, with the aid of  profile-level informat ion specifying the antenna d\u03b8 Radio signal\nAnte nna 1 Ante nna 2", "start_char_idx": 0, "end_char_idx": 1971, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "3121cf93-9368-4aad-8b4f-5945d36010fb": {"__data__": {"id_": "3121cf93-9368-4aad-8b4f-5945d36010fb", "embedding": null, "metadata": {"page_label": "114", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "a7e306e9-7ad0-4292-a1f1-9a8e7c608f8c", "node_type": null, "metadata": {"page_label": "114", "file_name": "bluetooth-act.pdf"}, "hash": "5de19edf2c37b41ec2d31831b3276d422456c14ed8cb75b70a064e3279a9f4a6"}}, "hash": "5de19edf2c37b41ec2d31831b3276d422456c14ed8cb75b70a064e3279a9f4a6", "text": "Direction finding using Bluetooth Low Energy Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 295\nArchitecture\nlayout of the transmitter, calculate the angle of inci dence of the incoming radio \nsignal.\nFigure 8.3:  Angle of departure method\nConsider a transmitter device with an antenna array consisting of two \nantennae, separated by distance d. The receiver device uses a single antenna \nto receive the signals. The phase difference, \u03c8, in the signal from antenna 1 \nand the signal from antenna 2 arriving at the receiver is then\n\u03c8 = (2\u03c0d cos(\u03b8))/\u03bb\nwhere \u03bb is the wavelength of the signal and \u03b8 is the angle of departure \n(measured from a line conne cting the two an tennae in the transmitter), and so\n\u03b8 = arccos(( \u03c8\u03bb)/(2\u03c0d))\nNote: The distance d is pr ofile-level information that  a transmitting device \nexchanges with the receiving device in  order for the re ceiving device to \ncalculate the angle of departure.RF\nSwitch\nLE Transmitter\nLE ReceiverAoD\nAoD Estimation", "start_char_idx": 0, "end_char_idx": 1036, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}, "f53e4d78-fb53-46d3-8223-c7066529b853": {"__data__": {"id_": "f53e4d78-fb53-46d3-8223-c7066529b853", "embedding": null, "metadata": {"page_label": "115", "file_name": "bluetooth-act.pdf"}, "excluded_embed_metadata_keys": [], "excluded_llm_metadata_keys": [], "relationships": {"1": {"node_id": "68e40242-55c4-4f32-878c-b2ee6a81e4a5", "node_type": null, "metadata": {"page_label": "115", "file_name": "bluetooth-act.pdf"}, "hash": "9728d55895c6eab5dd2abc40afc7cd29b6cfa3a7fb7d8421c16fe99e60a2fad3"}}, "hash": "9728d55895c6eab5dd2abc40afc7cd29b6cfa3a7fb7d8421c16fe99e60a2fad3", "text": "Direction finding using Bluetooth Low Energy Version Date: 2023-01-31\nBluetooth SIG ProprietaryBLUETOOTH CORE SPECIFICATION Version 5.4 |  Vol 1, Part A page 296\nArchitecture\nFigure 8.4:  Measuring the angle of departured\u027d \nRadio signalAnten na 1 Anten na 2", "start_char_idx": 0, "end_char_idx": 257, "text_template": "{metadata_str}\n\n{content}", "metadata_template": "{key}: {value}", "metadata_seperator": "\n"}, "__type__": "1"}}, "docstore/ref_doc_info": {"fd9e7a7d-90f3-4ccb-b4f9-57add24e258c": {"node_ids": ["a7fcd440-7cef-48d9-a0f7-3a7aff3a1ef5"], "metadata": {"page_label": "1", "file_name": "bluetooth-act.pdf"}}, "67fad07e-914b-418a-97b9-37a1aa4dc69e": {"node_ids": ["986e5383-c388-4ded-8231-a359dd57580c"], "metadata": {"page_label": "2", "file_name": "bluetooth-act.pdf"}}, "c4e97a49-dd88-4aa8-bf45-6cb9ad48c183": {"node_ids": ["9e32c649-c975-43d7-a871-f4c81fd7152e"], "metadata": {"page_label": "3", "file_name": "bluetooth-act.pdf"}}, "bd3aec19-a664-48f8-ac69-5afd3644580c": {"node_ids": ["49568944-65cd-4f85-be27-5b34f720420e"], "metadata": {"page_label": "4", "file_name": "bluetooth-act.pdf"}}, "44649460-c124-4a31-8539-ddf932b6df68": {"node_ids": ["87cc729f-115f-4827-9084-aade6573eb8a"], "metadata": {"page_label": "5", "file_name": "bluetooth-act.pdf"}}, "2996b822-0618-4677-a7c2-226dab5f6d85": {"node_ids": ["30c7970a-c05d-4a4c-af82-c46c8451661e"], "metadata": {"page_label": "6", "file_name": "bluetooth-act.pdf"}}, "5bdc6c15-8aac-4cbf-a234-325b67ce70d9": {"node_ids": ["b2732342-1f42-4d4b-ac21-df2f2ed1b8e4"], "metadata": {"page_label": "7", "file_name": "bluetooth-act.pdf"}}, "c32f54f9-4b29-4ea7-9dae-728b4d14d79e": {"node_ids": ["02833d39-4083-402d-b26e-88ea7b56e3f6"], "metadata": {"page_label": "8", "file_name": "bluetooth-act.pdf"}}, "15b6df17-8462-4a75-9d8c-dcf66c61d822": {"node_ids": ["7240fd42-2e5a-4c7e-84a0-e195bab2c5fc"], "metadata": {"page_label": "9", "file_name": "bluetooth-act.pdf"}}, "ea561b1a-82ab-416b-bac1-e42e602d7fd9": {"node_ids": ["313de812-0b00-447c-a72a-5040dcf31b58"], "metadata": {"page_label": "10", "file_name": "bluetooth-act.pdf"}}, "c54f7062-e008-45fe-a113-2a7a06f31866": {"node_ids": ["8267b3c6-de17-4d53-afc5-ffac106dad60"], "metadata": {"page_label": "11", "file_name": "bluetooth-act.pdf"}}, "0e3a4014-8d85-485f-91f4-cb86fe97d2b2": {"node_ids": ["b45293d6-bdc1-4393-8a60-11df40de0d36"], "metadata": {"page_label": "12", "file_name": "bluetooth-act.pdf"}}, "ae6bc19f-57d8-4549-9bcc-2944ffd42a52": {"node_ids": ["fe5ad608-5e12-44ad-9dfa-d5e67883b63c"], "metadata": {"page_label": "13", "file_name": "bluetooth-act.pdf"}}, "c58bf181-1fb2-41f8-9c82-3b040f2f9b51": {"node_ids": ["693d315a-2844-4ed1-ad0d-8979ac451dbf"], "metadata": {"page_label": "14", "file_name": "bluetooth-act.pdf"}}, "1954a776-1ab4-43c1-b320-376c90ec8a69": {"node_ids": ["b6500f2b-32fd-494e-8e2a-f6ad2a58a871"], "metadata": {"page_label": "15", "file_name": "bluetooth-act.pdf"}}, "7bfd13df-853f-4ade-a531-d47c39f449c6": {"node_ids": ["fcaf034c-d09f-4332-b90f-df1701758b0d"], "metadata": {"page_label": "16", "file_name": "bluetooth-act.pdf"}}, "8b39d494-c2e6-4d73-a722-ef75d9a90864": {"node_ids": ["0e0a8c1e-e97e-41e9-a131-86c65f3abd63"], "metadata": {"page_label": "17", "file_name": "bluetooth-act.pdf"}}, "15b0ac0b-2bb5-4421-b28d-1e49ec192a4c": {"node_ids": ["d0d98167-c6ec-4974-ba7a-f7690a05e5f0"], "metadata": {"page_label": "18", "file_name": "bluetooth-act.pdf"}}, "e5ed71a8-6627-4249-a475-c9fcd625ed1e": {"node_ids": ["eb6e25b2-4c2a-4f07-8693-89698386709a"], "metadata": {"page_label": "19", "file_name": "bluetooth-act.pdf"}}, "109c0842-97d1-45ab-8318-fdfc60a1d1c6": {"node_ids": ["01913195-a76f-4e86-ae94-1f1f9dd8c8dc"], "metadata": {"page_label": "20", "file_name": "bluetooth-act.pdf"}}, "4361c13f-4dbe-4086-b32b-f85d1ea0f9aa": {"node_ids": ["50ff4bfe-d91c-452a-835b-05119a137ba2"], "metadata": {"page_label": "21", "file_name": "bluetooth-act.pdf"}}, "3671ba0e-f39e-4b6a-8400-05dd0326c5e2": {"node_ids": ["c9a9d378-179f-4ae2-adc0-a8f86f5edd59"], "metadata": {"page_label": "22", "file_name": "bluetooth-act.pdf"}}, "643134e3-13c2-4eaa-ac04-fbbf28ad3dc7": {"node_ids": ["306e6da3-f326-4f14-8f67-595afd0dccd8"], "metadata": {"page_label": "23", "file_name": "bluetooth-act.pdf"}}, "deb7b3a6-1854-4ff0-8fb6-8c501d3f14a4": {"node_ids": ["5c3e6813-e259-40e5-955b-3079652d39bb"], "metadata": {"page_label": "24", "file_name": "bluetooth-act.pdf"}}, "a51a50b8-541b-4eeb-adb2-8b0483a41f82": {"node_ids": ["cb36a519-cc24-4933-a67e-84911e03cca7"], "metadata": {"page_label": "25", "file_name": "bluetooth-act.pdf"}}, "c99276b4-1814-44f1-a123-ac921213f846": {"node_ids": ["7d62ae4b-d180-4bef-97b1-6ac932c4a8a3"], "metadata": {"page_label": "26", "file_name": "bluetooth-act.pdf"}}, "a24ad36e-1ea9-4fb9-9dc0-e80cc5dec545": {"node_ids": ["f0e33102-6122-4a8f-8d07-c2f4564b30b0"], "metadata": {"page_label": "27", "file_name": "bluetooth-act.pdf"}}, "9081617d-9907-45d0-8175-fd230353d675": {"node_ids": ["8f2ef54d-5fcc-421a-a5ba-2b7ebfd45abc"], "metadata": {"page_label": "28", "file_name": "bluetooth-act.pdf"}}, "16f9a053-0364-41ea-b09a-1f5ba0fca4b5": {"node_ids": ["b179b7c0-d030-42cb-aa1a-9c6a901d7491"], "metadata": {"page_label": "29", "file_name": "bluetooth-act.pdf"}}, "fc1541df-30d7-4c6b-8850-1308dad5ce0e": {"node_ids": ["be403c1e-29b2-4a71-bcc0-85a87e226778"], "metadata": {"page_label": "30", "file_name": "bluetooth-act.pdf"}}, "2cca3d9b-3710-4ec9-b70c-c73d6d658c5a": {"node_ids": ["363fe45c-c7c9-44fc-8fa7-19c1186a2540"], "metadata": {"page_label": "31", "file_name": "bluetooth-act.pdf"}}, "661dc25f-b8ab-4e33-a869-54d5308328a0": {"node_ids": ["0789e25b-0c1b-44d4-a8f0-5cff936f64c8"], "metadata": {"page_label": "32", "file_name": "bluetooth-act.pdf"}}, "ee8b22c2-5a42-4c9a-b1b5-f55dd4eedd27": {"node_ids": ["4b269446-c1b1-4202-ad5b-8f8d590ec80e"], "metadata": {"page_label": "33", "file_name": "bluetooth-act.pdf"}}, "ee72869c-8103-4a93-bd16-0e69bd47991d": {"node_ids": ["56177f6e-6eba-4e49-9dcc-f919a3e88ea0"], "metadata": {"page_label": "34", "file_name": "bluetooth-act.pdf"}}, "6725f002-dfdf-462c-9ed8-73b094fe85b9": {"node_ids": ["eec34918-423a-4ff7-8df7-4e3af7be03d8"], "metadata": {"page_label": "35", "file_name": "bluetooth-act.pdf"}}, "ee64f81f-e9ab-489a-b68f-d0dd29f6b7ef": {"node_ids": ["732641dd-50db-4398-bcd9-56365e980bcc"], "metadata": {"page_label": "36", "file_name": "bluetooth-act.pdf"}}, "16310200-4f2a-4a4b-a0d4-dc3a8d7ef59a": {"node_ids": ["0367e4f3-4f59-40af-b7b0-ac23b35e02ab"], "metadata": {"page_label": "37", "file_name": "bluetooth-act.pdf"}}, "28024078-bddd-4533-8d6f-334ac3817080": {"node_ids": ["ae6d7c35-49ba-4f34-a8e7-e49c7638ebd4"], "metadata": {"page_label": "38", "file_name": "bluetooth-act.pdf"}}, "f3e81003-7039-4b88-b189-3eb250ece2df": {"node_ids": ["4dbe2125-6488-489a-a9e6-86f3366266c6"], "metadata": {"page_label": "39", "file_name": "bluetooth-act.pdf"}}, "59cdc56b-e1c3-429d-964b-268f4b4fc48d": {"node_ids": ["78f90e1f-364e-41d6-9c88-e0992e7be5d2"], "metadata": {"page_label": "40", "file_name": "bluetooth-act.pdf"}}, "67af2177-6a86-4b39-b061-5267ac5ffd9f": {"node_ids": ["f0354f07-1f39-4ca5-87f5-76feb0338a94"], "metadata": {"page_label": "41", "file_name": "bluetooth-act.pdf"}}, "e846dba3-7b85-4b0d-a55d-3298f0f585e4": {"node_ids": ["bd94504b-90af-4bb8-8700-ea37d24aa46e"], "metadata": {"page_label": "42", "file_name": "bluetooth-act.pdf"}}, "d33e5255-5028-4173-9b3d-407dfbdde01f": {"node_ids": ["59149e71-4af8-4d28-824c-1e53bb874aaf"], "metadata": {"page_label": "43", "file_name": "bluetooth-act.pdf"}}, "45a3acae-1110-4b84-affc-92699183004e": {"node_ids": ["45586b94-098c-49f3-a8c8-f3b38ec8c29e"], "metadata": {"page_label": "44", "file_name": "bluetooth-act.pdf"}}, "b04bf69d-dcf1-47fb-b628-09e8870e0408": {"node_ids": ["b5435b09-6fd7-4721-b40e-4660835b949e"], "metadata": {"page_label": "45", "file_name": "bluetooth-act.pdf"}}, "6b277395-b1fd-4ed2-b7ff-f472d1b213a8": {"node_ids": ["bdf48e56-4815-4a3f-bf8b-c72ecd997a32"], "metadata": {"page_label": "46", "file_name": "bluetooth-act.pdf"}}, "98737e73-c1f8-49e9-bff0-f9cac4435c2e": {"node_ids": ["9c8b75c8-f707-42da-a57b-5852f04dd68f"], "metadata": {"page_label": "47", "file_name": "bluetooth-act.pdf"}}, "d45df7f5-978e-4e43-9495-0145e4615a43": {"node_ids": ["12de26ba-57ce-403c-ae56-49fd1e9a0426"], "metadata": {"page_label": "48", "file_name": "bluetooth-act.pdf"}}, "16cc8acf-e57c-43de-a1a9-946c4deb1192": {"node_ids": ["6babf5b3-2bff-4c8e-90f2-76e61940e363"], "metadata": {"page_label": "49", "file_name": "bluetooth-act.pdf"}}, "80a78f2f-b97c-4577-83de-cb5814f1b4d9": {"node_ids": ["80bf8ed5-e637-4a41-96a8-65f00f97fc68"], "metadata": {"page_label": "50", "file_name": "bluetooth-act.pdf"}}, "a5fe3747-6e91-4927-8ee6-4c6662f1bf5b": {"node_ids": ["84297c4c-26f1-4791-956e-e0ac58d10240"], "metadata": {"page_label": "51", "file_name": "bluetooth-act.pdf"}}, "13631f8c-b01c-4684-8b1f-59ef8b5109fa": {"node_ids": ["d6ed6bab-a480-4f30-84c6-5b2a9720edce"], "metadata": {"page_label": "52", "file_name": "bluetooth-act.pdf"}}, "f2d3214f-74df-4fd5-bb97-f239a25c3add": {"node_ids": ["c7d8c73d-4894-4279-94b4-4522307bd022"], "metadata": {"page_label": "53", "file_name": "bluetooth-act.pdf"}}, "96a8ee11-63f3-4ebd-ac45-298e2dddc1ed": {"node_ids": ["9e65771e-3571-425c-9cda-6a714bb39333"], "metadata": {"page_label": "54", "file_name": "bluetooth-act.pdf"}}, "4a6126d1-854b-414f-b6a7-35f5a4dc256c": {"node_ids": ["5df3a9e0-6d27-4f45-871b-883d0d47daf3"], "metadata": {"page_label": "55", "file_name": "bluetooth-act.pdf"}}, "0ff96095-16a3-42d5-af96-819e86611188": {"node_ids": ["9e4876d3-6d00-4972-99ca-7aa957f9e9ed"], "metadata": {"page_label": "56", "file_name": "bluetooth-act.pdf"}}, "e6c904a8-304e-46f4-9f5a-92a7863d1226": {"node_ids": ["e7fdc715-d287-44d0-b933-b500aa9bcb99"], "metadata": {"page_label": "57", "file_name": "bluetooth-act.pdf"}}, "79400b61-8871-46c4-8ff3-4098a3b12bfb": {"node_ids": ["3ea71c3d-6de2-45aa-a225-d20010624f5b"], "metadata": {"page_label": "58", "file_name": "bluetooth-act.pdf"}}, "dfe7c0dd-275c-4c32-a059-05d62ad584d1": {"node_ids": ["4ec64300-02a6-4ba9-8967-9b6da448a451"], "metadata": {"page_label": "59", "file_name": "bluetooth-act.pdf"}}, "dbcf14c1-1e26-43c0-b67c-9ce8db47a609": {"node_ids": ["3969bd14-c6d5-4fd0-b2fc-e5d185c4d69b"], "metadata": {"page_label": "60", "file_name": "bluetooth-act.pdf"}}, "f56bd2be-9b11-4d2c-96c4-1c7ea377804a": {"node_ids": ["ff7e94b9-2a8c-4773-a990-32bbd98d8d3d"], "metadata": {"page_label": "61", "file_name": "bluetooth-act.pdf"}}, "6a5cce87-c601-4163-864c-9fea2bc08c2b": {"node_ids": ["53958838-61df-43b2-9c28-65edde642b0f"], "metadata": {"page_label": "62", "file_name": "bluetooth-act.pdf"}}, "5aad374a-7790-4623-ade3-17659d0a082f": {"node_ids": ["f0c9aa81-9088-488d-92e5-7d039cad6456"], "metadata": {"page_label": "63", "file_name": "bluetooth-act.pdf"}}, "477c4fb6-b9db-41b3-ad24-57c75f9d0718": {"node_ids": ["b4a9e7fb-b449-464a-9333-ef0d0c368c2f"], "metadata": {"page_label": "64", "file_name": "bluetooth-act.pdf"}}, "d993df11-279b-415d-9e35-af5855485551": {"node_ids": ["015d3bf6-a90c-47bb-b848-6a19fa08b5e3"], "metadata": {"page_label": "65", "file_name": "bluetooth-act.pdf"}}, "39de1414-2790-4e12-961b-a277ac6ae229": {"node_ids": ["21ca132f-be9f-41f8-9d9f-a8f0276424f9"], "metadata": {"page_label": "66", "file_name": "bluetooth-act.pdf"}}, "eb824861-b315-47ea-83d7-668704b49828": {"node_ids": ["87c9b615-77eb-475f-8142-b229830fee79"], "metadata": {"page_label": "67", "file_name": "bluetooth-act.pdf"}}, "c2c5292c-410f-4f17-9b6d-d3ee558792dd": {"node_ids": ["77219cd0-01f3-49ff-b5b6-fd1ea11cef0a"], "metadata": {"page_label": "68", "file_name": "bluetooth-act.pdf"}}, "f83ff640-ee99-4f4b-9434-725bbf938472": {"node_ids": ["c14e05e0-0fc9-4b0c-97e0-ef0b058ee239"], "metadata": {"page_label": "69", "file_name": "bluetooth-act.pdf"}}, "95e0184f-c068-4b04-9a23-4bde34054d39": {"node_ids": ["727597de-3210-4119-85dc-81c9ebd4e461"], "metadata": {"page_label": "70", "file_name": "bluetooth-act.pdf"}}, "ebe3c7b7-7c98-4b29-871a-ac336e68a6ff": {"node_ids": ["0d992a90-df3d-4134-b56b-9a77696cd39f"], "metadata": {"page_label": "71", "file_name": "bluetooth-act.pdf"}}, "a6ef86a2-62a9-4129-858a-fdfb2a3436b9": {"node_ids": ["f55e02b1-b552-42ff-a5d7-7d734f4ac3ac"], "metadata": {"page_label": "72", "file_name": "bluetooth-act.pdf"}}, "fb915e19-4109-4f28-9bf8-0f139282c890": {"node_ids": ["36ebaf0f-1993-4159-8aff-cc9982f41c84"], "metadata": {"page_label": "73", "file_name": "bluetooth-act.pdf"}}, "2f4b0dd3-69aa-4305-bdbe-724ea92884f3": {"node_ids": ["c50dafcf-3d5c-4bd5-9642-a47fd359bf51"], "metadata": {"page_label": "74", "file_name": "bluetooth-act.pdf"}}, "8b610734-b59a-467c-8095-2c95e5c2db2c": {"node_ids": ["4664afea-8b84-4c36-8418-ef62294c8237"], "metadata": {"page_label": "75", "file_name": "bluetooth-act.pdf"}}, "9083b8d0-3a40-4035-a5dd-3bf99ad4ea27": {"node_ids": ["cc7ef73c-0a19-43b9-ae21-39477a2a1d01"], "metadata": {"page_label": "76", "file_name": "bluetooth-act.pdf"}}, "8d2cc84c-9f5b-4f07-ac8d-519c27216e36": {"node_ids": ["cf0fe1a9-84ec-4db1-8b85-1f7d32e613c8"], "metadata": {"page_label": "77", "file_name": "bluetooth-act.pdf"}}, "3ee00b36-48f6-47f8-bb41-2f1cc567c5ac": {"node_ids": ["85800353-fd9a-4f62-8f47-73dd03da4e73"], "metadata": {"page_label": "78", "file_name": "bluetooth-act.pdf"}}, "6468dbed-28f5-499b-84ca-916e53350ed5": {"node_ids": ["20d84b55-9fef-4be9-ba93-6625a96061f9"], "metadata": {"page_label": "79", "file_name": "bluetooth-act.pdf"}}, "fa7c6645-be05-4f87-9ec2-48ab2f1cbe95": {"node_ids": ["e3f01320-752c-4808-958d-7d6bdc06af2e"], "metadata": {"page_label": "80", "file_name": "bluetooth-act.pdf"}}, "f439ecee-0378-4afa-9268-5f41144db7bf": {"node_ids": ["e89a5c63-dda1-4b56-931e-5fb3f743ba03"], "metadata": {"page_label": "81", "file_name": "bluetooth-act.pdf"}}, "0f461362-1320-4bf6-8edc-fba074a7eac9": {"node_ids": ["f4820f98-8c6c-4a97-ad52-f544afa37847"], "metadata": {"page_label": "82", "file_name": "bluetooth-act.pdf"}}, "d35a8d7b-e234-459e-8a4e-885f1e6251d7": {"node_ids": ["03079138-c4f9-440b-a528-ff7e06d79861"], "metadata": {"page_label": "83", "file_name": "bluetooth-act.pdf"}}, "31a55762-0b76-46e5-a653-b3a61c3a2601": {"node_ids": ["8775fae5-0691-4ead-acb5-1212d2b9163f"], "metadata": {"page_label": "84", "file_name": "bluetooth-act.pdf"}}, "b2155022-da43-48ea-a1dd-62c4e9196a62": {"node_ids": ["b930a6c9-fa51-4b26-b03c-d9a1901dc266"], "metadata": {"page_label": "85", "file_name": "bluetooth-act.pdf"}}, "229747fc-255c-4bcc-806f-bc0fd0892653": {"node_ids": ["9b47ed51-8772-48b1-b816-c1589beec19c"], "metadata": {"page_label": "86", "file_name": "bluetooth-act.pdf"}}, "e386fff7-1c92-47de-a726-0a061ec213c1": {"node_ids": ["878f9d29-9262-49d8-9fac-acaa01151690"], "metadata": {"page_label": "87", "file_name": "bluetooth-act.pdf"}}, "6b6d189d-8bbe-4bd3-b394-77dbd6e60828": {"node_ids": ["340d923a-feb4-4ddb-a2ff-f1244ba17226"], "metadata": {"page_label": "88", "file_name": "bluetooth-act.pdf"}}, "6de8040c-b01e-44d1-9271-24f65385fc1c": {"node_ids": ["1a136364-2ef4-42b6-9293-42f0da2a76b0"], "metadata": {"page_label": "89", "file_name": "bluetooth-act.pdf"}}, "c2cb8f24-3914-43a8-bcd4-5a1b165e5fe8": {"node_ids": ["c6ccd485-5ee0-4160-87bb-f8b86d0e1f13"], "metadata": {"page_label": "90", "file_name": "bluetooth-act.pdf"}}, "2e81cd8f-9580-46bb-bf6b-ea69eacaabc4": {"node_ids": ["192d90b9-9ce6-4830-9b5f-42c0c7c09f39"], "metadata": {"page_label": "91", "file_name": "bluetooth-act.pdf"}}, "e266554f-2c54-4365-be7a-bf7b7e8ba8cc": {"node_ids": ["6e3adf8f-03c3-4263-8678-595590555bea"], "metadata": {"page_label": "92", "file_name": "bluetooth-act.pdf"}}, "7f700ecf-729d-4882-a1da-cc35db20d881": {"node_ids": ["99421063-a5a2-4d26-9c8a-e23ee170a2b3"], "metadata": {"page_label": "93", "file_name": "bluetooth-act.pdf"}}, "809069f3-1a44-42ff-90cd-80bb7a6375ae": {"node_ids": ["1ca65e20-e684-4c82-8af4-303f8ced94c0"], "metadata": {"page_label": "94", "file_name": "bluetooth-act.pdf"}}, "30e5f74c-7146-4d53-96ff-c7c35b39886b": {"node_ids": ["d9999133-5816-4c80-b4be-38d4a4bcd3b8"], "metadata": {"page_label": "95", "file_name": "bluetooth-act.pdf"}}, "afae9ee6-66d9-4863-8198-bdd6a0efb6ab": {"node_ids": ["210d717b-50df-4856-87a0-c5d8cff50bf4"], "metadata": {"page_label": "96", "file_name": "bluetooth-act.pdf"}}, "9a62554e-0cfd-4f9d-ac67-ccfbdfda2f87": {"node_ids": ["91282c2c-4607-4fc9-8ab4-6bf74e6c0b4f"], "metadata": {"page_label": "97", "file_name": "bluetooth-act.pdf"}}, "8b430829-84c2-47b2-850b-83768e6763c8": {"node_ids": ["4818d594-2715-4c5c-8c20-5d23603254d9"], "metadata": {"page_label": "98", "file_name": "bluetooth-act.pdf"}}, "ae31376d-ea2a-4cfe-b41a-2f6cf7d0a0f5": {"node_ids": ["7d85c16e-6b18-4118-8ee3-b719c5805116"], "metadata": {"page_label": "99", "file_name": "bluetooth-act.pdf"}}, "765d5a12-3897-4e8a-a23e-ab508ac85deb": {"node_ids": ["bf7a093c-888d-4813-acee-aba1536b44a3"], "metadata": {"page_label": "100", "file_name": "bluetooth-act.pdf"}}, "41a125e4-3a5d-4f24-85c6-593541001179": {"node_ids": ["342808db-825e-4a93-a6c9-cd5e30b7fca0"], "metadata": {"page_label": "101", "file_name": "bluetooth-act.pdf"}}, "31160153-fbb4-4ebb-9e04-6e496caa3451": {"node_ids": ["2db691ac-fbad-46f7-aca1-5399d6a20aea"], "metadata": {"page_label": "102", "file_name": "bluetooth-act.pdf"}}, "ffa3bc08-7977-4519-b6d6-ad167b598973": {"node_ids": ["6cf4f4cb-3508-408d-be66-5b32e528c3be"], "metadata": {"page_label": "103", "file_name": "bluetooth-act.pdf"}}, "ccd7df73-5ee3-41f8-a057-ab243a385055": {"node_ids": ["f22ed49d-61ec-4dfd-85a0-98d1cbe17efc"], "metadata": {"page_label": "104", "file_name": "bluetooth-act.pdf"}}, "83a2a83d-ad6b-4545-b112-781ae7751741": {"node_ids": ["ea11600a-c982-4d96-b131-3120e0ec1462"], "metadata": {"page_label": "105", "file_name": "bluetooth-act.pdf"}}, "500ea70c-2817-4e7b-bc46-579605c68040": {"node_ids": ["f8ef79c1-5a0c-4334-aa89-7f3477b0b4a4"], "metadata": {"page_label": "106", "file_name": "bluetooth-act.pdf"}}, "8962aa57-8e79-4c3d-9f7b-76d7d78adc91": {"node_ids": ["95262db2-adf9-45e9-b757-5c6caa50502e"], "metadata": {"page_label": "107", "file_name": "bluetooth-act.pdf"}}, "0a8d9220-535e-4528-862c-d9fd03822721": {"node_ids": ["f4146fef-8094-4b46-8ecd-7df856643da1"], "metadata": {"page_label": "108", "file_name": "bluetooth-act.pdf"}}, "9038eebc-b4d9-4266-8003-004d1963c107": {"node_ids": ["cbe82225-bf09-401f-b336-3f1533701d70"], "metadata": {"page_label": "109", "file_name": "bluetooth-act.pdf"}}, "b2b3921e-a310-4302-8229-552b0b8c93d9": {"node_ids": ["0bccc458-618d-4397-986a-8c91b270685b"], "metadata": {"page_label": "110", "file_name": "bluetooth-act.pdf"}}, "da4d4de2-51bd-43e0-9ba6-02ea4caa27ab": {"node_ids": ["7b05345f-b636-426b-9240-2daf9726d687"], "metadata": {"page_label": "111", "file_name": "bluetooth-act.pdf"}}, "d58051b5-b0b4-4172-997f-033e64e159e3": {"node_ids": ["614ea8a3-ae81-4924-9492-4e4fe4bfe8fa"], "metadata": {"page_label": "112", "file_name": "bluetooth-act.pdf"}}, "e9760275-71ef-4431-a6ca-1ffb9b43e485": {"node_ids": ["8f9dc688-7207-4963-90c8-728860bee174"], "metadata": {"page_label": "113", "file_name": "bluetooth-act.pdf"}}, "a7e306e9-7ad0-4292-a1f1-9a8e7c608f8c": {"node_ids": ["3121cf93-9368-4aad-8b4f-5945d36010fb"], "metadata": {"page_label": "114", "file_name": "bluetooth-act.pdf"}}, "68e40242-55c4-4f32-878c-b2ee6a81e4a5": {"node_ids": ["f53e4d78-fb53-46d3-8223-c7066529b853"], "metadata": {"page_label": "115", "file_name": "bluetooth-act.pdf"}}}}